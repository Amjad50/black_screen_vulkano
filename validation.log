Thread 0, Frame 0:
vkCreateInstance(pCreateInfo, pAllocator, pInstance) returns VkResult VK_SUCCESS (0):
    pCreateInfo: const VkInstanceCreateInfo* = 0x7ffe81d03960:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO (1)
        pNext:               const void* = NULL
        flags:     VkInstanceCreateFlags = 1 (VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR)
        pApplicationInfo: const VkApplicationInfo* = 0x7ffe81d04358:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_APPLICATION_INFO (0)
            pNext:               const void* = NULL
            pApplicationName:    const char* = NULL
            applicationVersion:     uint32_t = 0
            pEngineName:         const char* = NULL
            engineVersion:          uint32_t = 0
            apiVersion:             uint32_t = 4206827
        enabledLayerCount:      uint32_t = 0
        ppEnabledLayerNames: const char* const* = 0x7ffe81d042b8
        enabledExtensionCount:  uint32_t = 7
        ppEnabledExtensionNames: const char* const* = 0x55e08fab5ea0
            ppEnabledExtensionNames[0]: const char* const = "VK_KHR_get_physical_device_properties2"
            ppEnabledExtensionNames[1]: const char* const = "VK_KHR_get_surface_capabilities2"
            ppEnabledExtensionNames[2]: const char* const = "VK_KHR_portability_enumeration"
            ppEnabledExtensionNames[3]: const char* const = "VK_KHR_surface"
            ppEnabledExtensionNames[4]: const char* const = "VK_KHR_wayland_surface"
            ppEnabledExtensionNames[5]: const char* const = "VK_KHR_xcb_surface"
            ppEnabledExtensionNames[6]: const char* const = "VK_KHR_xlib_surface"
        pNext:               const void* = NULL
    pAllocator: const VkAllocationCallbacks* = NULL
    pInstance:           VkInstance* = 0x55e08fcc8e70

UNASSIGNED-khronos-validation-createinstance-status-message(INFO / SPEC): msgNum: -671457468 - Validation Information: [ UNASSIGNED-khronos-validation-createinstance-status-message ] Object 0: handle = 0x55e08fcc8e70, type = VK_OBJECT_TYPE_INSTANCE; | MessageID = 0xd7fa5f44 | Khronos Validation Layer Active:
    Settings File: Found at /home/amjad/.local/share/vulkan/settings.d/vk_layer_settings.txt specified by VkConfig application override.
    Current Enables: VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION.
    Current Disables: VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT, VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT, VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT, VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT.

    Objects: 1
        [0] 0x55e08fcc8e70, type: 1, name: NULL
Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:             VkInstance = 0x55e08fcc8e70
    pPhysicalDeviceCount:  uint32_t* = 2
    pPhysicalDevices: VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:             VkInstance = 0x55e08fcc8e70
    pPhysicalDeviceCount:  uint32_t* = 2
    pPhysicalDevices: VkPhysicalDevice* = 0x55e090212580
        pPhysicalDevices[0]: VkPhysicalDevice = 0x55e090356ba0
        pPhysicalDevices[1]: VkPhysicalDevice = 0x55e090356e60

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pQueueFamilyPropertyCount: uint32_t* = 2
    pQueueFamilyProperties: VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pQueueFamilyPropertyCount: uint32_t* = 2
    pQueueFamilyProperties: VkQueueFamilyProperties* = 0x55e090214370
        pQueueFamilyProperties[0]: VkQueueFamilyProperties = 0x55e090214370:
            queueFlags:         VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:             uint32_t = 1
            timestampValidBits:     uint32_t = 64
            minImageTransferGranularity: VkExtent3D = 0x55e09021437c:
                width:                  uint32_t = 1
                height:                 uint32_t = 1
                depth:                  uint32_t = 1
        pQueueFamilyProperties[1]: VkQueueFamilyProperties = 0x55e090214388:
            queueFlags:         VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:             uint32_t = 4
            timestampValidBits:     uint32_t = 64
            minImageTransferGranularity: VkExtent3D = 0x55e090214394:
                width:                  uint32_t = 1
                height:                 uint32_t = 1
                depth:                  uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356e60
    pQueueFamilyPropertyCount: uint32_t* = 2
    pQueueFamilyProperties: VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356e60
    pQueueFamilyPropertyCount: uint32_t* = 2
    pQueueFamilyProperties: VkQueueFamilyProperties* = 0x55e090258080
        pQueueFamilyProperties[0]: VkQueueFamilyProperties = 0x55e090258080:
            queueFlags:         VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:             uint32_t = 1
            timestampValidBits:     uint32_t = 64
            minImageTransferGranularity: VkExtent3D = 0x55e09025808c:
                width:                  uint32_t = 1
                height:                 uint32_t = 1
                depth:                  uint32_t = 1
        pQueueFamilyProperties[1]: VkQueueFamilyProperties = 0x55e090258098:
            queueFlags:         VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:             uint32_t = 4
            timestampValidBits:     uint32_t = 64
            minImageTransferGranularity: VkExtent3D = 0x55e0902580a4:
                width:                  uint32_t = 1
                height:                 uint32_t = 1
                depth:                  uint32_t = 1

Thread 0, Frame 0:
vkCreateXlibSurfaceKHR(instance, pCreateInfo, pAllocator, pSurface) returns VkResult VK_SUCCESS (0):
    instance:             VkInstance = 0x55e08fcc8e70
    pCreateInfo: const VkXlibSurfaceCreateInfoKHR* = 0x7ffe81d04db8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR (1000004000)
        pNext:               const void* = NULL
        flags: VkXlibSurfaceCreateFlagsKHR = 0
        dpy:                    Display* = 0x55e090372820
        window:                   Window = 39845889
    pAllocator: const VkAllocationCallbacks* = NULL
    pSurface:          VkSurfaceKHR* = 0x55e090304a90

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:             VkInstance = 0x55e08fcc8e70
    pPhysicalDeviceCount:  uint32_t* = 2
    pPhysicalDevices: VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:             VkInstance = 0x55e08fcc8e70
    pPhysicalDeviceCount:  uint32_t* = 2
    pPhysicalDevices: VkPhysicalDevice* = 0x55e090305550
        pPhysicalDevices[0]: VkPhysicalDevice = 0x55e090356ba0
        pPhysicalDevices[1]: VkPhysicalDevice = 0x55e090356e60

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties* = 0x7ffe81cff5b8:
        apiVersion:             uint32_t = 4206822
        driverVersion:          uint32_t = 92286980
        vendorID:               uint32_t = 4098
        deviceID:               uint32_t = 29695
        deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
        pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff6cc
            pipelineCacheUUID[0]:    uint8_t = 123
            pipelineCacheUUID[1]:    uint8_t = 131
            pipelineCacheUUID[2]:    uint8_t = 211
            pipelineCacheUUID[3]:    uint8_t = 220
            pipelineCacheUUID[4]:    uint8_t = 215
            pipelineCacheUUID[5]:    uint8_t = 65
            pipelineCacheUUID[6]:    uint8_t = 140
            pipelineCacheUUID[7]:    uint8_t = 0
            pipelineCacheUUID[8]:    uint8_t = 91
            pipelineCacheUUID[9]:    uint8_t = 223
            pipelineCacheUUID[10]:   uint8_t = 222
            pipelineCacheUUID[11]:   uint8_t = 7
            pipelineCacheUUID[12]:   uint8_t = 4
            pipelineCacheUUID[13]:   uint8_t = 87
            pipelineCacheUUID[14]:   uint8_t = 209
            pipelineCacheUUID[15]:   uint8_t = 190
        limits:   VkPhysicalDeviceLimits = 0x7ffe81cff6e0:
            maxImageDimension1D:    uint32_t = 16384
            maxImageDimension2D:    uint32_t = 16384
            maxImageDimension3D:    uint32_t = 2048
            maxImageDimensionCube:  uint32_t = 16384
            maxImageArrayLayers:    uint32_t = 2048
            maxTexelBufferElements: uint32_t = 4294967295
            maxUniformBufferRange:  uint32_t = 4294967295
            maxStorageBufferRange:  uint32_t = 4294967295
            maxPushConstantsSize:   uint32_t = 256
            maxMemoryAllocationCount: uint32_t = 4294967295
            maxSamplerAllocationCount: uint32_t = 65536
            bufferImageGranularity: VkDeviceSize = 1
            sparseAddressSpaceSize: VkDeviceSize = 4294967292
            maxBoundDescriptorSets: uint32_t = 32
            maxPerStageDescriptorSamplers: uint32_t = 8388606
            maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
            maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
            maxPerStageDescriptorSampledImages: uint32_t = 8388606
            maxPerStageDescriptorStorageImages: uint32_t = 8388606
            maxPerStageDescriptorInputAttachments: uint32_t = 8388606
            maxPerStageResources:   uint32_t = 8388606
            maxDescriptorSetSamplers: uint32_t = 8388606
            maxDescriptorSetUniformBuffers: uint32_t = 8388606
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
            maxDescriptorSetStorageBuffers: uint32_t = 8388606
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages: uint32_t = 8388606
            maxDescriptorSetStorageImages: uint32_t = 8388606
            maxDescriptorSetInputAttachments: uint32_t = 8388606
            maxVertexInputAttributes: uint32_t = 32
            maxVertexInputBindings: uint32_t = 32
            maxVertexInputAttributeOffset: uint32_t = 4294967295
            maxVertexInputBindingStride: uint32_t = 2048
            maxVertexOutputComponents: uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize: uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4096
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations: uint32_t = 127
            maxGeometryInputComponents: uint32_t = 64
            maxGeometryOutputComponents: uint32_t = 128
            maxGeometryOutputVertices: uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents: uint32_t = 128
            maxFragmentOutputAttachments: uint32_t = 8
            maxFragmentDualSrcAttachments: uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 8388606
            maxComputeSharedMemorySize: uint32_t = 65536
            maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff7bc
                maxComputeWorkGroupCount[0]: uint32_t = 65535
                maxComputeWorkGroupCount[1]: uint32_t = 65535
                maxComputeWorkGroupCount[2]: uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff7cc
                maxComputeWorkGroupSize[0]: uint32_t = 1024
                maxComputeWorkGroupSize[1]: uint32_t = 1024
                maxComputeWorkGroupSize[2]: uint32_t = 1024
            subPixelPrecisionBits:  uint32_t = 8
            subTexelPrecisionBits:  uint32_t = 8
            mipmapPrecisionBits:    uint32_t = 8
            maxDrawIndexedIndexValue: uint32_t = 4294967295
            maxDrawIndirectCount:   uint32_t = 4294967295
            maxSamplerLodBias:         float = 16
            maxSamplerAnisotropy:      float = 16
            maxViewports:           uint32_t = 16
            maxViewportDimensions: uint32_t[2] = 0x7ffe81cff7f8
                maxViewportDimensions[0]: uint32_t = 16384
                maxViewportDimensions[1]: uint32_t = 16384
            viewportBoundsRange:    float[2] = 0x7ffe81cff800
                viewportBoundsRange[0]:    float = -32768
                viewportBoundsRange[1]:    float = 32767
            viewportSubPixelBits:   uint32_t = 8
            minMemoryMapAlignment:    size_t = 4096
            minTexelBufferOffsetAlignment: VkDeviceSize = 4
            minUniformBufferOffsetAlignment: VkDeviceSize = 4
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:          int32_t = -32
            maxTexelOffset:         uint32_t = 31
            minTexelGatherOffset:    int32_t = -32
            maxTexelGatherOffset:   uint32_t = 31
            minInterpolationOffset:    float = -2
            maxInterpolationOffset:    float = 2
            subPixelInterpolationOffsetBits: uint32_t = 8
            maxFramebufferWidth:    uint32_t = 16384
            maxFramebufferHeight:   uint32_t = 16384
            maxFramebufferLayers:   uint32_t = 1024
            framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:    uint32_t = 8
            sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:     uint32_t = 1
            timestampComputeAndGraphics: VkBool32 = 1
            timestampPeriod:           float = 10
            maxClipDistances:       uint32_t = 8
            maxCullDistances:       uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities: uint32_t = 2
            pointSizeRange:         float[2] = 0x7ffe81cff89c
                pointSizeRange[0]:         float = 0
                pointSizeRange[1]:         float = 8191.88
            lineWidthRange:         float[2] = 0x7ffe81cff8a4
                lineWidthRange[0]:         float = 0
                lineWidthRange[1]:         float = 8191.88
            pointSizeGranularity:      float = 0.125
            lineWidthGranularity:      float = 0.125
            strictLines:            VkBool32 = 0
            standardSampleLocations: VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize: VkDeviceSize = 64
        sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cff8d8:
            residencyStandard2DBlockShape: VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape: VkBool32 = 1
            residencyAlignedMipSize: VkBool32 = 0
            residencyNonResidentStrict: VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures2KHR(physicalDevice, pFeatures) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pFeatures: VkPhysicalDeviceFeatures2* = 0x7ffe81cfecd8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 (1000059000)
        pNext:               const void* = VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL
        features: VkPhysicalDeviceFeatures = 0x7ffe81cfece8:
            robustBufferAccess:     VkBool32 = 1
            fullDrawIndexUint32:    VkBool32 = 1
            imageCubeArray:         VkBool32 = 1
            independentBlend:       VkBool32 = 1
            geometryShader:         VkBool32 = 1
            tessellationShader:     VkBool32 = 1
            sampleRateShading:      VkBool32 = 1
            dualSrcBlend:           VkBool32 = 1
            logicOp:                VkBool32 = 1
            multiDrawIndirect:      VkBool32 = 1
            drawIndirectFirstInstance: VkBool32 = 1
            depthClamp:             VkBool32 = 1
            depthBiasClamp:         VkBool32 = 1
            fillModeNonSolid:       VkBool32 = 1
            depthBounds:            VkBool32 = 1
            wideLines:              VkBool32 = 1
            largePoints:            VkBool32 = 1
            alphaToOne:             VkBool32 = 0
            multiViewport:          VkBool32 = 1
            samplerAnisotropy:      VkBool32 = 1
            textureCompressionETC2: VkBool32 = 0
            textureCompressionASTC_LDR: VkBool32 = 0
            textureCompressionBC:   VkBool32 = 1
            occlusionQueryPrecise:  VkBool32 = 1
            pipelineStatisticsQuery: VkBool32 = 1
            vertexPipelineStoresAndAtomics: VkBool32 = 1
            fragmentStoresAndAtomics: VkBool32 = 1
            shaderTessellationAndGeometryPointSize: VkBool32 = 1
            shaderImageGatherExtended: VkBool32 = 1
            shaderStorageImageExtendedFormats: VkBool32 = 1
            shaderStorageImageMultisample: VkBool32 = 1
            shaderStorageImageReadWithoutFormat: VkBool32 = 1
            shaderStorageImageWriteWithoutFormat: VkBool32 = 1
            shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
            shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
            shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
            shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
            shaderClipDistance:     VkBool32 = 1
            shaderCullDistance:     VkBool32 = 1
            shaderFloat64:          VkBool32 = 1
            shaderInt64:            VkBool32 = 1
            shaderInt16:            VkBool32 = 1
            shaderResourceResidency: VkBool32 = 1
            shaderResourceMinLod:   VkBool32 = 1
            sparseBinding:          VkBool32 = 1
            sparseResidencyBuffer:  VkBool32 = 1
            sparseResidencyImage2D: VkBool32 = 1
            sparseResidencyImage3D: VkBool32 = 1
            sparseResidency2Samples: VkBool32 = 0
            sparseResidency4Samples: VkBool32 = 0
            sparseResidency8Samples: VkBool32 = 0
            sparseResidency16Samples: VkBool32 = 0
            sparseResidencyAliased: VkBool32 = 1
            variableMultisampleRate: VkBool32 = 1
            inheritedQueries:       VkBool32 = 1
        pNext: VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL = 0x7ffe81d00220:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL (1000209000)
            pNext:               const void* = VkPhysicalDeviceComputeShaderDerivativesFeaturesNV
            shaderIntegerFunctions2: VkBool32 = 1
        pNext: VkPhysicalDeviceComputeShaderDerivativesFeaturesNV = 0x7ffe81cffeb0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV (1000201000)
            pNext:               const void* = VkPhysicalDeviceCoherentMemoryFeaturesAMD
            computeDerivativeGroupQuads: VkBool32 = 0
            computeDerivativeGroupLinear: VkBool32 = 1
        pNext: VkPhysicalDeviceCoherentMemoryFeaturesAMD = 0x7ffe81cffe90:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD (1000229000)
            pNext:               const void* = VkPhysicalDeviceYcbcrImageArraysFeaturesEXT
            deviceCoherentMemory:   VkBool32 = 1
        pNext: VkPhysicalDeviceYcbcrImageArraysFeaturesEXT = 0x7ffe81cffe50:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT (1000252000)
            pNext:               const void* = VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT
            ycbcrImageArrays:       VkBool32 = 1
        pNext: VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT = 0x7ffe81cffe10:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT (1000352000)
            pNext:               const void* = VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT
            vertexInputDynamicState: VkBool32 = 1
        pNext: VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = 0x7ffe81cffdf0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT (1000190002)
            pNext:               const void* = VkPhysicalDeviceTransformFeedbackFeaturesEXT
            vertexAttributeInstanceRateDivisor: VkBool32 = 1
            vertexAttributeInstanceRateZeroDivisor: VkBool32 = 1
        pNext: VkPhysicalDeviceTransformFeedbackFeaturesEXT = 0x7ffe81cffdd0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT (1000028000)
            pNext:               const void* = VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT
            transformFeedback:      VkBool32 = 1
            geometryStreams:        VkBool32 = 1
        pNext: VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT = 0x7ffe81cffdb0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT (1000281000)
            pNext:               const void* = VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT
            texelBufferAlignment:   VkBool32 = 1
        pNext: VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT = 0x7ffe81cffd70:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT (1000462000)
            pNext:               const void* = VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT
            shaderModuleIdentifier: VkBool32 = 1
        pNext: VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT = 0x7ffe81cffd50:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT (1000234000)
            pNext:               const void* = VkPhysicalDeviceShaderAtomicFloatFeaturesEXT
            shaderImageInt64Atomics: VkBool32 = 1
            sparseImageInt64Atomics: VkBool32 = 1
        pNext: VkPhysicalDeviceShaderAtomicFloatFeaturesEXT = 0x7ffe81cffd08:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT (1000260000)
            pNext:               const void* = VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT
            shaderBufferFloat32Atomics: VkBool32 = 1
            shaderBufferFloat32AtomicAdd: VkBool32 = 0
            shaderBufferFloat64Atomics: VkBool32 = 1
            shaderBufferFloat64AtomicAdd: VkBool32 = 0
            shaderSharedFloat32Atomics: VkBool32 = 1
            shaderSharedFloat32AtomicAdd: VkBool32 = 1
            shaderSharedFloat64Atomics: VkBool32 = 1
            shaderSharedFloat64AtomicAdd: VkBool32 = 0
            shaderImageFloat32Atomics: VkBool32 = 1
            shaderImageFloat32AtomicAdd: VkBool32 = 0
            sparseImageFloat32Atomics: VkBool32 = 1
            sparseImageFloat32AtomicAdd: VkBool32 = 0
        pNext: VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT = 0x7ffe81cffcc0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT (1000273000)
            pNext:               const void* = VkPhysicalDeviceRobustness2FeaturesEXT
            shaderBufferFloat16Atomics: VkBool32 = 0
            shaderBufferFloat16AtomicAdd: VkBool32 = 0
            shaderBufferFloat16AtomicMinMax: VkBool32 = 0
            shaderBufferFloat32AtomicMinMax: VkBool32 = 1
            shaderBufferFloat64AtomicMinMax: VkBool32 = 1
            shaderSharedFloat16Atomics: VkBool32 = 0
            shaderSharedFloat16AtomicAdd: VkBool32 = 0
            shaderSharedFloat16AtomicMinMax: VkBool32 = 0
            shaderSharedFloat32AtomicMinMax: VkBool32 = 1
            shaderSharedFloat64AtomicMinMax: VkBool32 = 1
            shaderImageFloat32AtomicMinMax: VkBool32 = 1
            sparseImageFloat32AtomicMinMax: VkBool32 = 1
        pNext: VkPhysicalDeviceRobustness2FeaturesEXT = 0x7ffe81cffc98:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT (1000286000)
            pNext:               const void* = VkPhysicalDeviceProvokingVertexFeaturesEXT
            robustBufferAccess2:    VkBool32 = 1
            robustImageAccess2:     VkBool32 = 1
            nullDescriptor:         VkBool32 = 1
        pNext: VkPhysicalDeviceProvokingVertexFeaturesEXT = 0x7ffe81cffc30:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT (1000254000)
            pNext:               const void* = VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT
            provokingVertexLast:    VkBool32 = 1
            transformFeedbackPreservesProvokingVertex: VkBool32 = 1
        pNext: VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT = 0x7ffe81cffc08:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT (1000382000)
            pNext:               const void* = VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT
            primitivesGeneratedQuery: VkBool32 = 1
            primitivesGeneratedQueryWithRasterizerDiscard: VkBool32 = 1
            primitivesGeneratedQueryWithNonZeroStreams: VkBool32 = 1
        pNext: VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT = 0x7ffe81cffbe8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT (1000356000)
            pNext:               const void* = VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT
            primitiveTopologyListRestart: VkBool32 = 1
            primitiveTopologyPatchListRestart: VkBool32 = 0
        pNext: VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT = 0x7ffe81cffb20:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT (1000422000)
            pNext:               const void* = VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT
            nonSeamlessCubeMap:     VkBool32 = 1
        pNext: VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT = 0x7ffe81cffb00:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT (1000351000)
            pNext:               const void* = VkPhysicalDeviceMultiDrawFeaturesEXT
            mutableDescriptorType:  VkBool32 = 1
        pNext: VkPhysicalDeviceMultiDrawFeaturesEXT = 0x7ffe81cffac0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT (1000392000)
            pNext:               const void* = VkPhysicalDeviceMemoryPriorityFeaturesEXT
            multiDraw:              VkBool32 = 1
        pNext: VkPhysicalDeviceMemoryPriorityFeaturesEXT = 0x7ffe81cffa70:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT (1000238000)
            pNext:               const void* = VkPhysicalDeviceLineRasterizationFeaturesEXT
            memoryPriority:         VkBool32 = 1
        pNext: VkPhysicalDeviceLineRasterizationFeaturesEXT = 0x7ffe81cffa40:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT (1000259000)
            pNext:               const void* = VkPhysicalDeviceIndexTypeUint8FeaturesEXT
            rectangularLines:       VkBool32 = 0
            bresenhamLines:         VkBool32 = 1
            smoothLines:            VkBool32 = 0
            stippledRectangularLines: VkBool32 = 0
            stippledBresenhamLines: VkBool32 = 1
            stippledSmoothLines:    VkBool32 = 0
        pNext: VkPhysicalDeviceIndexTypeUint8FeaturesEXT = 0x7ffe81cffa00:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT (1000265000)
            pNext:               const void* = VkPhysicalDeviceImageViewMinLodFeaturesEXT
            indexTypeUint8:         VkBool32 = 1
        pNext: VkPhysicalDeviceImageViewMinLodFeaturesEXT = 0x7ffe81cff9e0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT (1000391000)
            pNext:               const void* = VkPhysicalDeviceImage2DViewOf3DFeaturesEXT
            minLod:                 VkBool32 = 1
        pNext: VkPhysicalDeviceImage2DViewOf3DFeaturesEXT = 0x7ffe81cff980:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT (1000393000)
            pNext:               const void* = VkPhysicalDeviceExtendedDynamicStateFeaturesEXT
            image2DViewOf3D:        VkBool32 = 1
            sampler2DViewOf3D:      VkBool32 = 0
        pNext: VkPhysicalDeviceExtendedDynamicStateFeaturesEXT = 0x7ffe81cff8b0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT (1000267000)
            pNext:               const void* = VkPhysicalDeviceExtendedDynamicState3FeaturesEXT
            extendedDynamicState:   VkBool32 = 1
        pNext: VkPhysicalDeviceExtendedDynamicState3FeaturesEXT = 0x7ffe81cff818:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT (1000455000)
            pNext:               const void* = VkPhysicalDeviceExtendedDynamicState2FeaturesEXT
            extendedDynamicState3TessellationDomainOrigin: VkBool32 = 1
            extendedDynamicState3DepthClampEnable: VkBool32 = 1
            extendedDynamicState3PolygonMode: VkBool32 = 1
            extendedDynamicState3RasterizationSamples: VkBool32 = 0
            extendedDynamicState3SampleMask: VkBool32 = 1
            extendedDynamicState3AlphaToCoverageEnable: VkBool32 = 1
            extendedDynamicState3AlphaToOneEnable: VkBool32 = 0
            extendedDynamicState3LogicOpEnable: VkBool32 = 1
            extendedDynamicState3ColorBlendEnable: VkBool32 = 0
            extendedDynamicState3ColorBlendEquation: VkBool32 = 0
            extendedDynamicState3ColorWriteMask: VkBool32 = 0
            extendedDynamicState3RasterizationStream: VkBool32 = 0
            extendedDynamicState3ConservativeRasterizationMode: VkBool32 = 1
            extendedDynamicState3ExtraPrimitiveOverestimationSize: VkBool32 = 0
            extendedDynamicState3DepthClipEnable: VkBool32 = 1
            extendedDynamicState3SampleLocationsEnable: VkBool32 = 0
            extendedDynamicState3ColorBlendAdvanced: VkBool32 = 0
            extendedDynamicState3ProvokingVertexMode: VkBool32 = 0
            extendedDynamicState3LineRasterizationMode: VkBool32 = 0
            extendedDynamicState3LineStippleEnable: VkBool32 = 1
            extendedDynamicState3DepthClipNegativeOneToOne: VkBool32 = 1
            extendedDynamicState3ViewportWScalingEnable: VkBool32 = 0
            extendedDynamicState3ViewportSwizzle: VkBool32 = 0
            extendedDynamicState3CoverageToColorEnable: VkBool32 = 0
            extendedDynamicState3CoverageToColorLocation: VkBool32 = 0
            extendedDynamicState3CoverageModulationMode: VkBool32 = 0
            extendedDynamicState3CoverageModulationTableEnable: VkBool32 = 0
            extendedDynamicState3CoverageModulationTable: VkBool32 = 0
            extendedDynamicState3CoverageReductionMode: VkBool32 = 0
            extendedDynamicState3RepresentativeFragmentTestEnable: VkBool32 = 0
            extendedDynamicState3ShadingRateImageEnable: VkBool32 = 0
        pNext: VkPhysicalDeviceExtendedDynamicState2FeaturesEXT = 0x7ffe81cff7f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT (1000377000)
            pNext:               const void* = VkPhysicalDeviceDepthClipEnableFeaturesEXT
            extendedDynamicState2:  VkBool32 = 1
            extendedDynamicState2LogicOp: VkBool32 = 1
            extendedDynamicState2PatchControlPoints: VkBool32 = 1
        pNext: VkPhysicalDeviceDepthClipEnableFeaturesEXT = 0x7ffe81cff788:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT (1000102000)
            pNext:               const void* = VkPhysicalDeviceDepthClipControlFeaturesEXT
            depthClipEnable:        VkBool32 = 1
        pNext: VkPhysicalDeviceDepthClipControlFeaturesEXT = 0x7ffe81cff768:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT (1000355000)
            pNext:               const void* = VkPhysicalDeviceCustomBorderColorFeaturesEXT
            depthClipControl:       VkBool32 = 1
        pNext: VkPhysicalDeviceCustomBorderColorFeaturesEXT = 0x7ffe81cff728:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT (1000287002)
            pNext:               const void* = VkPhysicalDeviceConditionalRenderingFeaturesEXT
            customBorderColors:     VkBool32 = 1
            customBorderColorWithoutFormat: VkBool32 = 1
        pNext: VkPhysicalDeviceConditionalRenderingFeaturesEXT = 0x7ffe81cff708:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT (1000081001)
            pNext:               const void* = VkPhysicalDeviceColorWriteEnableFeaturesEXT
            conditionalRendering:   VkBool32 = 1
            inheritedConditionalRendering: VkBool32 = 0
        pNext: VkPhysicalDeviceColorWriteEnableFeaturesEXT = 0x7ffe81cff6e8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT (1000381000)
            pNext:               const void* = VkPhysicalDeviceBorderColorSwizzleFeaturesEXT
            colorWriteEnable:       VkBool32 = 1
        pNext: VkPhysicalDeviceBorderColorSwizzleFeaturesEXT = 0x7ffe81cff6a0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT (1000411000)
            pNext:               const void* = VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT
            borderColorSwizzle:     VkBool32 = 1
            borderColorSwizzleFromImage: VkBool32 = 1
        pNext: VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT = 0x7ffe81cff660:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT (1000339000)
            pNext:               const void* = VkPhysicalDevice4444FormatsFeaturesEXT
            attachmentFeedbackLoopLayout: VkBool32 = 1
        pNext: VkPhysicalDevice4444FormatsFeaturesEXT = 0x7ffe81cff600:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT (1000340000)
            pNext:               const void* = VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR
            formatA4R4G4B4:         VkBool32 = 1
            formatA4B4G4R4:         VkBool32 = 1
        pNext: VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR = 0x7ffe81cff5d8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR (1000336000)
            pNext:               const void* = VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR
            workgroupMemoryExplicitLayout: VkBool32 = 1
            workgroupMemoryExplicitLayoutScalarBlockLayout: VkBool32 = 1
            workgroupMemoryExplicitLayout8BitAccess: VkBool32 = 1
            workgroupMemoryExplicitLayout16BitAccess: VkBool32 = 1
        pNext: VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR = 0x7ffe81cff5b8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR (1000323000)
            pNext:               const void* = VkPhysicalDeviceShaderClockFeaturesKHR
            shaderSubgroupUniformControlFlow: VkBool32 = 1
        pNext: VkPhysicalDeviceShaderClockFeaturesKHR = 0x7ffe81cff598:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR (1000181000)
            pNext:               const void* = VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR
            shaderSubgroupClock:    VkBool32 = 1
            shaderDeviceClock:      VkBool32 = 1
        pNext: VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR = 0x7ffe81cff548:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR (1000386000)
            pNext:               const void* = VkPhysicalDeviceRayQueryFeaturesKHR
            rayTracingMaintenance1: VkBool32 = 1
            rayTracingPipelineTraceRaysIndirect2: VkBool32 = 0
        pNext: VkPhysicalDeviceRayQueryFeaturesKHR = 0x7ffe81cff528:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR (1000348013)
            pNext:               const void* = VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR
            rayQuery:               VkBool32 = 1
        pNext: VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR = 0x7ffe81cff470:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR (1000269000)
            pNext:               const void* = VkPhysicalDevicePerformanceQueryFeaturesKHR
            pipelineExecutableInfo: VkBool32 = 1
        pNext: VkPhysicalDevicePerformanceQueryFeaturesKHR = 0x7ffe81cff450:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR (1000116000)
            pNext:               const void* = VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR
            performanceCounterQueryPools: VkBool32 = 1
            performanceCounterMultipleQueryPools: VkBool32 = 1
        pNext: VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR = 0x7ffe81cff430:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR (1000388000)
            pNext:               const void* = VkPhysicalDeviceFragmentShadingRateFeaturesKHR
            globalPriorityQuery:    VkBool32 = 1
        pNext: VkPhysicalDeviceFragmentShadingRateFeaturesKHR = 0x7ffe81cff408:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR (1000226003)
            pNext:               const void* = VkPhysicalDeviceAccelerationStructureFeaturesKHR
            pipelineFragmentShadingRate: VkBool32 = 1
            primitiveFragmentShadingRate: VkBool32 = 1
            attachmentFragmentShadingRate: VkBool32 = 1
        pNext: VkPhysicalDeviceAccelerationStructureFeaturesKHR = 0x7ffe81cff3b8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR (1000150013)
            pNext:               const void* = VkPhysicalDeviceVulkan13Features
            accelerationStructure:  VkBool32 = 1
            accelerationStructureCaptureReplay: VkBool32 = 0
            accelerationStructureIndirectBuild: VkBool32 = 0
            accelerationStructureHostCommands: VkBool32 = 0
            descriptorBindingAccelerationStructureUpdateAfterBind: VkBool32 = 1
        pNext: VkPhysicalDeviceVulkan13Features = 0x7ffe81cfeef0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES (53)
            pNext:               const void* = VkPhysicalDeviceVulkan12Features
            robustImageAccess:      VkBool32 = 1
            inlineUniformBlock:     VkBool32 = 1
            descriptorBindingInlineUniformBlockUpdateAfterBind: VkBool32 = 1
            pipelineCreationCacheControl: VkBool32 = 1
            privateData:            VkBool32 = 1
            shaderDemoteToHelperInvocation: VkBool32 = 1
            shaderTerminateInvocation: VkBool32 = 1
            subgroupSizeControl:    VkBool32 = 1
            computeFullSubgroups:   VkBool32 = 1
            synchronization2:       VkBool32 = 1
            textureCompressionASTC_HDR: VkBool32 = 0
            shaderZeroInitializeWorkgroupMemory: VkBool32 = 1
            dynamicRendering:       VkBool32 = 1
            shaderIntegerDotProduct: VkBool32 = 1
            maintenance4:           VkBool32 = 1
        pNext: VkPhysicalDeviceVulkan12Features = 0x7ffe81cfee18:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES (51)
            pNext:               const void* = VkPhysicalDeviceVulkan11Features
            samplerMirrorClampToEdge: VkBool32 = 1
            drawIndirectCount:      VkBool32 = 1
            storageBuffer8BitAccess: VkBool32 = 1
            uniformAndStorageBuffer8BitAccess: VkBool32 = 1
            storagePushConstant8:   VkBool32 = 1
            shaderBufferInt64Atomics: VkBool32 = 1
            shaderSharedInt64Atomics: VkBool32 = 1
            shaderFloat16:          VkBool32 = 1
            shaderInt8:             VkBool32 = 1
            descriptorIndexing:     VkBool32 = 1
            shaderInputAttachmentArrayDynamicIndexing: VkBool32 = 1
            shaderUniformTexelBufferArrayDynamicIndexing: VkBool32 = 1
            shaderStorageTexelBufferArrayDynamicIndexing: VkBool32 = 1
            shaderUniformBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderSampledImageArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageImageArrayNonUniformIndexing: VkBool32 = 1
            shaderInputAttachmentArrayNonUniformIndexing: VkBool32 = 1
            shaderUniformTexelBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageTexelBufferArrayNonUniformIndexing: VkBool32 = 1
            descriptorBindingUniformBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingSampledImageUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageImageUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingUniformTexelBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageTexelBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingUpdateUnusedWhilePending: VkBool32 = 1
            descriptorBindingPartiallyBound: VkBool32 = 1
            descriptorBindingVariableDescriptorCount: VkBool32 = 1
            runtimeDescriptorArray: VkBool32 = 1
            samplerFilterMinmax:    VkBool32 = 1
            scalarBlockLayout:      VkBool32 = 1
            imagelessFramebuffer:   VkBool32 = 1
            uniformBufferStandardLayout: VkBool32 = 1
            shaderSubgroupExtendedTypes: VkBool32 = 1
            separateDepthStencilLayouts: VkBool32 = 1
            hostQueryReset:         VkBool32 = 1
            timelineSemaphore:      VkBool32 = 1
            bufferDeviceAddress:    VkBool32 = 1
            bufferDeviceAddressCaptureReplay: VkBool32 = 1
            bufferDeviceAddressMultiDevice: VkBool32 = 0
            vulkanMemoryModel:      VkBool32 = 1
            vulkanMemoryModelDeviceScope: VkBool32 = 1
            vulkanMemoryModelAvailabilityVisibilityChains: VkBool32 = 0
            shaderOutputViewportIndex: VkBool32 = 1
            shaderOutputLayer:      VkBool32 = 1
            subgroupBroadcastDynamicId: VkBool32 = 1
        pNext: VkPhysicalDeviceVulkan11Features = 0x7ffe81cfedd0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES (49)
            pNext:                     void* = NULL
            storageBuffer16BitAccess: VkBool32 = 1
            uniformAndStorageBuffer16BitAccess: VkBool32 = 1
            storagePushConstant16:  VkBool32 = 1
            storageInputOutput16:   VkBool32 = 1
            multiview:              VkBool32 = 1
            multiviewGeometryShader: VkBool32 = 1
            multiviewTessellationShader: VkBool32 = 1
            variablePointersStorageBuffer: VkBool32 = 1
            variablePointers:       VkBool32 = 1
            protectedMemory:        VkBool32 = 0
            samplerYcbcrConversion: VkBool32 = 1
            shaderDrawParameters:   VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2KHR(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties2* = 0x7ffe81cfeba8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:               const void* = VkPhysicalDeviceShaderCorePropertiesAMD
        properties: VkPhysicalDeviceProperties = 0x7ffe81cfebb8:
            apiVersion:             uint32_t = 4206822
            driverVersion:          uint32_t = 92286980
            vendorID:               uint32_t = 4098
            deviceID:               uint32_t = 29695
            deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
            pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cfeccc
                pipelineCacheUUID[0]:    uint8_t = 123
                pipelineCacheUUID[1]:    uint8_t = 131
                pipelineCacheUUID[2]:    uint8_t = 211
                pipelineCacheUUID[3]:    uint8_t = 220
                pipelineCacheUUID[4]:    uint8_t = 215
                pipelineCacheUUID[5]:    uint8_t = 65
                pipelineCacheUUID[6]:    uint8_t = 140
                pipelineCacheUUID[7]:    uint8_t = 0
                pipelineCacheUUID[8]:    uint8_t = 91
                pipelineCacheUUID[9]:    uint8_t = 223
                pipelineCacheUUID[10]:   uint8_t = 222
                pipelineCacheUUID[11]:   uint8_t = 7
                pipelineCacheUUID[12]:   uint8_t = 4
                pipelineCacheUUID[13]:   uint8_t = 87
                pipelineCacheUUID[14]:   uint8_t = 209
                pipelineCacheUUID[15]:   uint8_t = 190
            limits:   VkPhysicalDeviceLimits = 0x7ffe81cfece0:
                maxImageDimension1D:    uint32_t = 16384
                maxImageDimension2D:    uint32_t = 16384
                maxImageDimension3D:    uint32_t = 2048
                maxImageDimensionCube:  uint32_t = 16384
                maxImageArrayLayers:    uint32_t = 2048
                maxTexelBufferElements: uint32_t = 4294967295
                maxUniformBufferRange:  uint32_t = 4294967295
                maxStorageBufferRange:  uint32_t = 4294967295
                maxPushConstantsSize:   uint32_t = 256
                maxMemoryAllocationCount: uint32_t = 4294967295
                maxSamplerAllocationCount: uint32_t = 65536
                bufferImageGranularity: VkDeviceSize = 1
                sparseAddressSpaceSize: VkDeviceSize = 4294967292
                maxBoundDescriptorSets: uint32_t = 32
                maxPerStageDescriptorSamplers: uint32_t = 8388606
                maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
                maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
                maxPerStageDescriptorSampledImages: uint32_t = 8388606
                maxPerStageDescriptorStorageImages: uint32_t = 8388606
                maxPerStageDescriptorInputAttachments: uint32_t = 8388606
                maxPerStageResources:   uint32_t = 8388606
                maxDescriptorSetSamplers: uint32_t = 8388606
                maxDescriptorSetUniformBuffers: uint32_t = 8388606
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
                maxDescriptorSetStorageBuffers: uint32_t = 8388606
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
                maxDescriptorSetSampledImages: uint32_t = 8388606
                maxDescriptorSetStorageImages: uint32_t = 8388606
                maxDescriptorSetInputAttachments: uint32_t = 8388606
                maxVertexInputAttributes: uint32_t = 32
                maxVertexInputBindings: uint32_t = 32
                maxVertexInputAttributeOffset: uint32_t = 4294967295
                maxVertexInputBindingStride: uint32_t = 2048
                maxVertexOutputComponents: uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize: uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4096
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations: uint32_t = 127
                maxGeometryInputComponents: uint32_t = 64
                maxGeometryOutputComponents: uint32_t = 128
                maxGeometryOutputVertices: uint32_t = 256
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents: uint32_t = 128
                maxFragmentOutputAttachments: uint32_t = 8
                maxFragmentDualSrcAttachments: uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 8388606
                maxComputeSharedMemorySize: uint32_t = 65536
                maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cfedbc
                    maxComputeWorkGroupCount[0]: uint32_t = 65535
                    maxComputeWorkGroupCount[1]: uint32_t = 65535
                    maxComputeWorkGroupCount[2]: uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cfedcc
                    maxComputeWorkGroupSize[0]: uint32_t = 1024
                    maxComputeWorkGroupSize[1]: uint32_t = 1024
                    maxComputeWorkGroupSize[2]: uint32_t = 1024
                subPixelPrecisionBits:  uint32_t = 8
                subTexelPrecisionBits:  uint32_t = 8
                mipmapPrecisionBits:    uint32_t = 8
                maxDrawIndexedIndexValue: uint32_t = 4294967295
                maxDrawIndirectCount:   uint32_t = 4294967295
                maxSamplerLodBias:         float = 16
                maxSamplerAnisotropy:      float = 16
                maxViewports:           uint32_t = 16
                maxViewportDimensions: uint32_t[2] = 0x7ffe81cfedf8
                    maxViewportDimensions[0]: uint32_t = 16384
                    maxViewportDimensions[1]: uint32_t = 16384
                viewportBoundsRange:    float[2] = 0x7ffe81cfee00
                    viewportBoundsRange[0]:    float = -32768
                    viewportBoundsRange[1]:    float = 32767
                viewportSubPixelBits:   uint32_t = 8
                minMemoryMapAlignment:    size_t = 4096
                minTexelBufferOffsetAlignment: VkDeviceSize = 4
                minUniformBufferOffsetAlignment: VkDeviceSize = 4
                minStorageBufferOffsetAlignment: VkDeviceSize = 4
                minTexelOffset:          int32_t = -32
                maxTexelOffset:         uint32_t = 31
                minTexelGatherOffset:    int32_t = -32
                maxTexelGatherOffset:   uint32_t = 31
                minInterpolationOffset:    float = -2
                maxInterpolationOffset:    float = 2
                subPixelInterpolationOffsetBits: uint32_t = 8
                maxFramebufferWidth:    uint32_t = 16384
                maxFramebufferHeight:   uint32_t = 16384
                maxFramebufferLayers:   uint32_t = 1024
                framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxColorAttachments:    uint32_t = 8
                sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:     uint32_t = 1
                timestampComputeAndGraphics: VkBool32 = 1
                timestampPeriod:           float = 10
                maxClipDistances:       uint32_t = 8
                maxCullDistances:       uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities: uint32_t = 2
                pointSizeRange:         float[2] = 0x7ffe81cfee9c
                    pointSizeRange[0]:         float = 0
                    pointSizeRange[1]:         float = 8191.88
                lineWidthRange:         float[2] = 0x7ffe81cfeea4
                    lineWidthRange[0]:         float = 0
                    lineWidthRange[1]:         float = 8191.88
                pointSizeGranularity:      float = 0.125
                lineWidthGranularity:      float = 0.125
                strictLines:            VkBool32 = 0
                standardSampleLocations: VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize: VkDeviceSize = 64
            sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cfeed8:
                residencyStandard2DBlockShape: VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 0
                residencyStandard3DBlockShape: VkBool32 = 1
                residencyAlignedMipSize: VkBool32 = 0
                residencyNonResidentStrict: VkBool32 = 1
        pNext: VkPhysicalDeviceShaderCorePropertiesAMD = 0x7ffe81d00208:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD (1000185000)
            pNext:               const void* = VkPhysicalDeviceShaderCoreProperties2AMD
            shaderEngineCount:      uint32_t = 2
            shaderArraysPerEngineCount: uint32_t = 2
            computeUnitsPerShaderArray: uint32_t = 6
            simdPerComputeUnit:     uint32_t = 2
            wavefrontsPerSimd:      uint32_t = 16
            wavefrontSize:          uint32_t = 64
            sgprsPerSimd:           uint32_t = 2048
            minSgprAllocation:      uint32_t = 128
            maxSgprAllocation:      uint32_t = 104
            sgprAllocationGranularity: uint32_t = 128
            vgprsPerSimd:           uint32_t = 512
            minVgprAllocation:      uint32_t = 4
            maxVgprAllocation:      uint32_t = 256
            vgprAllocationGranularity: uint32_t = 4
        pNext: VkPhysicalDeviceShaderCoreProperties2AMD = 0x7ffe81d001e8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD (1000227000)
            pNext:               const void* = VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT
            shaderCoreFeatures: VkShaderCorePropertiesFlagsAMD = 0
            activeComputeUnitCount: uint32_t = 28
        pNext: VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = 0x7ffe81cfff50:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT (1000190000)
            pNext:               const void* = VkPhysicalDeviceTransformFeedbackPropertiesEXT
            maxVertexAttribDivisor: uint32_t = 4294967295
        pNext: VkPhysicalDeviceTransformFeedbackPropertiesEXT = 0x7ffe81cfff08:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT (1000028001)
            pNext:               const void* = VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT
            maxTransformFeedbackStreams: uint32_t = 4
            maxTransformFeedbackBuffers: uint32_t = 4
            maxTransformFeedbackBufferSize: VkDeviceSize = 4294967295
            maxTransformFeedbackStreamDataSize: uint32_t = 512
            maxTransformFeedbackBufferDataSize: uint32_t = 512
            maxTransformFeedbackBufferDataStride: uint32_t = 512
            transformFeedbackQueries: VkBool32 = 1
            transformFeedbackStreamsLinesTriangles: VkBool32 = 1
            transformFeedbackRasterizationStreamSelect: VkBool32 = 0
            transformFeedbackDraw:  VkBool32 = 1
        pNext: VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT = 0x7ffe81cffee0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT (1000462001)
            pNext:               const void* = VkPhysicalDeviceRobustness2PropertiesEXT
            shaderModuleIdentifierAlgorithmUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cffef0
                shaderModuleIdentifierAlgorithmUUID[0]: uint8_t = 77
                shaderModuleIdentifierAlgorithmUUID[1]: uint8_t = 69
                shaderModuleIdentifierAlgorithmUUID[2]: uint8_t = 83
                shaderModuleIdentifierAlgorithmUUID[3]: uint8_t = 65
                shaderModuleIdentifierAlgorithmUUID[4]: uint8_t = 45
                shaderModuleIdentifierAlgorithmUUID[5]: uint8_t = 83
                shaderModuleIdentifierAlgorithmUUID[6]: uint8_t = 72
                shaderModuleIdentifierAlgorithmUUID[7]: uint8_t = 65
                shaderModuleIdentifierAlgorithmUUID[8]: uint8_t = 49
                shaderModuleIdentifierAlgorithmUUID[9]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[10]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[11]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[12]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[13]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[14]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[15]: uint8_t = 0
        pNext: VkPhysicalDeviceRobustness2PropertiesEXT = 0x7ffe81cffe80:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT (1000286001)
            pNext:               const void* = VkPhysicalDeviceProvokingVertexPropertiesEXT
            robustStorageBufferAccessSizeAlignment: VkDeviceSize = 4
            robustUniformBufferAccessSizeAlignment: VkDeviceSize = 4
        pNext: VkPhysicalDeviceProvokingVertexPropertiesEXT = 0x7ffe81cffe60:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT (1000254002)
            pNext:               const void* = VkPhysicalDevicePCIBusInfoPropertiesEXT
            provokingVertexModePerPipeline: VkBool32 = 1
            transformFeedbackPreservesTriangleFanProvokingVertex: VkBool32 = 1
        pNext: VkPhysicalDevicePCIBusInfoPropertiesEXT = 0x7ffe81cffe10:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT (1000212000)
            pNext:               const void* = VkPhysicalDeviceMultiDrawPropertiesEXT
            pciDomain:              uint32_t = 0
            pciBus:                 uint32_t = 3
            pciDevice:              uint32_t = 0
            pciFunction:            uint32_t = 0
        pNext: VkPhysicalDeviceMultiDrawPropertiesEXT = 0x7ffe81cffdd0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT (1000392001)
            pNext:               const void* = VkPhysicalDeviceLineRasterizationPropertiesEXT
            maxMultiDrawCount:      uint32_t = 2048
        pNext: VkPhysicalDeviceLineRasterizationPropertiesEXT = 0x7ffe81cffd08:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT (1000259002)
            pNext:               const void* = VkPhysicalDeviceExternalMemoryHostPropertiesEXT
            lineSubPixelPrecisionBits: uint32_t = 4
        pNext: VkPhysicalDeviceExternalMemoryHostPropertiesEXT = 0x7ffe81cffc70:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT (1000178002)
            pNext:               const void* = VkPhysicalDeviceExtendedDynamicState3PropertiesEXT
            minImportedHostPointerAlignment: VkDeviceSize = 4096
        pNext: VkPhysicalDeviceExtendedDynamicState3PropertiesEXT = 0x7ffe81cffc50:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT (1000455001)
            pNext:               const void* = VkPhysicalDeviceDrmPropertiesEXT
            dynamicPrimitiveTopologyUnrestricted: VkBool32 = 0
        pNext: VkPhysicalDeviceDrmPropertiesEXT = 0x7ffe81cffc10:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT (1000353000)
            pNext:               const void* = VkPhysicalDeviceDiscardRectanglePropertiesEXT
            hasPrimary:             VkBool32 = 1
            hasRender:              VkBool32 = 1
            primaryMajor:            int64_t = 226
            primaryMinor:            int64_t = 0
            renderMajor:             int64_t = 226
            renderMinor:             int64_t = 128
        pNext: VkPhysicalDeviceDiscardRectanglePropertiesEXT = 0x7ffe81cffbf0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT (1000099000)
            pNext:               const void* = VkPhysicalDeviceCustomBorderColorPropertiesEXT
            maxDiscardRectangles:   uint32_t = 4
        pNext: VkPhysicalDeviceCustomBorderColorPropertiesEXT = 0x7ffe81cffaa8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT (1000287001)
            pNext:               const void* = VkPhysicalDeviceConservativeRasterizationPropertiesEXT
            maxCustomBorderColorSamplers: uint32_t = 4096
        pNext: VkPhysicalDeviceConservativeRasterizationPropertiesEXT = 0x7ffe81cffa68:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT (1000101000)
            pNext:               const void* = VkPhysicalDevicePushDescriptorPropertiesKHR
            primitiveOverestimationSize: float = 0
            maxExtraPrimitiveOverestimationSize: float = 0
            extraPrimitiveOverestimationSizeGranularity: float = 0
            primitiveUnderestimation: VkBool32 = 0
            conservativePointAndLineRasterization: VkBool32 = 0
            degenerateTrianglesRasterized: VkBool32 = 1
            degenerateLinesRasterized: VkBool32 = 0
            fullyCoveredFragmentShaderInputVariable: VkBool32 = 0
            conservativeRasterizationPostDepthCoverage: VkBool32 = 0
        pNext: VkPhysicalDevicePushDescriptorPropertiesKHR = 0x7ffe81cff9e0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR (1000080000)
            pNext:               const void* = VkPhysicalDevicePerformanceQueryPropertiesKHR
            maxPushDescriptors:     uint32_t = 32
        pNext: VkPhysicalDevicePerformanceQueryPropertiesKHR = 0x7ffe81cff9a0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR (1000116001)
            pNext:               const void* = VkPhysicalDeviceFragmentShadingRatePropertiesKHR
            allowCommandBufferQueryCopies: VkBool32 = 0
        pNext: VkPhysicalDeviceFragmentShadingRatePropertiesKHR = 0x7ffe81cff938:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR (1000226002)
            pNext:               const void* = VkPhysicalDeviceAccelerationStructurePropertiesKHR
            minFragmentShadingRateAttachmentTexelSize: VkExtent2D = 0x7ffe81cff948:
                width:                  uint32_t = 8
                height:                 uint32_t = 8
            maxFragmentShadingRateAttachmentTexelSize: VkExtent2D = 0x7ffe81cff950:
                width:                  uint32_t = 8
                height:                 uint32_t = 8
            maxFragmentShadingRateAttachmentTexelSizeAspectRatio: uint32_t = 1
            primitiveFragmentShadingRateWithMultipleViewports: VkBool32 = 1
            layeredShadingRateAttachments: VkBool32 = 0
            fragmentShadingRateNonTrivialCombinerOps: VkBool32 = 1
            maxFragmentSize:      VkExtent2D = 0x7ffe81cff968:
                width:                  uint32_t = 2
                height:                 uint32_t = 2
            maxFragmentSizeAspectRatio: uint32_t = 2
            maxFragmentShadingRateCoverageSamples: uint32_t = 32
            maxFragmentShadingRateRasterizationSamples: VkSampleCountFlagBits = 8 (VK_SAMPLE_COUNT_8_BIT)
            fragmentShadingRateWithShaderDepthStencilWrites: VkBool32 = 1
            fragmentShadingRateWithSampleMask: VkBool32 = 1
            fragmentShadingRateWithShaderSampleMask: VkBool32 = 0
            fragmentShadingRateWithConservativeRasterization: VkBool32 = 1
            fragmentShadingRateWithFragmentShaderInterlock: VkBool32 = 0
            fragmentShadingRateWithCustomSampleLocations: VkBool32 = 0
            fragmentShadingRateStrictMultiplyCombiner: VkBool32 = 1
        pNext: VkPhysicalDeviceAccelerationStructurePropertiesKHR = 0x7ffe81cff8d0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR (1000150014)
            pNext:               const void* = VkPhysicalDeviceVulkan13Properties
            maxGeometryCount:       uint64_t = 16777215
            maxInstanceCount:       uint64_t = 16777215
            maxPrimitiveCount:      uint64_t = 536870911
            maxPerStageDescriptorAccelerationStructures: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindAccelerationStructures: uint32_t = 8388606
            maxDescriptorSetAccelerationStructures: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindAccelerationStructures: uint32_t = 8388606
            minAccelerationStructureScratchOffsetAlignment: uint32_t = 128
        pNext: VkPhysicalDeviceVulkan13Properties = 0x7ffe81cff258:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES (54)
            pNext:               const void* = VkPhysicalDeviceVulkan12Properties
            minSubgroupSize:        uint32_t = 32
            maxSubgroupSize:        uint32_t = 64
            maxComputeWorkgroupSubgroups: uint32_t = 4294967295
            requiredSubgroupSizeStages: VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
            maxInlineUniformBlockSize: uint32_t = 4194304
            maxPerStageDescriptorInlineUniformBlocks: uint32_t = 134217728
            maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks: uint32_t = 134217728
            maxDescriptorSetInlineUniformBlocks: uint32_t = 64
            maxDescriptorSetUpdateAfterBindInlineUniformBlocks: uint32_t = 64
            maxInlineUniformTotalSize: uint32_t = 65535
            integerDotProduct8BitUnsignedAccelerated: VkBool32 = 1
            integerDotProduct8BitSignedAccelerated: VkBool32 = 1
            integerDotProduct8BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct4x8BitPackedUnsignedAccelerated: VkBool32 = 1
            integerDotProduct4x8BitPackedSignedAccelerated: VkBool32 = 1
            integerDotProduct4x8BitPackedMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct16BitUnsignedAccelerated: VkBool32 = 1
            integerDotProduct16BitSignedAccelerated: VkBool32 = 1
            integerDotProduct16BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct32BitUnsignedAccelerated: VkBool32 = 0
            integerDotProduct32BitSignedAccelerated: VkBool32 = 0
            integerDotProduct32BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct64BitUnsignedAccelerated: VkBool32 = 0
            integerDotProduct64BitSignedAccelerated: VkBool32 = 0
            integerDotProduct64BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating8BitUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating8BitSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating16BitUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating16BitSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating32BitUnsignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating32BitSignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating64BitUnsignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating64BitSignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated: VkBool32 = 0
            storageTexelBufferOffsetAlignmentBytes: VkDeviceSize = 4
            storageTexelBufferOffsetSingleTexelAlignment: VkBool32 = 1
            uniformTexelBufferOffsetAlignmentBytes: VkDeviceSize = 4
            uniformTexelBufferOffsetSingleTexelAlignment: VkBool32 = 1
            maxBufferSize:      VkDeviceSize = 4294967292
        pNext: VkPhysicalDeviceVulkan12Properties = 0x7ffe81cfef70:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES (52)
            pNext:               const void* = VkPhysicalDeviceVulkan11Properties
            driverID:             VkDriverId = VK_DRIVER_ID_MESA_RADV (3)
            driverName: char[VK_MAX_DRIVER_NAME_SIZE] = "radv"
            driverInfo: char[VK_MAX_DRIVER_INFO_SIZE] = "Mesa 22.3.4"
            conformanceVersion: VkConformanceVersion = 0x7ffe81cff184:
                major:                   uint8_t = 1
                minor:                   uint8_t = 3
                subminor:                uint8_t = 0
                patch:                   uint8_t = 0
            denormBehaviorIndependence: VkShaderFloatControlsIndependence = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY (0)
            roundingModeIndependence: VkShaderFloatControlsIndependence = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY (0)
            shaderSignedZeroInfNanPreserveFloat16: VkBool32 = 1
            shaderSignedZeroInfNanPreserveFloat32: VkBool32 = 1
            shaderSignedZeroInfNanPreserveFloat64: VkBool32 = 1
            shaderDenormPreserveFloat16: VkBool32 = 1
            shaderDenormPreserveFloat32: VkBool32 = 1
            shaderDenormPreserveFloat64: VkBool32 = 1
            shaderDenormFlushToZeroFloat16: VkBool32 = 1
            shaderDenormFlushToZeroFloat32: VkBool32 = 1
            shaderDenormFlushToZeroFloat64: VkBool32 = 1
            shaderRoundingModeRTEFloat16: VkBool32 = 1
            shaderRoundingModeRTEFloat32: VkBool32 = 1
            shaderRoundingModeRTEFloat64: VkBool32 = 1
            shaderRoundingModeRTZFloat16: VkBool32 = 1
            shaderRoundingModeRTZFloat32: VkBool32 = 1
            shaderRoundingModeRTZFloat64: VkBool32 = 1
            maxUpdateAfterBindDescriptorsInAllPools: uint32_t = 67108863
            shaderUniformBufferArrayNonUniformIndexingNative: VkBool32 = 0
            shaderSampledImageArrayNonUniformIndexingNative: VkBool32 = 0
            shaderStorageBufferArrayNonUniformIndexingNative: VkBool32 = 0
            shaderStorageImageArrayNonUniformIndexingNative: VkBool32 = 0
            shaderInputAttachmentArrayNonUniformIndexingNative: VkBool32 = 0
            robustBufferAccessUpdateAfterBind: VkBool32 = 1
            quadDivergentImplicitLod: VkBool32 = 0
            maxPerStageDescriptorUpdateAfterBindSamplers: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindUniformBuffers: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindStorageBuffers: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindSampledImages: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindStorageImages: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindInputAttachments: uint32_t = 8388606
            maxPerStageUpdateAfterBindResources: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindSamplers: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindUniformBuffers: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindUniformBuffersDynamic: uint32_t = 16
            maxDescriptorSetUpdateAfterBindStorageBuffers: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetUpdateAfterBindSampledImages: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindStorageImages: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindInputAttachments: uint32_t = 8388606
            supportedDepthResolveModes: VkResolveModeFlags = 15 (VK_RESOLVE_MODE_SAMPLE_ZERO_BIT | VK_RESOLVE_MODE_AVERAGE_BIT | VK_RESOLVE_MODE_MIN_BIT | VK_RESOLVE_MODE_MAX_BIT)
            supportedStencilResolveModes: VkResolveModeFlags = 13 (VK_RESOLVE_MODE_SAMPLE_ZERO_BIT | VK_RESOLVE_MODE_MIN_BIT | VK_RESOLVE_MODE_MAX_BIT)
            independentResolveNone: VkBool32 = 1
            independentResolve:     VkBool32 = 1
            filterMinmaxSingleComponentFormats: VkBool32 = 1
            filterMinmaxImageComponentMapping: VkBool32 = 1
            maxTimelineSemaphoreValueDifference: uint64_t = 18446744073709551615
            framebufferIntegerColorSampleCounts: VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
        pNext: VkPhysicalDeviceVulkan11Properties = 0x7ffe81cfeef8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES (50)
            pNext:                     void* = NULL
            deviceUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cfef08
                deviceUUID[0]:           uint8_t = 0
                deviceUUID[1]:           uint8_t = 0
                deviceUUID[2]:           uint8_t = 0
                deviceUUID[3]:           uint8_t = 0
                deviceUUID[4]:           uint8_t = 3
                deviceUUID[5]:           uint8_t = 0
                deviceUUID[6]:           uint8_t = 0
                deviceUUID[7]:           uint8_t = 0
                deviceUUID[8]:           uint8_t = 0
                deviceUUID[9]:           uint8_t = 0
                deviceUUID[10]:          uint8_t = 0
                deviceUUID[11]:          uint8_t = 0
                deviceUUID[12]:          uint8_t = 0
                deviceUUID[13]:          uint8_t = 0
                deviceUUID[14]:          uint8_t = 0
                deviceUUID[15]:          uint8_t = 0
            driverUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cfef18
                driverUUID[0]:           uint8_t = 65
                driverUUID[1]:           uint8_t = 77
                driverUUID[2]:           uint8_t = 68
                driverUUID[3]:           uint8_t = 45
                driverUUID[4]:           uint8_t = 77
                driverUUID[5]:           uint8_t = 69
                driverUUID[6]:           uint8_t = 83
                driverUUID[7]:           uint8_t = 65
                driverUUID[8]:           uint8_t = 45
                driverUUID[9]:           uint8_t = 68
                driverUUID[10]:          uint8_t = 82
                driverUUID[11]:          uint8_t = 86
                driverUUID[12]:          uint8_t = 0
                driverUUID[13]:          uint8_t = 0
                driverUUID[14]:          uint8_t = 0
                driverUUID[15]:          uint8_t = 0
            deviceLUID: uint8_t[VK_LUID_SIZE] = 0x7ffe81cfef28
                deviceLUID[0]:           uint8_t = 0
                deviceLUID[1]:           uint8_t = 0
                deviceLUID[2]:           uint8_t = 0
                deviceLUID[3]:           uint8_t = 0
                deviceLUID[4]:           uint8_t = 0
                deviceLUID[5]:           uint8_t = 0
                deviceLUID[6]:           uint8_t = 0
                deviceLUID[7]:           uint8_t = 0
            deviceNodeMask:         uint32_t = 0
            deviceLUIDValid:        VkBool32 = 0
            subgroupSize:           uint32_t = 64
            subgroupSupportedStages: VkShaderStageFlags = 255 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT | VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT | VK_SHADER_STAGE_GEOMETRY_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT | VK_SHADER_STAGE_TASK_BIT_EXT | VK_SHADER_STAGE_MESH_BIT_EXT)
            subgroupSupportedOperations: VkSubgroupFeatureFlags = 255 (VK_SUBGROUP_FEATURE_BASIC_BIT | VK_SUBGROUP_FEATURE_VOTE_BIT | VK_SUBGROUP_FEATURE_ARITHMETIC_BIT | VK_SUBGROUP_FEATURE_BALLOT_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT | VK_SUBGROUP_FEATURE_CLUSTERED_BIT | VK_SUBGROUP_FEATURE_QUAD_BIT)
            subgroupQuadOperationsInAllStages: VkBool32 = 1
            pointClippingBehavior: VkPointClippingBehavior = VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES (0)
            maxMultiviewViewCount:  uint32_t = 8
            maxMultiviewInstanceIndex: uint32_t = 2147483647
            protectedNoFault:       VkBool32 = 0
            maxPerSetDescriptors:   uint32_t = 22369621
            maxMemoryAllocationSize: VkDeviceSize = 4294967292

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties2KHR(physicalDevice, pMemoryProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pMemoryProperties: VkPhysicalDeviceMemoryProperties2* = 0x7ffe81cffeb0:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 (1000059006)
        pNext:                     void* = NULL
        memoryProperties: VkPhysicalDeviceMemoryProperties = 0x7ffe81cffec0:
            memoryTypeCount:        uint32_t = 9
            memoryTypes: VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7ffe81cffec4
                memoryTypes[0]:     VkMemoryType = 0x7ffe81cffec4:
                    propertyFlags: VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                    heapIndex:              uint32_t = 1
                memoryTypes[1]:     VkMemoryType = 0x7ffe81cffecc:
                    propertyFlags: VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                    heapIndex:              uint32_t = 1
                memoryTypes[2]:     VkMemoryType = 0x7ffe81cffed4:
                    propertyFlags: VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                    heapIndex:              uint32_t = 0
                memoryTypes[3]:     VkMemoryType = 0x7ffe81cffedc:
                    propertyFlags: VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                    heapIndex:              uint32_t = 1
                memoryTypes[4]:     VkMemoryType = 0x7ffe81cffee4:
                    propertyFlags: VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                    heapIndex:              uint32_t = 0
                memoryTypes[5]:     VkMemoryType = 0x7ffe81cffeec:
                    propertyFlags: VkMemoryPropertyFlags = 193 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                    heapIndex:              uint32_t = 1
                memoryTypes[6]:     VkMemoryType = 0x7ffe81cffef4:
                    propertyFlags: VkMemoryPropertyFlags = 198 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                    heapIndex:              uint32_t = 0
                memoryTypes[7]:     VkMemoryType = 0x7ffe81cffefc:
                    propertyFlags: VkMemoryPropertyFlags = 199 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                    heapIndex:              uint32_t = 1
                memoryTypes[8]:     VkMemoryType = 0x7ffe81cfff04:
                    propertyFlags: VkMemoryPropertyFlags = 206 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                    heapIndex:              uint32_t = 0
            memoryHeapCount:        uint32_t = 2
            memoryHeaps: VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7ffe81cfffc8
                memoryHeaps[0]:     VkMemoryHeap = 0x7ffe81cfffc8:
                    size:               VkDeviceSize = 16383363072
                    flags:         VkMemoryHeapFlags = 0
                memoryHeaps[1]:     VkMemoryHeap = 0x7ffe81cfffd8:
                    size:               VkDeviceSize = 8573157376
                    flags:         VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties2KHR(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pQueueFamilyPropertyCount: uint32_t* = 2
    pQueueFamilyProperties: VkQueueFamilyProperties2* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties2KHR(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pQueueFamilyPropertyCount: uint32_t* = 2
    pQueueFamilyProperties: VkQueueFamilyProperties2* = 0x55e09030bf10
        pQueueFamilyProperties[0]: VkQueueFamilyProperties2 = 0x55e09030bf10:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                     void* = NULL
            queueFamilyProperties: VkQueueFamilyProperties = 0x55e09030bf20:
                queueFlags:         VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
                queueCount:             uint32_t = 1
                timestampValidBits:     uint32_t = 64
                minImageTransferGranularity: VkExtent3D = 0x55e09030bf2c:
                    width:                  uint32_t = 1
                    height:                 uint32_t = 1
                    depth:                  uint32_t = 1
        pQueueFamilyProperties[1]: VkQueueFamilyProperties2 = 0x55e09030bf38:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                     void* = NULL
            queueFamilyProperties: VkQueueFamilyProperties = 0x55e09030bf48:
                queueFlags:         VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
                queueCount:             uint32_t = 4
                timestampValidBits:     uint32_t = 64
                minImageTransferGranularity: VkExtent3D = 0x55e09030bf54:
                    width:                  uint32_t = 1
                    height:                 uint32_t = 1
                    depth:                  uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356e60
    pProperties: VkPhysicalDeviceProperties* = 0x7ffe81cff5b8:
        apiVersion:             uint32_t = 4206822
        driverVersion:          uint32_t = 92286980
        vendorID:               uint32_t = 4098
        deviceID:               uint32_t = 5710
        deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon Graphics (RADV GFX1036)"
        pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff6cc
            pipelineCacheUUID[0]:    uint8_t = 135
            pipelineCacheUUID[1]:    uint8_t = 189
            pipelineCacheUUID[2]:    uint8_t = 188
            pipelineCacheUUID[3]:    uint8_t = 77
            pipelineCacheUUID[4]:    uint8_t = 255
            pipelineCacheUUID[5]:    uint8_t = 52
            pipelineCacheUUID[6]:    uint8_t = 50
            pipelineCacheUUID[7]:    uint8_t = 138
            pipelineCacheUUID[8]:    uint8_t = 166
            pipelineCacheUUID[9]:    uint8_t = 201
            pipelineCacheUUID[10]:   uint8_t = 18
            pipelineCacheUUID[11]:   uint8_t = 222
            pipelineCacheUUID[12]:   uint8_t = 130
            pipelineCacheUUID[13]:   uint8_t = 2
            pipelineCacheUUID[14]:   uint8_t = 215
            pipelineCacheUUID[15]:   uint8_t = 202
        limits:   VkPhysicalDeviceLimits = 0x7ffe81cff6e0:
            maxImageDimension1D:    uint32_t = 16384
            maxImageDimension2D:    uint32_t = 16384
            maxImageDimension3D:    uint32_t = 2048
            maxImageDimensionCube:  uint32_t = 16384
            maxImageArrayLayers:    uint32_t = 2048
            maxTexelBufferElements: uint32_t = 4294967295
            maxUniformBufferRange:  uint32_t = 4294967295
            maxStorageBufferRange:  uint32_t = 4294967295
            maxPushConstantsSize:   uint32_t = 256
            maxMemoryAllocationCount: uint32_t = 4294967295
            maxSamplerAllocationCount: uint32_t = 65536
            bufferImageGranularity: VkDeviceSize = 1
            sparseAddressSpaceSize: VkDeviceSize = 4294967292
            maxBoundDescriptorSets: uint32_t = 32
            maxPerStageDescriptorSamplers: uint32_t = 8388606
            maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
            maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
            maxPerStageDescriptorSampledImages: uint32_t = 8388606
            maxPerStageDescriptorStorageImages: uint32_t = 8388606
            maxPerStageDescriptorInputAttachments: uint32_t = 8388606
            maxPerStageResources:   uint32_t = 8388606
            maxDescriptorSetSamplers: uint32_t = 8388606
            maxDescriptorSetUniformBuffers: uint32_t = 8388606
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
            maxDescriptorSetStorageBuffers: uint32_t = 8388606
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages: uint32_t = 8388606
            maxDescriptorSetStorageImages: uint32_t = 8388606
            maxDescriptorSetInputAttachments: uint32_t = 8388606
            maxVertexInputAttributes: uint32_t = 32
            maxVertexInputBindings: uint32_t = 32
            maxVertexInputAttributeOffset: uint32_t = 4294967295
            maxVertexInputBindingStride: uint32_t = 2048
            maxVertexOutputComponents: uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize: uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4096
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations: uint32_t = 127
            maxGeometryInputComponents: uint32_t = 64
            maxGeometryOutputComponents: uint32_t = 128
            maxGeometryOutputVertices: uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents: uint32_t = 128
            maxFragmentOutputAttachments: uint32_t = 8
            maxFragmentDualSrcAttachments: uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 8388606
            maxComputeSharedMemorySize: uint32_t = 65536
            maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff7bc
                maxComputeWorkGroupCount[0]: uint32_t = 65535
                maxComputeWorkGroupCount[1]: uint32_t = 65535
                maxComputeWorkGroupCount[2]: uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff7cc
                maxComputeWorkGroupSize[0]: uint32_t = 1024
                maxComputeWorkGroupSize[1]: uint32_t = 1024
                maxComputeWorkGroupSize[2]: uint32_t = 1024
            subPixelPrecisionBits:  uint32_t = 8
            subTexelPrecisionBits:  uint32_t = 8
            mipmapPrecisionBits:    uint32_t = 8
            maxDrawIndexedIndexValue: uint32_t = 4294967295
            maxDrawIndirectCount:   uint32_t = 4294967295
            maxSamplerLodBias:         float = 16
            maxSamplerAnisotropy:      float = 16
            maxViewports:           uint32_t = 16
            maxViewportDimensions: uint32_t[2] = 0x7ffe81cff7f8
                maxViewportDimensions[0]: uint32_t = 16384
                maxViewportDimensions[1]: uint32_t = 16384
            viewportBoundsRange:    float[2] = 0x7ffe81cff800
                viewportBoundsRange[0]:    float = -32768
                viewportBoundsRange[1]:    float = 32767
            viewportSubPixelBits:   uint32_t = 8
            minMemoryMapAlignment:    size_t = 4096
            minTexelBufferOffsetAlignment: VkDeviceSize = 4
            minUniformBufferOffsetAlignment: VkDeviceSize = 4
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:          int32_t = -32
            maxTexelOffset:         uint32_t = 31
            minTexelGatherOffset:    int32_t = -32
            maxTexelGatherOffset:   uint32_t = 31
            minInterpolationOffset:    float = -2
            maxInterpolationOffset:    float = 2
            subPixelInterpolationOffsetBits: uint32_t = 8
            maxFramebufferWidth:    uint32_t = 16384
            maxFramebufferHeight:   uint32_t = 16384
            maxFramebufferLayers:   uint32_t = 1024
            framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:    uint32_t = 8
            sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:     uint32_t = 1
            timestampComputeAndGraphics: VkBool32 = 1
            timestampPeriod:           float = 10
            maxClipDistances:       uint32_t = 8
            maxCullDistances:       uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities: uint32_t = 2
            pointSizeRange:         float[2] = 0x7ffe81cff89c
                pointSizeRange[0]:         float = 0
                pointSizeRange[1]:         float = 8191.88
            lineWidthRange:         float[2] = 0x7ffe81cff8a4
                lineWidthRange[0]:         float = 0
                lineWidthRange[1]:         float = 8191.88
            pointSizeGranularity:      float = 0.125
            lineWidthGranularity:      float = 0.125
            strictLines:            VkBool32 = 0
            standardSampleLocations: VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize: VkDeviceSize = 64
        sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cff8d8:
            residencyStandard2DBlockShape: VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape: VkBool32 = 1
            residencyAlignedMipSize: VkBool32 = 0
            residencyNonResidentStrict: VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures2KHR(physicalDevice, pFeatures) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356e60
    pFeatures: VkPhysicalDeviceFeatures2* = 0x7ffe81cfecd8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 (1000059000)
        pNext:               const void* = VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL
        features: VkPhysicalDeviceFeatures = 0x7ffe81cfece8:
            robustBufferAccess:     VkBool32 = 1
            fullDrawIndexUint32:    VkBool32 = 1
            imageCubeArray:         VkBool32 = 1
            independentBlend:       VkBool32 = 1
            geometryShader:         VkBool32 = 1
            tessellationShader:     VkBool32 = 1
            sampleRateShading:      VkBool32 = 1
            dualSrcBlend:           VkBool32 = 1
            logicOp:                VkBool32 = 1
            multiDrawIndirect:      VkBool32 = 1
            drawIndirectFirstInstance: VkBool32 = 1
            depthClamp:             VkBool32 = 1
            depthBiasClamp:         VkBool32 = 1
            fillModeNonSolid:       VkBool32 = 1
            depthBounds:            VkBool32 = 1
            wideLines:              VkBool32 = 1
            largePoints:            VkBool32 = 1
            alphaToOne:             VkBool32 = 0
            multiViewport:          VkBool32 = 1
            samplerAnisotropy:      VkBool32 = 1
            textureCompressionETC2: VkBool32 = 0
            textureCompressionASTC_LDR: VkBool32 = 0
            textureCompressionBC:   VkBool32 = 1
            occlusionQueryPrecise:  VkBool32 = 1
            pipelineStatisticsQuery: VkBool32 = 1
            vertexPipelineStoresAndAtomics: VkBool32 = 1
            fragmentStoresAndAtomics: VkBool32 = 1
            shaderTessellationAndGeometryPointSize: VkBool32 = 1
            shaderImageGatherExtended: VkBool32 = 1
            shaderStorageImageExtendedFormats: VkBool32 = 1
            shaderStorageImageMultisample: VkBool32 = 1
            shaderStorageImageReadWithoutFormat: VkBool32 = 1
            shaderStorageImageWriteWithoutFormat: VkBool32 = 1
            shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
            shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
            shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
            shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
            shaderClipDistance:     VkBool32 = 1
            shaderCullDistance:     VkBool32 = 1
            shaderFloat64:          VkBool32 = 1
            shaderInt64:            VkBool32 = 1
            shaderInt16:            VkBool32 = 1
            shaderResourceResidency: VkBool32 = 1
            shaderResourceMinLod:   VkBool32 = 1
            sparseBinding:          VkBool32 = 1
            sparseResidencyBuffer:  VkBool32 = 1
            sparseResidencyImage2D: VkBool32 = 1
            sparseResidencyImage3D: VkBool32 = 1
            sparseResidency2Samples: VkBool32 = 0
            sparseResidency4Samples: VkBool32 = 0
            sparseResidency8Samples: VkBool32 = 0
            sparseResidency16Samples: VkBool32 = 0
            sparseResidencyAliased: VkBool32 = 1
            variableMultisampleRate: VkBool32 = 1
            inheritedQueries:       VkBool32 = 1
        pNext: VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL = 0x7ffe81d00220:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL (1000209000)
            pNext:               const void* = VkPhysicalDeviceComputeShaderDerivativesFeaturesNV
            shaderIntegerFunctions2: VkBool32 = 1
        pNext: VkPhysicalDeviceComputeShaderDerivativesFeaturesNV = 0x7ffe81cffeb0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV (1000201000)
            pNext:               const void* = VkPhysicalDeviceCoherentMemoryFeaturesAMD
            computeDerivativeGroupQuads: VkBool32 = 0
            computeDerivativeGroupLinear: VkBool32 = 1
        pNext: VkPhysicalDeviceCoherentMemoryFeaturesAMD = 0x7ffe81cffe90:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD (1000229000)
            pNext:               const void* = VkPhysicalDeviceYcbcrImageArraysFeaturesEXT
            deviceCoherentMemory:   VkBool32 = 1
        pNext: VkPhysicalDeviceYcbcrImageArraysFeaturesEXT = 0x7ffe81cffe50:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT (1000252000)
            pNext:               const void* = VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT
            ycbcrImageArrays:       VkBool32 = 1
        pNext: VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT = 0x7ffe81cffe10:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT (1000352000)
            pNext:               const void* = VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT
            vertexInputDynamicState: VkBool32 = 1
        pNext: VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = 0x7ffe81cffdf0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT (1000190002)
            pNext:               const void* = VkPhysicalDeviceTransformFeedbackFeaturesEXT
            vertexAttributeInstanceRateDivisor: VkBool32 = 1
            vertexAttributeInstanceRateZeroDivisor: VkBool32 = 1
        pNext: VkPhysicalDeviceTransformFeedbackFeaturesEXT = 0x7ffe81cffdd0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT (1000028000)
            pNext:               const void* = VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT
            transformFeedback:      VkBool32 = 1
            geometryStreams:        VkBool32 = 1
        pNext: VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT = 0x7ffe81cffdb0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT (1000281000)
            pNext:               const void* = VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT
            texelBufferAlignment:   VkBool32 = 1
        pNext: VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT = 0x7ffe81cffd70:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT (1000462000)
            pNext:               const void* = VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT
            shaderModuleIdentifier: VkBool32 = 1
        pNext: VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT = 0x7ffe81cffd50:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT (1000234000)
            pNext:               const void* = VkPhysicalDeviceShaderAtomicFloatFeaturesEXT
            shaderImageInt64Atomics: VkBool32 = 1
            sparseImageInt64Atomics: VkBool32 = 1
        pNext: VkPhysicalDeviceShaderAtomicFloatFeaturesEXT = 0x7ffe81cffd08:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT (1000260000)
            pNext:               const void* = VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT
            shaderBufferFloat32Atomics: VkBool32 = 1
            shaderBufferFloat32AtomicAdd: VkBool32 = 0
            shaderBufferFloat64Atomics: VkBool32 = 1
            shaderBufferFloat64AtomicAdd: VkBool32 = 0
            shaderSharedFloat32Atomics: VkBool32 = 1
            shaderSharedFloat32AtomicAdd: VkBool32 = 1
            shaderSharedFloat64Atomics: VkBool32 = 1
            shaderSharedFloat64AtomicAdd: VkBool32 = 0
            shaderImageFloat32Atomics: VkBool32 = 1
            shaderImageFloat32AtomicAdd: VkBool32 = 0
            sparseImageFloat32Atomics: VkBool32 = 1
            sparseImageFloat32AtomicAdd: VkBool32 = 0
        pNext: VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT = 0x7ffe81cffcc0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT (1000273000)
            pNext:               const void* = VkPhysicalDeviceRobustness2FeaturesEXT
            shaderBufferFloat16Atomics: VkBool32 = 0
            shaderBufferFloat16AtomicAdd: VkBool32 = 0
            shaderBufferFloat16AtomicMinMax: VkBool32 = 0
            shaderBufferFloat32AtomicMinMax: VkBool32 = 1
            shaderBufferFloat64AtomicMinMax: VkBool32 = 1
            shaderSharedFloat16Atomics: VkBool32 = 0
            shaderSharedFloat16AtomicAdd: VkBool32 = 0
            shaderSharedFloat16AtomicMinMax: VkBool32 = 0
            shaderSharedFloat32AtomicMinMax: VkBool32 = 1
            shaderSharedFloat64AtomicMinMax: VkBool32 = 1
            shaderImageFloat32AtomicMinMax: VkBool32 = 1
            sparseImageFloat32AtomicMinMax: VkBool32 = 1
        pNext: VkPhysicalDeviceRobustness2FeaturesEXT = 0x7ffe81cffc98:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT (1000286000)
            pNext:               const void* = VkPhysicalDeviceProvokingVertexFeaturesEXT
            robustBufferAccess2:    VkBool32 = 1
            robustImageAccess2:     VkBool32 = 1
            nullDescriptor:         VkBool32 = 1
        pNext: VkPhysicalDeviceProvokingVertexFeaturesEXT = 0x7ffe81cffc30:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT (1000254000)
            pNext:               const void* = VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT
            provokingVertexLast:    VkBool32 = 1
            transformFeedbackPreservesProvokingVertex: VkBool32 = 1
        pNext: VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT = 0x7ffe81cffc08:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT (1000382000)
            pNext:               const void* = VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT
            primitivesGeneratedQuery: VkBool32 = 1
            primitivesGeneratedQueryWithRasterizerDiscard: VkBool32 = 1
            primitivesGeneratedQueryWithNonZeroStreams: VkBool32 = 1
        pNext: VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT = 0x7ffe81cffbe8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT (1000356000)
            pNext:               const void* = VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT
            primitiveTopologyListRestart: VkBool32 = 1
            primitiveTopologyPatchListRestart: VkBool32 = 0
        pNext: VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT = 0x7ffe81cffb20:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT (1000422000)
            pNext:               const void* = VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT
            nonSeamlessCubeMap:     VkBool32 = 1
        pNext: VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT = 0x7ffe81cffb00:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT (1000351000)
            pNext:               const void* = VkPhysicalDeviceMultiDrawFeaturesEXT
            mutableDescriptorType:  VkBool32 = 1
        pNext: VkPhysicalDeviceMultiDrawFeaturesEXT = 0x7ffe81cffac0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT (1000392000)
            pNext:               const void* = VkPhysicalDeviceMemoryPriorityFeaturesEXT
            multiDraw:              VkBool32 = 1
        pNext: VkPhysicalDeviceMemoryPriorityFeaturesEXT = 0x7ffe81cffa70:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT (1000238000)
            pNext:               const void* = VkPhysicalDeviceLineRasterizationFeaturesEXT
            memoryPriority:         VkBool32 = 1
        pNext: VkPhysicalDeviceLineRasterizationFeaturesEXT = 0x7ffe81cffa40:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT (1000259000)
            pNext:               const void* = VkPhysicalDeviceIndexTypeUint8FeaturesEXT
            rectangularLines:       VkBool32 = 0
            bresenhamLines:         VkBool32 = 1
            smoothLines:            VkBool32 = 0
            stippledRectangularLines: VkBool32 = 0
            stippledBresenhamLines: VkBool32 = 1
            stippledSmoothLines:    VkBool32 = 0
        pNext: VkPhysicalDeviceIndexTypeUint8FeaturesEXT = 0x7ffe81cffa00:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT (1000265000)
            pNext:               const void* = VkPhysicalDeviceImageViewMinLodFeaturesEXT
            indexTypeUint8:         VkBool32 = 1
        pNext: VkPhysicalDeviceImageViewMinLodFeaturesEXT = 0x7ffe81cff9e0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT (1000391000)
            pNext:               const void* = VkPhysicalDeviceImage2DViewOf3DFeaturesEXT
            minLod:                 VkBool32 = 1
        pNext: VkPhysicalDeviceImage2DViewOf3DFeaturesEXT = 0x7ffe81cff980:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT (1000393000)
            pNext:               const void* = VkPhysicalDeviceExtendedDynamicStateFeaturesEXT
            image2DViewOf3D:        VkBool32 = 1
            sampler2DViewOf3D:      VkBool32 = 0
        pNext: VkPhysicalDeviceExtendedDynamicStateFeaturesEXT = 0x7ffe81cff8b0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT (1000267000)
            pNext:               const void* = VkPhysicalDeviceExtendedDynamicState3FeaturesEXT
            extendedDynamicState:   VkBool32 = 1
        pNext: VkPhysicalDeviceExtendedDynamicState3FeaturesEXT = 0x7ffe81cff818:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT (1000455000)
            pNext:               const void* = VkPhysicalDeviceExtendedDynamicState2FeaturesEXT
            extendedDynamicState3TessellationDomainOrigin: VkBool32 = 1
            extendedDynamicState3DepthClampEnable: VkBool32 = 1
            extendedDynamicState3PolygonMode: VkBool32 = 1
            extendedDynamicState3RasterizationSamples: VkBool32 = 0
            extendedDynamicState3SampleMask: VkBool32 = 1
            extendedDynamicState3AlphaToCoverageEnable: VkBool32 = 1
            extendedDynamicState3AlphaToOneEnable: VkBool32 = 0
            extendedDynamicState3LogicOpEnable: VkBool32 = 1
            extendedDynamicState3ColorBlendEnable: VkBool32 = 0
            extendedDynamicState3ColorBlendEquation: VkBool32 = 0
            extendedDynamicState3ColorWriteMask: VkBool32 = 0
            extendedDynamicState3RasterizationStream: VkBool32 = 0
            extendedDynamicState3ConservativeRasterizationMode: VkBool32 = 1
            extendedDynamicState3ExtraPrimitiveOverestimationSize: VkBool32 = 0
            extendedDynamicState3DepthClipEnable: VkBool32 = 1
            extendedDynamicState3SampleLocationsEnable: VkBool32 = 0
            extendedDynamicState3ColorBlendAdvanced: VkBool32 = 0
            extendedDynamicState3ProvokingVertexMode: VkBool32 = 0
            extendedDynamicState3LineRasterizationMode: VkBool32 = 0
            extendedDynamicState3LineStippleEnable: VkBool32 = 1
            extendedDynamicState3DepthClipNegativeOneToOne: VkBool32 = 1
            extendedDynamicState3ViewportWScalingEnable: VkBool32 = 0
            extendedDynamicState3ViewportSwizzle: VkBool32 = 0
            extendedDynamicState3CoverageToColorEnable: VkBool32 = 0
            extendedDynamicState3CoverageToColorLocation: VkBool32 = 0
            extendedDynamicState3CoverageModulationMode: VkBool32 = 0
            extendedDynamicState3CoverageModulationTableEnable: VkBool32 = 0
            extendedDynamicState3CoverageModulationTable: VkBool32 = 0
            extendedDynamicState3CoverageReductionMode: VkBool32 = 0
            extendedDynamicState3RepresentativeFragmentTestEnable: VkBool32 = 0
            extendedDynamicState3ShadingRateImageEnable: VkBool32 = 0
        pNext: VkPhysicalDeviceExtendedDynamicState2FeaturesEXT = 0x7ffe81cff7f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT (1000377000)
            pNext:               const void* = VkPhysicalDeviceDepthClipEnableFeaturesEXT
            extendedDynamicState2:  VkBool32 = 1
            extendedDynamicState2LogicOp: VkBool32 = 1
            extendedDynamicState2PatchControlPoints: VkBool32 = 1
        pNext: VkPhysicalDeviceDepthClipEnableFeaturesEXT = 0x7ffe81cff788:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT (1000102000)
            pNext:               const void* = VkPhysicalDeviceDepthClipControlFeaturesEXT
            depthClipEnable:        VkBool32 = 1
        pNext: VkPhysicalDeviceDepthClipControlFeaturesEXT = 0x7ffe81cff768:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT (1000355000)
            pNext:               const void* = VkPhysicalDeviceCustomBorderColorFeaturesEXT
            depthClipControl:       VkBool32 = 1
        pNext: VkPhysicalDeviceCustomBorderColorFeaturesEXT = 0x7ffe81cff728:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT (1000287002)
            pNext:               const void* = VkPhysicalDeviceConditionalRenderingFeaturesEXT
            customBorderColors:     VkBool32 = 1
            customBorderColorWithoutFormat: VkBool32 = 1
        pNext: VkPhysicalDeviceConditionalRenderingFeaturesEXT = 0x7ffe81cff708:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT (1000081001)
            pNext:               const void* = VkPhysicalDeviceColorWriteEnableFeaturesEXT
            conditionalRendering:   VkBool32 = 1
            inheritedConditionalRendering: VkBool32 = 0
        pNext: VkPhysicalDeviceColorWriteEnableFeaturesEXT = 0x7ffe81cff6e8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT (1000381000)
            pNext:               const void* = VkPhysicalDeviceBorderColorSwizzleFeaturesEXT
            colorWriteEnable:       VkBool32 = 1
        pNext: VkPhysicalDeviceBorderColorSwizzleFeaturesEXT = 0x7ffe81cff6a0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT (1000411000)
            pNext:               const void* = VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT
            borderColorSwizzle:     VkBool32 = 1
            borderColorSwizzleFromImage: VkBool32 = 1
        pNext: VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT = 0x7ffe81cff660:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT (1000339000)
            pNext:               const void* = VkPhysicalDevice4444FormatsFeaturesEXT
            attachmentFeedbackLoopLayout: VkBool32 = 1
        pNext: VkPhysicalDevice4444FormatsFeaturesEXT = 0x7ffe81cff600:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT (1000340000)
            pNext:               const void* = VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR
            formatA4R4G4B4:         VkBool32 = 1
            formatA4B4G4R4:         VkBool32 = 1
        pNext: VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR = 0x7ffe81cff5d8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR (1000336000)
            pNext:               const void* = VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR
            workgroupMemoryExplicitLayout: VkBool32 = 1
            workgroupMemoryExplicitLayoutScalarBlockLayout: VkBool32 = 1
            workgroupMemoryExplicitLayout8BitAccess: VkBool32 = 1
            workgroupMemoryExplicitLayout16BitAccess: VkBool32 = 1
        pNext: VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR = 0x7ffe81cff5b8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR (1000323000)
            pNext:               const void* = VkPhysicalDeviceShaderClockFeaturesKHR
            shaderSubgroupUniformControlFlow: VkBool32 = 1
        pNext: VkPhysicalDeviceShaderClockFeaturesKHR = 0x7ffe81cff598:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR (1000181000)
            pNext:               const void* = VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR
            shaderSubgroupClock:    VkBool32 = 1
            shaderDeviceClock:      VkBool32 = 1
        pNext: VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR = 0x7ffe81cff548:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR (1000386000)
            pNext:               const void* = VkPhysicalDeviceRayQueryFeaturesKHR
            rayTracingMaintenance1: VkBool32 = 1
            rayTracingPipelineTraceRaysIndirect2: VkBool32 = 0
        pNext: VkPhysicalDeviceRayQueryFeaturesKHR = 0x7ffe81cff528:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR (1000348013)
            pNext:               const void* = VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR
            rayQuery:               VkBool32 = 1
        pNext: VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR = 0x7ffe81cff470:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR (1000269000)
            pNext:               const void* = VkPhysicalDevicePerformanceQueryFeaturesKHR
            pipelineExecutableInfo: VkBool32 = 1
        pNext: VkPhysicalDevicePerformanceQueryFeaturesKHR = 0x7ffe81cff450:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR (1000116000)
            pNext:               const void* = VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR
            performanceCounterQueryPools: VkBool32 = 1
            performanceCounterMultipleQueryPools: VkBool32 = 1
        pNext: VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR = 0x7ffe81cff430:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR (1000388000)
            pNext:               const void* = VkPhysicalDeviceFragmentShadingRateFeaturesKHR
            globalPriorityQuery:    VkBool32 = 1
        pNext: VkPhysicalDeviceFragmentShadingRateFeaturesKHR = 0x7ffe81cff408:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR (1000226003)
            pNext:               const void* = VkPhysicalDeviceAccelerationStructureFeaturesKHR
            pipelineFragmentShadingRate: VkBool32 = 1
            primitiveFragmentShadingRate: VkBool32 = 1
            attachmentFragmentShadingRate: VkBool32 = 1
        pNext: VkPhysicalDeviceAccelerationStructureFeaturesKHR = 0x7ffe81cff3b8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR (1000150013)
            pNext:               const void* = VkPhysicalDeviceVulkan13Features
            accelerationStructure:  VkBool32 = 1
            accelerationStructureCaptureReplay: VkBool32 = 0
            accelerationStructureIndirectBuild: VkBool32 = 0
            accelerationStructureHostCommands: VkBool32 = 0
            descriptorBindingAccelerationStructureUpdateAfterBind: VkBool32 = 1
        pNext: VkPhysicalDeviceVulkan13Features = 0x7ffe81cfeef0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES (53)
            pNext:               const void* = VkPhysicalDeviceVulkan12Features
            robustImageAccess:      VkBool32 = 1
            inlineUniformBlock:     VkBool32 = 1
            descriptorBindingInlineUniformBlockUpdateAfterBind: VkBool32 = 1
            pipelineCreationCacheControl: VkBool32 = 1
            privateData:            VkBool32 = 1
            shaderDemoteToHelperInvocation: VkBool32 = 1
            shaderTerminateInvocation: VkBool32 = 1
            subgroupSizeControl:    VkBool32 = 1
            computeFullSubgroups:   VkBool32 = 1
            synchronization2:       VkBool32 = 1
            textureCompressionASTC_HDR: VkBool32 = 0
            shaderZeroInitializeWorkgroupMemory: VkBool32 = 1
            dynamicRendering:       VkBool32 = 1
            shaderIntegerDotProduct: VkBool32 = 1
            maintenance4:           VkBool32 = 1
        pNext: VkPhysicalDeviceVulkan12Features = 0x7ffe81cfee18:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES (51)
            pNext:               const void* = VkPhysicalDeviceVulkan11Features
            samplerMirrorClampToEdge: VkBool32 = 1
            drawIndirectCount:      VkBool32 = 1
            storageBuffer8BitAccess: VkBool32 = 1
            uniformAndStorageBuffer8BitAccess: VkBool32 = 1
            storagePushConstant8:   VkBool32 = 1
            shaderBufferInt64Atomics: VkBool32 = 1
            shaderSharedInt64Atomics: VkBool32 = 1
            shaderFloat16:          VkBool32 = 1
            shaderInt8:             VkBool32 = 1
            descriptorIndexing:     VkBool32 = 1
            shaderInputAttachmentArrayDynamicIndexing: VkBool32 = 1
            shaderUniformTexelBufferArrayDynamicIndexing: VkBool32 = 1
            shaderStorageTexelBufferArrayDynamicIndexing: VkBool32 = 1
            shaderUniformBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderSampledImageArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageImageArrayNonUniformIndexing: VkBool32 = 1
            shaderInputAttachmentArrayNonUniformIndexing: VkBool32 = 1
            shaderUniformTexelBufferArrayNonUniformIndexing: VkBool32 = 1
            shaderStorageTexelBufferArrayNonUniformIndexing: VkBool32 = 1
            descriptorBindingUniformBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingSampledImageUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageImageUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingUniformTexelBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingStorageTexelBufferUpdateAfterBind: VkBool32 = 1
            descriptorBindingUpdateUnusedWhilePending: VkBool32 = 1
            descriptorBindingPartiallyBound: VkBool32 = 1
            descriptorBindingVariableDescriptorCount: VkBool32 = 1
            runtimeDescriptorArray: VkBool32 = 1
            samplerFilterMinmax:    VkBool32 = 1
            scalarBlockLayout:      VkBool32 = 1
            imagelessFramebuffer:   VkBool32 = 1
            uniformBufferStandardLayout: VkBool32 = 1
            shaderSubgroupExtendedTypes: VkBool32 = 1
            separateDepthStencilLayouts: VkBool32 = 1
            hostQueryReset:         VkBool32 = 1
            timelineSemaphore:      VkBool32 = 1
            bufferDeviceAddress:    VkBool32 = 1
            bufferDeviceAddressCaptureReplay: VkBool32 = 1
            bufferDeviceAddressMultiDevice: VkBool32 = 0
            vulkanMemoryModel:      VkBool32 = 1
            vulkanMemoryModelDeviceScope: VkBool32 = 1
            vulkanMemoryModelAvailabilityVisibilityChains: VkBool32 = 0
            shaderOutputViewportIndex: VkBool32 = 1
            shaderOutputLayer:      VkBool32 = 1
            subgroupBroadcastDynamicId: VkBool32 = 1
        pNext: VkPhysicalDeviceVulkan11Features = 0x7ffe81cfedd0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES (49)
            pNext:                     void* = NULL
            storageBuffer16BitAccess: VkBool32 = 1
            uniformAndStorageBuffer16BitAccess: VkBool32 = 1
            storagePushConstant16:  VkBool32 = 1
            storageInputOutput16:   VkBool32 = 1
            multiview:              VkBool32 = 1
            multiviewGeometryShader: VkBool32 = 1
            multiviewTessellationShader: VkBool32 = 1
            variablePointersStorageBuffer: VkBool32 = 1
            variablePointers:       VkBool32 = 1
            protectedMemory:        VkBool32 = 0
            samplerYcbcrConversion: VkBool32 = 1
            shaderDrawParameters:   VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2KHR(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356e60
    pProperties: VkPhysicalDeviceProperties2* = 0x7ffe81cfeba8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:               const void* = VkPhysicalDeviceShaderCorePropertiesAMD
        properties: VkPhysicalDeviceProperties = 0x7ffe81cfebb8:
            apiVersion:             uint32_t = 4206822
            driverVersion:          uint32_t = 92286980
            vendorID:               uint32_t = 4098
            deviceID:               uint32_t = 5710
            deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
            deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon Graphics (RADV GFX1036)"
            pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cfeccc
                pipelineCacheUUID[0]:    uint8_t = 135
                pipelineCacheUUID[1]:    uint8_t = 189
                pipelineCacheUUID[2]:    uint8_t = 188
                pipelineCacheUUID[3]:    uint8_t = 77
                pipelineCacheUUID[4]:    uint8_t = 255
                pipelineCacheUUID[5]:    uint8_t = 52
                pipelineCacheUUID[6]:    uint8_t = 50
                pipelineCacheUUID[7]:    uint8_t = 138
                pipelineCacheUUID[8]:    uint8_t = 166
                pipelineCacheUUID[9]:    uint8_t = 201
                pipelineCacheUUID[10]:   uint8_t = 18
                pipelineCacheUUID[11]:   uint8_t = 222
                pipelineCacheUUID[12]:   uint8_t = 130
                pipelineCacheUUID[13]:   uint8_t = 2
                pipelineCacheUUID[14]:   uint8_t = 215
                pipelineCacheUUID[15]:   uint8_t = 202
            limits:   VkPhysicalDeviceLimits = 0x7ffe81cfece0:
                maxImageDimension1D:    uint32_t = 16384
                maxImageDimension2D:    uint32_t = 16384
                maxImageDimension3D:    uint32_t = 2048
                maxImageDimensionCube:  uint32_t = 16384
                maxImageArrayLayers:    uint32_t = 2048
                maxTexelBufferElements: uint32_t = 4294967295
                maxUniformBufferRange:  uint32_t = 4294967295
                maxStorageBufferRange:  uint32_t = 4294967295
                maxPushConstantsSize:   uint32_t = 256
                maxMemoryAllocationCount: uint32_t = 4294967295
                maxSamplerAllocationCount: uint32_t = 65536
                bufferImageGranularity: VkDeviceSize = 1
                sparseAddressSpaceSize: VkDeviceSize = 4294967292
                maxBoundDescriptorSets: uint32_t = 32
                maxPerStageDescriptorSamplers: uint32_t = 8388606
                maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
                maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
                maxPerStageDescriptorSampledImages: uint32_t = 8388606
                maxPerStageDescriptorStorageImages: uint32_t = 8388606
                maxPerStageDescriptorInputAttachments: uint32_t = 8388606
                maxPerStageResources:   uint32_t = 8388606
                maxDescriptorSetSamplers: uint32_t = 8388606
                maxDescriptorSetUniformBuffers: uint32_t = 8388606
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
                maxDescriptorSetStorageBuffers: uint32_t = 8388606
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
                maxDescriptorSetSampledImages: uint32_t = 8388606
                maxDescriptorSetStorageImages: uint32_t = 8388606
                maxDescriptorSetInputAttachments: uint32_t = 8388606
                maxVertexInputAttributes: uint32_t = 32
                maxVertexInputBindings: uint32_t = 32
                maxVertexInputAttributeOffset: uint32_t = 4294967295
                maxVertexInputBindingStride: uint32_t = 2048
                maxVertexOutputComponents: uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize: uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4096
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations: uint32_t = 127
                maxGeometryInputComponents: uint32_t = 64
                maxGeometryOutputComponents: uint32_t = 128
                maxGeometryOutputVertices: uint32_t = 256
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents: uint32_t = 128
                maxFragmentOutputAttachments: uint32_t = 8
                maxFragmentDualSrcAttachments: uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 8388606
                maxComputeSharedMemorySize: uint32_t = 65536
                maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cfedbc
                    maxComputeWorkGroupCount[0]: uint32_t = 65535
                    maxComputeWorkGroupCount[1]: uint32_t = 65535
                    maxComputeWorkGroupCount[2]: uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cfedcc
                    maxComputeWorkGroupSize[0]: uint32_t = 1024
                    maxComputeWorkGroupSize[1]: uint32_t = 1024
                    maxComputeWorkGroupSize[2]: uint32_t = 1024
                subPixelPrecisionBits:  uint32_t = 8
                subTexelPrecisionBits:  uint32_t = 8
                mipmapPrecisionBits:    uint32_t = 8
                maxDrawIndexedIndexValue: uint32_t = 4294967295
                maxDrawIndirectCount:   uint32_t = 4294967295
                maxSamplerLodBias:         float = 16
                maxSamplerAnisotropy:      float = 16
                maxViewports:           uint32_t = 16
                maxViewportDimensions: uint32_t[2] = 0x7ffe81cfedf8
                    maxViewportDimensions[0]: uint32_t = 16384
                    maxViewportDimensions[1]: uint32_t = 16384
                viewportBoundsRange:    float[2] = 0x7ffe81cfee00
                    viewportBoundsRange[0]:    float = -32768
                    viewportBoundsRange[1]:    float = 32767
                viewportSubPixelBits:   uint32_t = 8
                minMemoryMapAlignment:    size_t = 4096
                minTexelBufferOffsetAlignment: VkDeviceSize = 4
                minUniformBufferOffsetAlignment: VkDeviceSize = 4
                minStorageBufferOffsetAlignment: VkDeviceSize = 4
                minTexelOffset:          int32_t = -32
                maxTexelOffset:         uint32_t = 31
                minTexelGatherOffset:    int32_t = -32
                maxTexelGatherOffset:   uint32_t = 31
                minInterpolationOffset:    float = -2
                maxInterpolationOffset:    float = 2
                subPixelInterpolationOffsetBits: uint32_t = 8
                maxFramebufferWidth:    uint32_t = 16384
                maxFramebufferHeight:   uint32_t = 16384
                maxFramebufferLayers:   uint32_t = 1024
                framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxColorAttachments:    uint32_t = 8
                sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:     uint32_t = 1
                timestampComputeAndGraphics: VkBool32 = 1
                timestampPeriod:           float = 10
                maxClipDistances:       uint32_t = 8
                maxCullDistances:       uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities: uint32_t = 2
                pointSizeRange:         float[2] = 0x7ffe81cfee9c
                    pointSizeRange[0]:         float = 0
                    pointSizeRange[1]:         float = 8191.88
                lineWidthRange:         float[2] = 0x7ffe81cfeea4
                    lineWidthRange[0]:         float = 0
                    lineWidthRange[1]:         float = 8191.88
                pointSizeGranularity:      float = 0.125
                lineWidthGranularity:      float = 0.125
                strictLines:            VkBool32 = 0
                standardSampleLocations: VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize: VkDeviceSize = 64
            sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cfeed8:
                residencyStandard2DBlockShape: VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 0
                residencyStandard3DBlockShape: VkBool32 = 1
                residencyAlignedMipSize: VkBool32 = 0
                residencyNonResidentStrict: VkBool32 = 1
        pNext: VkPhysicalDeviceShaderCorePropertiesAMD = 0x7ffe81d00208:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD (1000185000)
            pNext:               const void* = VkPhysicalDeviceShaderCoreProperties2AMD
            shaderEngineCount:      uint32_t = 1
            shaderArraysPerEngineCount: uint32_t = 1
            computeUnitsPerShaderArray: uint32_t = 2
            simdPerComputeUnit:     uint32_t = 2
            wavefrontsPerSimd:      uint32_t = 16
            wavefrontSize:          uint32_t = 64
            sgprsPerSimd:           uint32_t = 2048
            minSgprAllocation:      uint32_t = 128
            maxSgprAllocation:      uint32_t = 104
            sgprAllocationGranularity: uint32_t = 128
            vgprsPerSimd:           uint32_t = 512
            minVgprAllocation:      uint32_t = 4
            maxVgprAllocation:      uint32_t = 256
            vgprAllocationGranularity: uint32_t = 4
        pNext: VkPhysicalDeviceShaderCoreProperties2AMD = 0x7ffe81d001e8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD (1000227000)
            pNext:               const void* = VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT
            shaderCoreFeatures: VkShaderCorePropertiesFlagsAMD = 0
            activeComputeUnitCount: uint32_t = 2
        pNext: VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = 0x7ffe81cfff50:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT (1000190000)
            pNext:               const void* = VkPhysicalDeviceTransformFeedbackPropertiesEXT
            maxVertexAttribDivisor: uint32_t = 4294967295
        pNext: VkPhysicalDeviceTransformFeedbackPropertiesEXT = 0x7ffe81cfff08:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT (1000028001)
            pNext:               const void* = VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT
            maxTransformFeedbackStreams: uint32_t = 4
            maxTransformFeedbackBuffers: uint32_t = 4
            maxTransformFeedbackBufferSize: VkDeviceSize = 4294967295
            maxTransformFeedbackStreamDataSize: uint32_t = 512
            maxTransformFeedbackBufferDataSize: uint32_t = 512
            maxTransformFeedbackBufferDataStride: uint32_t = 512
            transformFeedbackQueries: VkBool32 = 1
            transformFeedbackStreamsLinesTriangles: VkBool32 = 1
            transformFeedbackRasterizationStreamSelect: VkBool32 = 0
            transformFeedbackDraw:  VkBool32 = 1
        pNext: VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT = 0x7ffe81cffee0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT (1000462001)
            pNext:               const void* = VkPhysicalDeviceRobustness2PropertiesEXT
            shaderModuleIdentifierAlgorithmUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cffef0
                shaderModuleIdentifierAlgorithmUUID[0]: uint8_t = 77
                shaderModuleIdentifierAlgorithmUUID[1]: uint8_t = 69
                shaderModuleIdentifierAlgorithmUUID[2]: uint8_t = 83
                shaderModuleIdentifierAlgorithmUUID[3]: uint8_t = 65
                shaderModuleIdentifierAlgorithmUUID[4]: uint8_t = 45
                shaderModuleIdentifierAlgorithmUUID[5]: uint8_t = 83
                shaderModuleIdentifierAlgorithmUUID[6]: uint8_t = 72
                shaderModuleIdentifierAlgorithmUUID[7]: uint8_t = 65
                shaderModuleIdentifierAlgorithmUUID[8]: uint8_t = 49
                shaderModuleIdentifierAlgorithmUUID[9]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[10]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[11]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[12]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[13]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[14]: uint8_t = 0
                shaderModuleIdentifierAlgorithmUUID[15]: uint8_t = 0
        pNext: VkPhysicalDeviceRobustness2PropertiesEXT = 0x7ffe81cffe80:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT (1000286001)
            pNext:               const void* = VkPhysicalDeviceProvokingVertexPropertiesEXT
            robustStorageBufferAccessSizeAlignment: VkDeviceSize = 4
            robustUniformBufferAccessSizeAlignment: VkDeviceSize = 4
        pNext: VkPhysicalDeviceProvokingVertexPropertiesEXT = 0x7ffe81cffe60:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT (1000254002)
            pNext:               const void* = VkPhysicalDevicePCIBusInfoPropertiesEXT
            provokingVertexModePerPipeline: VkBool32 = 1
            transformFeedbackPreservesTriangleFanProvokingVertex: VkBool32 = 1
        pNext: VkPhysicalDevicePCIBusInfoPropertiesEXT = 0x7ffe81cffe10:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT (1000212000)
            pNext:               const void* = VkPhysicalDeviceMultiDrawPropertiesEXT
            pciDomain:              uint32_t = 0
            pciBus:                 uint32_t = 54
            pciDevice:              uint32_t = 0
            pciFunction:            uint32_t = 0
        pNext: VkPhysicalDeviceMultiDrawPropertiesEXT = 0x7ffe81cffdd0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT (1000392001)
            pNext:               const void* = VkPhysicalDeviceLineRasterizationPropertiesEXT
            maxMultiDrawCount:      uint32_t = 2048
        pNext: VkPhysicalDeviceLineRasterizationPropertiesEXT = 0x7ffe81cffd08:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT (1000259002)
            pNext:               const void* = VkPhysicalDeviceExternalMemoryHostPropertiesEXT
            lineSubPixelPrecisionBits: uint32_t = 4
        pNext: VkPhysicalDeviceExternalMemoryHostPropertiesEXT = 0x7ffe81cffc70:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT (1000178002)
            pNext:               const void* = VkPhysicalDeviceExtendedDynamicState3PropertiesEXT
            minImportedHostPointerAlignment: VkDeviceSize = 4096
        pNext: VkPhysicalDeviceExtendedDynamicState3PropertiesEXT = 0x7ffe81cffc50:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT (1000455001)
            pNext:               const void* = VkPhysicalDeviceDrmPropertiesEXT
            dynamicPrimitiveTopologyUnrestricted: VkBool32 = 0
        pNext: VkPhysicalDeviceDrmPropertiesEXT = 0x7ffe81cffc10:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT (1000353000)
            pNext:               const void* = VkPhysicalDeviceDiscardRectanglePropertiesEXT
            hasPrimary:             VkBool32 = 1
            hasRender:              VkBool32 = 1
            primaryMajor:            int64_t = 226
            primaryMinor:            int64_t = 1
            renderMajor:             int64_t = 226
            renderMinor:             int64_t = 129
        pNext: VkPhysicalDeviceDiscardRectanglePropertiesEXT = 0x7ffe81cffbf0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT (1000099000)
            pNext:               const void* = VkPhysicalDeviceCustomBorderColorPropertiesEXT
            maxDiscardRectangles:   uint32_t = 4
        pNext: VkPhysicalDeviceCustomBorderColorPropertiesEXT = 0x7ffe81cffaa8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT (1000287001)
            pNext:               const void* = VkPhysicalDeviceConservativeRasterizationPropertiesEXT
            maxCustomBorderColorSamplers: uint32_t = 4096
        pNext: VkPhysicalDeviceConservativeRasterizationPropertiesEXT = 0x7ffe81cffa68:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT (1000101000)
            pNext:               const void* = VkPhysicalDevicePushDescriptorPropertiesKHR
            primitiveOverestimationSize: float = 0
            maxExtraPrimitiveOverestimationSize: float = 0
            extraPrimitiveOverestimationSizeGranularity: float = 0
            primitiveUnderestimation: VkBool32 = 0
            conservativePointAndLineRasterization: VkBool32 = 0
            degenerateTrianglesRasterized: VkBool32 = 1
            degenerateLinesRasterized: VkBool32 = 0
            fullyCoveredFragmentShaderInputVariable: VkBool32 = 0
            conservativeRasterizationPostDepthCoverage: VkBool32 = 0
        pNext: VkPhysicalDevicePushDescriptorPropertiesKHR = 0x7ffe81cff9e0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR (1000080000)
            pNext:               const void* = VkPhysicalDevicePerformanceQueryPropertiesKHR
            maxPushDescriptors:     uint32_t = 32
        pNext: VkPhysicalDevicePerformanceQueryPropertiesKHR = 0x7ffe81cff9a0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR (1000116001)
            pNext:               const void* = VkPhysicalDeviceFragmentShadingRatePropertiesKHR
            allowCommandBufferQueryCopies: VkBool32 = 0
        pNext: VkPhysicalDeviceFragmentShadingRatePropertiesKHR = 0x7ffe81cff938:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR (1000226002)
            pNext:               const void* = VkPhysicalDeviceAccelerationStructurePropertiesKHR
            minFragmentShadingRateAttachmentTexelSize: VkExtent2D = 0x7ffe81cff948:
                width:                  uint32_t = 8
                height:                 uint32_t = 8
            maxFragmentShadingRateAttachmentTexelSize: VkExtent2D = 0x7ffe81cff950:
                width:                  uint32_t = 8
                height:                 uint32_t = 8
            maxFragmentShadingRateAttachmentTexelSizeAspectRatio: uint32_t = 1
            primitiveFragmentShadingRateWithMultipleViewports: VkBool32 = 1
            layeredShadingRateAttachments: VkBool32 = 0
            fragmentShadingRateNonTrivialCombinerOps: VkBool32 = 1
            maxFragmentSize:      VkExtent2D = 0x7ffe81cff968:
                width:                  uint32_t = 2
                height:                 uint32_t = 2
            maxFragmentSizeAspectRatio: uint32_t = 2
            maxFragmentShadingRateCoverageSamples: uint32_t = 32
            maxFragmentShadingRateRasterizationSamples: VkSampleCountFlagBits = 8 (VK_SAMPLE_COUNT_8_BIT)
            fragmentShadingRateWithShaderDepthStencilWrites: VkBool32 = 1
            fragmentShadingRateWithSampleMask: VkBool32 = 1
            fragmentShadingRateWithShaderSampleMask: VkBool32 = 0
            fragmentShadingRateWithConservativeRasterization: VkBool32 = 1
            fragmentShadingRateWithFragmentShaderInterlock: VkBool32 = 0
            fragmentShadingRateWithCustomSampleLocations: VkBool32 = 0
            fragmentShadingRateStrictMultiplyCombiner: VkBool32 = 1
        pNext: VkPhysicalDeviceAccelerationStructurePropertiesKHR = 0x7ffe81cff8d0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR (1000150014)
            pNext:               const void* = VkPhysicalDeviceVulkan13Properties
            maxGeometryCount:       uint64_t = 16777215
            maxInstanceCount:       uint64_t = 16777215
            maxPrimitiveCount:      uint64_t = 536870911
            maxPerStageDescriptorAccelerationStructures: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindAccelerationStructures: uint32_t = 8388606
            maxDescriptorSetAccelerationStructures: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindAccelerationStructures: uint32_t = 8388606
            minAccelerationStructureScratchOffsetAlignment: uint32_t = 128
        pNext: VkPhysicalDeviceVulkan13Properties = 0x7ffe81cff258:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES (54)
            pNext:               const void* = VkPhysicalDeviceVulkan12Properties
            minSubgroupSize:        uint32_t = 32
            maxSubgroupSize:        uint32_t = 64
            maxComputeWorkgroupSubgroups: uint32_t = 4294967295
            requiredSubgroupSizeStages: VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
            maxInlineUniformBlockSize: uint32_t = 4194304
            maxPerStageDescriptorInlineUniformBlocks: uint32_t = 134217728
            maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks: uint32_t = 134217728
            maxDescriptorSetInlineUniformBlocks: uint32_t = 64
            maxDescriptorSetUpdateAfterBindInlineUniformBlocks: uint32_t = 64
            maxInlineUniformTotalSize: uint32_t = 65535
            integerDotProduct8BitUnsignedAccelerated: VkBool32 = 1
            integerDotProduct8BitSignedAccelerated: VkBool32 = 1
            integerDotProduct8BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct4x8BitPackedUnsignedAccelerated: VkBool32 = 1
            integerDotProduct4x8BitPackedSignedAccelerated: VkBool32 = 1
            integerDotProduct4x8BitPackedMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct16BitUnsignedAccelerated: VkBool32 = 1
            integerDotProduct16BitSignedAccelerated: VkBool32 = 1
            integerDotProduct16BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct32BitUnsignedAccelerated: VkBool32 = 0
            integerDotProduct32BitSignedAccelerated: VkBool32 = 0
            integerDotProduct32BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct64BitUnsignedAccelerated: VkBool32 = 0
            integerDotProduct64BitSignedAccelerated: VkBool32 = 0
            integerDotProduct64BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating8BitUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating8BitSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating16BitUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating16BitSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating32BitUnsignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating32BitSignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating64BitUnsignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating64BitSignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated: VkBool32 = 0
            storageTexelBufferOffsetAlignmentBytes: VkDeviceSize = 4
            storageTexelBufferOffsetSingleTexelAlignment: VkBool32 = 1
            uniformTexelBufferOffsetAlignmentBytes: VkDeviceSize = 4
            uniformTexelBufferOffsetSingleTexelAlignment: VkBool32 = 1
            maxBufferSize:      VkDeviceSize = 4294967292
        pNext: VkPhysicalDeviceVulkan12Properties = 0x7ffe81cfef70:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES (52)
            pNext:               const void* = VkPhysicalDeviceVulkan11Properties
            driverID:             VkDriverId = VK_DRIVER_ID_MESA_RADV (3)
            driverName: char[VK_MAX_DRIVER_NAME_SIZE] = "radv"
            driverInfo: char[VK_MAX_DRIVER_INFO_SIZE] = "Mesa 22.3.4"
            conformanceVersion: VkConformanceVersion = 0x7ffe81cff184:
                major:                   uint8_t = 1
                minor:                   uint8_t = 3
                subminor:                uint8_t = 0
                patch:                   uint8_t = 0
            denormBehaviorIndependence: VkShaderFloatControlsIndependence = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY (0)
            roundingModeIndependence: VkShaderFloatControlsIndependence = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY (0)
            shaderSignedZeroInfNanPreserveFloat16: VkBool32 = 1
            shaderSignedZeroInfNanPreserveFloat32: VkBool32 = 1
            shaderSignedZeroInfNanPreserveFloat64: VkBool32 = 1
            shaderDenormPreserveFloat16: VkBool32 = 1
            shaderDenormPreserveFloat32: VkBool32 = 1
            shaderDenormPreserveFloat64: VkBool32 = 1
            shaderDenormFlushToZeroFloat16: VkBool32 = 1
            shaderDenormFlushToZeroFloat32: VkBool32 = 1
            shaderDenormFlushToZeroFloat64: VkBool32 = 1
            shaderRoundingModeRTEFloat16: VkBool32 = 1
            shaderRoundingModeRTEFloat32: VkBool32 = 1
            shaderRoundingModeRTEFloat64: VkBool32 = 1
            shaderRoundingModeRTZFloat16: VkBool32 = 1
            shaderRoundingModeRTZFloat32: VkBool32 = 1
            shaderRoundingModeRTZFloat64: VkBool32 = 1
            maxUpdateAfterBindDescriptorsInAllPools: uint32_t = 67108863
            shaderUniformBufferArrayNonUniformIndexingNative: VkBool32 = 0
            shaderSampledImageArrayNonUniformIndexingNative: VkBool32 = 0
            shaderStorageBufferArrayNonUniformIndexingNative: VkBool32 = 0
            shaderStorageImageArrayNonUniformIndexingNative: VkBool32 = 0
            shaderInputAttachmentArrayNonUniformIndexingNative: VkBool32 = 0
            robustBufferAccessUpdateAfterBind: VkBool32 = 1
            quadDivergentImplicitLod: VkBool32 = 0
            maxPerStageDescriptorUpdateAfterBindSamplers: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindUniformBuffers: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindStorageBuffers: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindSampledImages: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindStorageImages: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindInputAttachments: uint32_t = 8388606
            maxPerStageUpdateAfterBindResources: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindSamplers: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindUniformBuffers: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindUniformBuffersDynamic: uint32_t = 16
            maxDescriptorSetUpdateAfterBindStorageBuffers: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetUpdateAfterBindSampledImages: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindStorageImages: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindInputAttachments: uint32_t = 8388606
            supportedDepthResolveModes: VkResolveModeFlags = 15 (VK_RESOLVE_MODE_SAMPLE_ZERO_BIT | VK_RESOLVE_MODE_AVERAGE_BIT | VK_RESOLVE_MODE_MIN_BIT | VK_RESOLVE_MODE_MAX_BIT)
            supportedStencilResolveModes: VkResolveModeFlags = 13 (VK_RESOLVE_MODE_SAMPLE_ZERO_BIT | VK_RESOLVE_MODE_MIN_BIT | VK_RESOLVE_MODE_MAX_BIT)
            independentResolveNone: VkBool32 = 1
            independentResolve:     VkBool32 = 1
            filterMinmaxSingleComponentFormats: VkBool32 = 1
            filterMinmaxImageComponentMapping: VkBool32 = 1
            maxTimelineSemaphoreValueDifference: uint64_t = 18446744073709551615
            framebufferIntegerColorSampleCounts: VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
        pNext: VkPhysicalDeviceVulkan11Properties = 0x7ffe81cfeef8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES (50)
            pNext:                     void* = NULL
            deviceUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cfef08
                deviceUUID[0]:           uint8_t = 0
                deviceUUID[1]:           uint8_t = 0
                deviceUUID[2]:           uint8_t = 0
                deviceUUID[3]:           uint8_t = 0
                deviceUUID[4]:           uint8_t = 54
                deviceUUID[5]:           uint8_t = 0
                deviceUUID[6]:           uint8_t = 0
                deviceUUID[7]:           uint8_t = 0
                deviceUUID[8]:           uint8_t = 0
                deviceUUID[9]:           uint8_t = 0
                deviceUUID[10]:          uint8_t = 0
                deviceUUID[11]:          uint8_t = 0
                deviceUUID[12]:          uint8_t = 0
                deviceUUID[13]:          uint8_t = 0
                deviceUUID[14]:          uint8_t = 0
                deviceUUID[15]:          uint8_t = 0
            driverUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cfef18
                driverUUID[0]:           uint8_t = 65
                driverUUID[1]:           uint8_t = 77
                driverUUID[2]:           uint8_t = 68
                driverUUID[3]:           uint8_t = 45
                driverUUID[4]:           uint8_t = 77
                driverUUID[5]:           uint8_t = 69
                driverUUID[6]:           uint8_t = 83
                driverUUID[7]:           uint8_t = 65
                driverUUID[8]:           uint8_t = 45
                driverUUID[9]:           uint8_t = 68
                driverUUID[10]:          uint8_t = 82
                driverUUID[11]:          uint8_t = 86
                driverUUID[12]:          uint8_t = 0
                driverUUID[13]:          uint8_t = 0
                driverUUID[14]:          uint8_t = 0
                driverUUID[15]:          uint8_t = 0
            deviceLUID: uint8_t[VK_LUID_SIZE] = 0x7ffe81cfef28
                deviceLUID[0]:           uint8_t = 0
                deviceLUID[1]:           uint8_t = 0
                deviceLUID[2]:           uint8_t = 0
                deviceLUID[3]:           uint8_t = 0
                deviceLUID[4]:           uint8_t = 0
                deviceLUID[5]:           uint8_t = 0
                deviceLUID[6]:           uint8_t = 0
                deviceLUID[7]:           uint8_t = 0
            deviceNodeMask:         uint32_t = 0
            deviceLUIDValid:        VkBool32 = 0
            subgroupSize:           uint32_t = 64
            subgroupSupportedStages: VkShaderStageFlags = 255 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT | VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT | VK_SHADER_STAGE_GEOMETRY_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT | VK_SHADER_STAGE_TASK_BIT_EXT | VK_SHADER_STAGE_MESH_BIT_EXT)
            subgroupSupportedOperations: VkSubgroupFeatureFlags = 255 (VK_SUBGROUP_FEATURE_BASIC_BIT | VK_SUBGROUP_FEATURE_VOTE_BIT | VK_SUBGROUP_FEATURE_ARITHMETIC_BIT | VK_SUBGROUP_FEATURE_BALLOT_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT | VK_SUBGROUP_FEATURE_CLUSTERED_BIT | VK_SUBGROUP_FEATURE_QUAD_BIT)
            subgroupQuadOperationsInAllStages: VkBool32 = 1
            pointClippingBehavior: VkPointClippingBehavior = VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES (0)
            maxMultiviewViewCount:  uint32_t = 8
            maxMultiviewInstanceIndex: uint32_t = 2147483647
            protectedNoFault:       VkBool32 = 0
            maxPerSetDescriptors:   uint32_t = 22369621
            maxMemoryAllocationSize: VkDeviceSize = 4294967292

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties2KHR(physicalDevice, pMemoryProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356e60
    pMemoryProperties: VkPhysicalDeviceMemoryProperties2* = 0x7ffe81cffeb0:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 (1000059006)
        pNext:                     void* = NULL
        memoryProperties: VkPhysicalDeviceMemoryProperties = 0x7ffe81cffec0:
            memoryTypeCount:        uint32_t = 9
            memoryTypes: VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7ffe81cffec4
                memoryTypes[0]:     VkMemoryType = 0x7ffe81cffec4:
                    propertyFlags: VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                    heapIndex:              uint32_t = 1
                memoryTypes[1]:     VkMemoryType = 0x7ffe81cffecc:
                    propertyFlags: VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                    heapIndex:              uint32_t = 1
                memoryTypes[2]:     VkMemoryType = 0x7ffe81cffed4:
                    propertyFlags: VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                    heapIndex:              uint32_t = 0
                memoryTypes[3]:     VkMemoryType = 0x7ffe81cffedc:
                    propertyFlags: VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                    heapIndex:              uint32_t = 1
                memoryTypes[4]:     VkMemoryType = 0x7ffe81cffee4:
                    propertyFlags: VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                    heapIndex:              uint32_t = 0
                memoryTypes[5]:     VkMemoryType = 0x7ffe81cffeec:
                    propertyFlags: VkMemoryPropertyFlags = 193 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                    heapIndex:              uint32_t = 1
                memoryTypes[6]:     VkMemoryType = 0x7ffe81cffef4:
                    propertyFlags: VkMemoryPropertyFlags = 198 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                    heapIndex:              uint32_t = 0
                memoryTypes[7]:     VkMemoryType = 0x7ffe81cffefc:
                    propertyFlags: VkMemoryPropertyFlags = 199 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                    heapIndex:              uint32_t = 1
                memoryTypes[8]:     VkMemoryType = 0x7ffe81cfff04:
                    propertyFlags: VkMemoryPropertyFlags = 206 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                    heapIndex:              uint32_t = 0
            memoryHeapCount:        uint32_t = 2
            memoryHeaps: VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7ffe81cfffc8
                memoryHeaps[0]:     VkMemoryHeap = 0x7ffe81cfffc8:
                    size:               VkDeviceSize = 5640075264
                    flags:         VkMemoryHeapFlags = 0
                memoryHeaps[1]:     VkMemoryHeap = 0x7ffe81cfffd8:
                    size:               VkDeviceSize = 11280158720
                    flags:         VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties2KHR(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356e60
    pQueueFamilyPropertyCount: uint32_t* = 2
    pQueueFamilyProperties: VkQueueFamilyProperties2* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties2KHR(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356e60
    pQueueFamilyPropertyCount: uint32_t* = 2
    pQueueFamilyProperties: VkQueueFamilyProperties2* = 0x55e09030bf10
        pQueueFamilyProperties[0]: VkQueueFamilyProperties2 = 0x55e09030bf10:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                     void* = NULL
            queueFamilyProperties: VkQueueFamilyProperties = 0x55e09030bf20:
                queueFlags:         VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
                queueCount:             uint32_t = 1
                timestampValidBits:     uint32_t = 64
                minImageTransferGranularity: VkExtent3D = 0x55e09030bf2c:
                    width:                  uint32_t = 1
                    height:                 uint32_t = 1
                    depth:                  uint32_t = 1
        pQueueFamilyProperties[1]: VkQueueFamilyProperties2 = 0x55e09030bf38:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2 (1000059005)
            pNext:                     void* = NULL
            queueFamilyProperties: VkQueueFamilyProperties = 0x55e09030bf48:
                queueFlags:         VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
                queueCount:             uint32_t = 4
                timestampValidBits:     uint32_t = 64
                minImageTransferGranularity: VkExtent3D = 0x55e09030bf54:
                    width:                  uint32_t = 1
                    height:                 uint32_t = 1
                    depth:                  uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    queueFamilyIndex:       uint32_t = 0
    surface:            VkSurfaceKHR = 0x55e090304a90
    pSupported:            VkBool32* = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356e60
    queueFamilyIndex:       uint32_t = 0
    surface:            VkSurfaceKHR = 0x55e090304a90
    pSupported:            VkBool32* = 1

Using device: AMD Radeon RX 6600 (RADV NAVI23) (type: DiscreteGpu)
Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties* = 0x7ffe81cff760:
        apiVersion:             uint32_t = 4206822
        driverVersion:          uint32_t = 92286980
        vendorID:               uint32_t = 4098
        deviceID:               uint32_t = 29695
        deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
        pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff874
            pipelineCacheUUID[0]:    uint8_t = 123
            pipelineCacheUUID[1]:    uint8_t = 131
            pipelineCacheUUID[2]:    uint8_t = 211
            pipelineCacheUUID[3]:    uint8_t = 220
            pipelineCacheUUID[4]:    uint8_t = 215
            pipelineCacheUUID[5]:    uint8_t = 65
            pipelineCacheUUID[6]:    uint8_t = 140
            pipelineCacheUUID[7]:    uint8_t = 0
            pipelineCacheUUID[8]:    uint8_t = 91
            pipelineCacheUUID[9]:    uint8_t = 223
            pipelineCacheUUID[10]:   uint8_t = 222
            pipelineCacheUUID[11]:   uint8_t = 7
            pipelineCacheUUID[12]:   uint8_t = 4
            pipelineCacheUUID[13]:   uint8_t = 87
            pipelineCacheUUID[14]:   uint8_t = 209
            pipelineCacheUUID[15]:   uint8_t = 190
        limits:   VkPhysicalDeviceLimits = 0x7ffe81cff888:
            maxImageDimension1D:    uint32_t = 16384
            maxImageDimension2D:    uint32_t = 16384
            maxImageDimension3D:    uint32_t = 2048
            maxImageDimensionCube:  uint32_t = 16384
            maxImageArrayLayers:    uint32_t = 2048
            maxTexelBufferElements: uint32_t = 4294967295
            maxUniformBufferRange:  uint32_t = 4294967295
            maxStorageBufferRange:  uint32_t = 4294967295
            maxPushConstantsSize:   uint32_t = 256
            maxMemoryAllocationCount: uint32_t = 4294967295
            maxSamplerAllocationCount: uint32_t = 65536
            bufferImageGranularity: VkDeviceSize = 1
            sparseAddressSpaceSize: VkDeviceSize = 4294967292
            maxBoundDescriptorSets: uint32_t = 32
            maxPerStageDescriptorSamplers: uint32_t = 8388606
            maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
            maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
            maxPerStageDescriptorSampledImages: uint32_t = 8388606
            maxPerStageDescriptorStorageImages: uint32_t = 8388606
            maxPerStageDescriptorInputAttachments: uint32_t = 8388606
            maxPerStageResources:   uint32_t = 8388606
            maxDescriptorSetSamplers: uint32_t = 8388606
            maxDescriptorSetUniformBuffers: uint32_t = 8388606
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
            maxDescriptorSetStorageBuffers: uint32_t = 8388606
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages: uint32_t = 8388606
            maxDescriptorSetStorageImages: uint32_t = 8388606
            maxDescriptorSetInputAttachments: uint32_t = 8388606
            maxVertexInputAttributes: uint32_t = 32
            maxVertexInputBindings: uint32_t = 32
            maxVertexInputAttributeOffset: uint32_t = 4294967295
            maxVertexInputBindingStride: uint32_t = 2048
            maxVertexOutputComponents: uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize: uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4096
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations: uint32_t = 127
            maxGeometryInputComponents: uint32_t = 64
            maxGeometryOutputComponents: uint32_t = 128
            maxGeometryOutputVertices: uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents: uint32_t = 128
            maxFragmentOutputAttachments: uint32_t = 8
            maxFragmentDualSrcAttachments: uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 8388606
            maxComputeSharedMemorySize: uint32_t = 65536
            maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff964
                maxComputeWorkGroupCount[0]: uint32_t = 65535
                maxComputeWorkGroupCount[1]: uint32_t = 65535
                maxComputeWorkGroupCount[2]: uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff974
                maxComputeWorkGroupSize[0]: uint32_t = 1024
                maxComputeWorkGroupSize[1]: uint32_t = 1024
                maxComputeWorkGroupSize[2]: uint32_t = 1024
            subPixelPrecisionBits:  uint32_t = 8
            subTexelPrecisionBits:  uint32_t = 8
            mipmapPrecisionBits:    uint32_t = 8
            maxDrawIndexedIndexValue: uint32_t = 4294967295
            maxDrawIndirectCount:   uint32_t = 4294967295
            maxSamplerLodBias:         float = 16
            maxSamplerAnisotropy:      float = 16
            maxViewports:           uint32_t = 16
            maxViewportDimensions: uint32_t[2] = 0x7ffe81cff9a0
                maxViewportDimensions[0]: uint32_t = 16384
                maxViewportDimensions[1]: uint32_t = 16384
            viewportBoundsRange:    float[2] = 0x7ffe81cff9a8
                viewportBoundsRange[0]:    float = -32768
                viewportBoundsRange[1]:    float = 32767
            viewportSubPixelBits:   uint32_t = 8
            minMemoryMapAlignment:    size_t = 4096
            minTexelBufferOffsetAlignment: VkDeviceSize = 4
            minUniformBufferOffsetAlignment: VkDeviceSize = 4
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:          int32_t = -32
            maxTexelOffset:         uint32_t = 31
            minTexelGatherOffset:    int32_t = -32
            maxTexelGatherOffset:   uint32_t = 31
            minInterpolationOffset:    float = -2
            maxInterpolationOffset:    float = 2
            subPixelInterpolationOffsetBits: uint32_t = 8
            maxFramebufferWidth:    uint32_t = 16384
            maxFramebufferHeight:   uint32_t = 16384
            maxFramebufferLayers:   uint32_t = 1024
            framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:    uint32_t = 8
            sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:     uint32_t = 1
            timestampComputeAndGraphics: VkBool32 = 1
            timestampPeriod:           float = 10
            maxClipDistances:       uint32_t = 8
            maxCullDistances:       uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities: uint32_t = 2
            pointSizeRange:         float[2] = 0x7ffe81cffa44
                pointSizeRange[0]:         float = 0
                pointSizeRange[1]:         float = 8191.88
            lineWidthRange:         float[2] = 0x7ffe81cffa4c
                lineWidthRange[0]:         float = 0
                lineWidthRange[1]:         float = 8191.88
            pointSizeGranularity:      float = 0.125
            lineWidthGranularity:      float = 0.125
            strictLines:            VkBool32 = 0
            standardSampleLocations: VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize: VkDeviceSize = 64
        sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cffa80:
            residencyStandard2DBlockShape: VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape: VkBool32 = 1
            residencyAlignedMipSize: VkBool32 = 0
            residencyNonResidentStrict: VkBool32 = 1

Thread 0, Frame 0:
vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, pDevice) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pCreateInfo: const VkDeviceCreateInfo* = 0x7ffe81cff570:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO (3)
        pNext:               const void* = NULL
        flags:       VkDeviceCreateFlags = 0
        queueCreateInfoCount:   uint32_t = 1
        pQueueCreateInfos: const VkDeviceQueueCreateInfo* = 0x55e09032c0b8
            pQueueCreateInfos[0]: const VkDeviceQueueCreateInfo = 0x55e09032c0b8:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO (2)
                pNext:               const void* = NULL
                flags:  VkDeviceQueueCreateFlags = 0
                queueFamilyIndex:       uint32_t = 0
                queueCount:             uint32_t = 1
                pQueuePriorities:   const float* = 0x55e09032df50
                    pQueuePriorities[0]: const float = 0.5
        enabledLayerCount:      uint32_t = 0
        ppEnabledLayerNames: const char* const* = 0x55e09032dc60
        enabledExtensionCount:  uint32_t = 1
        ppEnabledExtensionNames: const char* const* = 0x55e09032dd30
            ppEnabledExtensionNames[0]: const char* const = "VK_KHR_swapchain"
        pEnabledFeatures: const VkPhysicalDeviceFeatures* = NULL
        pNext: VkPhysicalDeviceFeatures2 = 0x55e0903778e0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 (1000059000)
            pNext:               const void* = VkPhysicalDeviceVulkan13Features
            features: VkPhysicalDeviceFeatures = 0x55e0903778f0:
                robustBufferAccess:     VkBool32 = 1
                fullDrawIndexUint32:    VkBool32 = 0
                imageCubeArray:         VkBool32 = 0
                independentBlend:       VkBool32 = 0
                geometryShader:         VkBool32 = 0
                tessellationShader:     VkBool32 = 0
                sampleRateShading:      VkBool32 = 0
                dualSrcBlend:           VkBool32 = 0
                logicOp:                VkBool32 = 0
                multiDrawIndirect:      VkBool32 = 0
                drawIndirectFirstInstance: VkBool32 = 0
                depthClamp:             VkBool32 = 0
                depthBiasClamp:         VkBool32 = 0
                fillModeNonSolid:       VkBool32 = 0
                depthBounds:            VkBool32 = 0
                wideLines:              VkBool32 = 0
                largePoints:            VkBool32 = 0
                alphaToOne:             VkBool32 = 0
                multiViewport:          VkBool32 = 0
                samplerAnisotropy:      VkBool32 = 0
                textureCompressionETC2: VkBool32 = 0
                textureCompressionASTC_LDR: VkBool32 = 0
                textureCompressionBC:   VkBool32 = 0
                occlusionQueryPrecise:  VkBool32 = 0
                pipelineStatisticsQuery: VkBool32 = 0
                vertexPipelineStoresAndAtomics: VkBool32 = 0
                fragmentStoresAndAtomics: VkBool32 = 0
                shaderTessellationAndGeometryPointSize: VkBool32 = 0
                shaderImageGatherExtended: VkBool32 = 0
                shaderStorageImageExtendedFormats: VkBool32 = 0
                shaderStorageImageMultisample: VkBool32 = 0
                shaderStorageImageReadWithoutFormat: VkBool32 = 0
                shaderStorageImageWriteWithoutFormat: VkBool32 = 0
                shaderUniformBufferArrayDynamicIndexing: VkBool32 = 0
                shaderSampledImageArrayDynamicIndexing: VkBool32 = 0
                shaderStorageBufferArrayDynamicIndexing: VkBool32 = 0
                shaderStorageImageArrayDynamicIndexing: VkBool32 = 0
                shaderClipDistance:     VkBool32 = 0
                shaderCullDistance:     VkBool32 = 0
                shaderFloat64:          VkBool32 = 0
                shaderInt64:            VkBool32 = 0
                shaderInt16:            VkBool32 = 0
                shaderResourceResidency: VkBool32 = 0
                shaderResourceMinLod:   VkBool32 = 0
                sparseBinding:          VkBool32 = 0
                sparseResidencyBuffer:  VkBool32 = 0
                sparseResidencyImage2D: VkBool32 = 0
                sparseResidencyImage3D: VkBool32 = 0
                sparseResidency2Samples: VkBool32 = 0
                sparseResidency4Samples: VkBool32 = 0
                sparseResidency8Samples: VkBool32 = 0
                sparseResidency16Samples: VkBool32 = 0
                sparseResidencyAliased: VkBool32 = 0
                variableMultisampleRate: VkBool32 = 0
                inheritedQueries:       VkBool32 = 0
        pNext: VkPhysicalDeviceVulkan13Features = 0x55e09030c210:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES (53)
            pNext:               const void* = VkPhysicalDeviceVulkan12Features
            robustImageAccess:      VkBool32 = 0
            inlineUniformBlock:     VkBool32 = 0
            descriptorBindingInlineUniformBlockUpdateAfterBind: VkBool32 = 0
            pipelineCreationCacheControl: VkBool32 = 0
            privateData:            VkBool32 = 0
            shaderDemoteToHelperInvocation: VkBool32 = 0
            shaderTerminateInvocation: VkBool32 = 0
            subgroupSizeControl:    VkBool32 = 0
            computeFullSubgroups:   VkBool32 = 0
            synchronization2:       VkBool32 = 0
            textureCompressionASTC_HDR: VkBool32 = 0
            shaderZeroInitializeWorkgroupMemory: VkBool32 = 0
            dynamicRendering:       VkBool32 = 0
            shaderIntegerDotProduct: VkBool32 = 0
            maintenance4:           VkBool32 = 0
        pNext: VkPhysicalDeviceVulkan12Features = 0x55e09030c480:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES (51)
            pNext:               const void* = VkPhysicalDeviceVulkan11Features
            samplerMirrorClampToEdge: VkBool32 = 0
            drawIndirectCount:      VkBool32 = 0
            storageBuffer8BitAccess: VkBool32 = 0
            uniformAndStorageBuffer8BitAccess: VkBool32 = 0
            storagePushConstant8:   VkBool32 = 0
            shaderBufferInt64Atomics: VkBool32 = 0
            shaderSharedInt64Atomics: VkBool32 = 0
            shaderFloat16:          VkBool32 = 0
            shaderInt8:             VkBool32 = 0
            descriptorIndexing:     VkBool32 = 0
            shaderInputAttachmentArrayDynamicIndexing: VkBool32 = 0
            shaderUniformTexelBufferArrayDynamicIndexing: VkBool32 = 0
            shaderStorageTexelBufferArrayDynamicIndexing: VkBool32 = 0
            shaderUniformBufferArrayNonUniformIndexing: VkBool32 = 0
            shaderSampledImageArrayNonUniformIndexing: VkBool32 = 0
            shaderStorageBufferArrayNonUniformIndexing: VkBool32 = 0
            shaderStorageImageArrayNonUniformIndexing: VkBool32 = 0
            shaderInputAttachmentArrayNonUniformIndexing: VkBool32 = 0
            shaderUniformTexelBufferArrayNonUniformIndexing: VkBool32 = 0
            shaderStorageTexelBufferArrayNonUniformIndexing: VkBool32 = 0
            descriptorBindingUniformBufferUpdateAfterBind: VkBool32 = 0
            descriptorBindingSampledImageUpdateAfterBind: VkBool32 = 0
            descriptorBindingStorageImageUpdateAfterBind: VkBool32 = 0
            descriptorBindingStorageBufferUpdateAfterBind: VkBool32 = 0
            descriptorBindingUniformTexelBufferUpdateAfterBind: VkBool32 = 0
            descriptorBindingStorageTexelBufferUpdateAfterBind: VkBool32 = 0
            descriptorBindingUpdateUnusedWhilePending: VkBool32 = 0
            descriptorBindingPartiallyBound: VkBool32 = 0
            descriptorBindingVariableDescriptorCount: VkBool32 = 0
            runtimeDescriptorArray: VkBool32 = 0
            samplerFilterMinmax:    VkBool32 = 0
            scalarBlockLayout:      VkBool32 = 0
            imagelessFramebuffer:   VkBool32 = 0
            uniformBufferStandardLayout: VkBool32 = 0
            shaderSubgroupExtendedTypes: VkBool32 = 0
            separateDepthStencilLayouts: VkBool32 = 0
            hostQueryReset:         VkBool32 = 0
            timelineSemaphore:      VkBool32 = 0
            bufferDeviceAddress:    VkBool32 = 0
            bufferDeviceAddressCaptureReplay: VkBool32 = 0
            bufferDeviceAddressMultiDevice: VkBool32 = 0
            vulkanMemoryModel:      VkBool32 = 0
            vulkanMemoryModelDeviceScope: VkBool32 = 0
            vulkanMemoryModelAvailabilityVisibilityChains: VkBool32 = 0
            shaderOutputViewportIndex: VkBool32 = 0
            shaderOutputLayer:      VkBool32 = 0
            subgroupBroadcastDynamicId: VkBool32 = 0
        pNext: VkPhysicalDeviceVulkan11Features = 0x55e09032c180:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES (49)
            pNext:                     void* = NULL
            storageBuffer16BitAccess: VkBool32 = 0
            uniformAndStorageBuffer16BitAccess: VkBool32 = 0
            storagePushConstant16:  VkBool32 = 0
            storageInputOutput16:   VkBool32 = 0
            multiview:              VkBool32 = 0
            multiviewGeometryShader: VkBool32 = 0
            multiviewTessellationShader: VkBool32 = 0
            variablePointersStorageBuffer: VkBool32 = 0
            variablePointers:       VkBool32 = 0
            protectedMemory:        VkBool32 = 0
            samplerYcbcrConversion: VkBool32 = 0
            shaderDrawParameters:   VkBool32 = 0
    pAllocator: const VkAllocationCallbacks* = NULL
    pDevice:               VkDevice* = 0x55e0903eeb60

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pMemoryProperties: VkPhysicalDeviceMemoryProperties* = 0x55e0908527b8:
        memoryTypeCount:        uint32_t = 9
        memoryTypes: VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x55e0908527bc
            memoryTypes[0]:     VkMemoryType = 0x55e0908527bc:
                propertyFlags: VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:              uint32_t = 1
            memoryTypes[1]:     VkMemoryType = 0x55e0908527c4:
                propertyFlags: VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:              uint32_t = 1
            memoryTypes[2]:     VkMemoryType = 0x55e0908527cc:
                propertyFlags: VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:              uint32_t = 0
            memoryTypes[3]:     VkMemoryType = 0x55e0908527d4:
                propertyFlags: VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:              uint32_t = 1
            memoryTypes[4]:     VkMemoryType = 0x55e0908527dc:
                propertyFlags: VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:              uint32_t = 0
            memoryTypes[5]:     VkMemoryType = 0x55e0908527e4:
                propertyFlags: VkMemoryPropertyFlags = 193 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                heapIndex:              uint32_t = 1
            memoryTypes[6]:     VkMemoryType = 0x55e0908527ec:
                propertyFlags: VkMemoryPropertyFlags = 198 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                heapIndex:              uint32_t = 0
            memoryTypes[7]:     VkMemoryType = 0x55e0908527f4:
                propertyFlags: VkMemoryPropertyFlags = 199 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                heapIndex:              uint32_t = 1
            memoryTypes[8]:     VkMemoryType = 0x55e0908527fc:
                propertyFlags: VkMemoryPropertyFlags = 206 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT | VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD | VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
                heapIndex:              uint32_t = 0
        memoryHeapCount:        uint32_t = 2
        memoryHeaps: VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x55e0908528c0
            memoryHeaps[0]:     VkMemoryHeap = 0x55e0908528c0:
                size:               VkDeviceSize = 16383363072
                flags:         VkMemoryHeapFlags = 0
            memoryHeaps[1]:     VkMemoryHeap = 0x55e0908528d0:
                size:               VkDeviceSize = 8573157376
                flags:         VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties* = 0x55e0908529c0:
        apiVersion:             uint32_t = 4206822
        driverVersion:          uint32_t = 92286980
        vendorID:               uint32_t = 4098
        deviceID:               uint32_t = 29695
        deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
        pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x55e090852ad4
            pipelineCacheUUID[0]:    uint8_t = 123
            pipelineCacheUUID[1]:    uint8_t = 131
            pipelineCacheUUID[2]:    uint8_t = 211
            pipelineCacheUUID[3]:    uint8_t = 220
            pipelineCacheUUID[4]:    uint8_t = 215
            pipelineCacheUUID[5]:    uint8_t = 65
            pipelineCacheUUID[6]:    uint8_t = 140
            pipelineCacheUUID[7]:    uint8_t = 0
            pipelineCacheUUID[8]:    uint8_t = 91
            pipelineCacheUUID[9]:    uint8_t = 223
            pipelineCacheUUID[10]:   uint8_t = 222
            pipelineCacheUUID[11]:   uint8_t = 7
            pipelineCacheUUID[12]:   uint8_t = 4
            pipelineCacheUUID[13]:   uint8_t = 87
            pipelineCacheUUID[14]:   uint8_t = 209
            pipelineCacheUUID[15]:   uint8_t = 190
        limits:   VkPhysicalDeviceLimits = 0x55e090852ae8:
            maxImageDimension1D:    uint32_t = 16384
            maxImageDimension2D:    uint32_t = 16384
            maxImageDimension3D:    uint32_t = 2048
            maxImageDimensionCube:  uint32_t = 16384
            maxImageArrayLayers:    uint32_t = 2048
            maxTexelBufferElements: uint32_t = 4294967295
            maxUniformBufferRange:  uint32_t = 4294967295
            maxStorageBufferRange:  uint32_t = 4294967295
            maxPushConstantsSize:   uint32_t = 256
            maxMemoryAllocationCount: uint32_t = 4294967295
            maxSamplerAllocationCount: uint32_t = 65536
            bufferImageGranularity: VkDeviceSize = 1
            sparseAddressSpaceSize: VkDeviceSize = 4294967292
            maxBoundDescriptorSets: uint32_t = 32
            maxPerStageDescriptorSamplers: uint32_t = 8388606
            maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
            maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
            maxPerStageDescriptorSampledImages: uint32_t = 8388606
            maxPerStageDescriptorStorageImages: uint32_t = 8388606
            maxPerStageDescriptorInputAttachments: uint32_t = 8388606
            maxPerStageResources:   uint32_t = 8388606
            maxDescriptorSetSamplers: uint32_t = 8388606
            maxDescriptorSetUniformBuffers: uint32_t = 8388606
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
            maxDescriptorSetStorageBuffers: uint32_t = 8388606
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages: uint32_t = 8388606
            maxDescriptorSetStorageImages: uint32_t = 8388606
            maxDescriptorSetInputAttachments: uint32_t = 8388606
            maxVertexInputAttributes: uint32_t = 32
            maxVertexInputBindings: uint32_t = 32
            maxVertexInputAttributeOffset: uint32_t = 4294967295
            maxVertexInputBindingStride: uint32_t = 2048
            maxVertexOutputComponents: uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize: uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4096
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations: uint32_t = 127
            maxGeometryInputComponents: uint32_t = 64
            maxGeometryOutputComponents: uint32_t = 128
            maxGeometryOutputVertices: uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents: uint32_t = 128
            maxFragmentOutputAttachments: uint32_t = 8
            maxFragmentDualSrcAttachments: uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 8388606
            maxComputeSharedMemorySize: uint32_t = 65536
            maxComputeWorkGroupCount: uint32_t[3] = 0x55e090852bc4
                maxComputeWorkGroupCount[0]: uint32_t = 65535
                maxComputeWorkGroupCount[1]: uint32_t = 65535
                maxComputeWorkGroupCount[2]: uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1024
            maxComputeWorkGroupSize: uint32_t[3] = 0x55e090852bd4
                maxComputeWorkGroupSize[0]: uint32_t = 1024
                maxComputeWorkGroupSize[1]: uint32_t = 1024
                maxComputeWorkGroupSize[2]: uint32_t = 1024
            subPixelPrecisionBits:  uint32_t = 8
            subTexelPrecisionBits:  uint32_t = 8
            mipmapPrecisionBits:    uint32_t = 8
            maxDrawIndexedIndexValue: uint32_t = 4294967295
            maxDrawIndirectCount:   uint32_t = 4294967295
            maxSamplerLodBias:         float = 16
            maxSamplerAnisotropy:      float = 16
            maxViewports:           uint32_t = 16
            maxViewportDimensions: uint32_t[2] = 0x55e090852c00
                maxViewportDimensions[0]: uint32_t = 16384
                maxViewportDimensions[1]: uint32_t = 16384
            viewportBoundsRange:    float[2] = 0x55e090852c08
                viewportBoundsRange[0]:    float = -32768
                viewportBoundsRange[1]:    float = 32767
            viewportSubPixelBits:   uint32_t = 8
            minMemoryMapAlignment:    size_t = 4096
            minTexelBufferOffsetAlignment: VkDeviceSize = 4
            minUniformBufferOffsetAlignment: VkDeviceSize = 4
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:          int32_t = -32
            maxTexelOffset:         uint32_t = 31
            minTexelGatherOffset:    int32_t = -32
            maxTexelGatherOffset:   uint32_t = 31
            minInterpolationOffset:    float = -2
            maxInterpolationOffset:    float = 2
            subPixelInterpolationOffsetBits: uint32_t = 8
            maxFramebufferWidth:    uint32_t = 16384
            maxFramebufferHeight:   uint32_t = 16384
            maxFramebufferLayers:   uint32_t = 1024
            framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxColorAttachments:    uint32_t = 8
            sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:     uint32_t = 1
            timestampComputeAndGraphics: VkBool32 = 1
            timestampPeriod:           float = 10
            maxClipDistances:       uint32_t = 8
            maxCullDistances:       uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities: uint32_t = 2
            pointSizeRange:         float[2] = 0x55e090852ca4
                pointSizeRange[0]:         float = 0
                pointSizeRange[1]:         float = 8191.88
            lineWidthRange:         float[2] = 0x55e090852cac
                lineWidthRange[0]:         float = 0
                lineWidthRange[1]:         float = 8191.88
            pointSizeGranularity:      float = 0.125
            lineWidthGranularity:      float = 0.125
            strictLines:            VkBool32 = 0
            standardSampleLocations: VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize: VkDeviceSize = 64
        sparseProperties: VkPhysicalDeviceSparseProperties = 0x55e090852ce0:
            residencyStandard2DBlockShape: VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape: VkBool32 = 1
            residencyAlignedMipSize: VkBool32 = 0
            residencyNonResidentStrict: VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties2* = 0x7ffe81cff090:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:               const void* = VkPhysicalDeviceVulkan11Properties
        properties: VkPhysicalDeviceProperties = 0x7ffe81cff0a0:
            apiVersion:             uint32_t = 4206822
            driverVersion:          uint32_t = 92286980
            vendorID:               uint32_t = 4098
            deviceID:               uint32_t = 29695
            deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
            pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff1b4
                pipelineCacheUUID[0]:    uint8_t = 123
                pipelineCacheUUID[1]:    uint8_t = 131
                pipelineCacheUUID[2]:    uint8_t = 211
                pipelineCacheUUID[3]:    uint8_t = 220
                pipelineCacheUUID[4]:    uint8_t = 215
                pipelineCacheUUID[5]:    uint8_t = 65
                pipelineCacheUUID[6]:    uint8_t = 140
                pipelineCacheUUID[7]:    uint8_t = 0
                pipelineCacheUUID[8]:    uint8_t = 91
                pipelineCacheUUID[9]:    uint8_t = 223
                pipelineCacheUUID[10]:   uint8_t = 222
                pipelineCacheUUID[11]:   uint8_t = 7
                pipelineCacheUUID[12]:   uint8_t = 4
                pipelineCacheUUID[13]:   uint8_t = 87
                pipelineCacheUUID[14]:   uint8_t = 209
                pipelineCacheUUID[15]:   uint8_t = 190
            limits:   VkPhysicalDeviceLimits = 0x7ffe81cff1c8:
                maxImageDimension1D:    uint32_t = 16384
                maxImageDimension2D:    uint32_t = 16384
                maxImageDimension3D:    uint32_t = 2048
                maxImageDimensionCube:  uint32_t = 16384
                maxImageArrayLayers:    uint32_t = 2048
                maxTexelBufferElements: uint32_t = 4294967295
                maxUniformBufferRange:  uint32_t = 4294967295
                maxStorageBufferRange:  uint32_t = 4294967295
                maxPushConstantsSize:   uint32_t = 256
                maxMemoryAllocationCount: uint32_t = 4294967295
                maxSamplerAllocationCount: uint32_t = 65536
                bufferImageGranularity: VkDeviceSize = 1
                sparseAddressSpaceSize: VkDeviceSize = 4294967292
                maxBoundDescriptorSets: uint32_t = 32
                maxPerStageDescriptorSamplers: uint32_t = 8388606
                maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
                maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
                maxPerStageDescriptorSampledImages: uint32_t = 8388606
                maxPerStageDescriptorStorageImages: uint32_t = 8388606
                maxPerStageDescriptorInputAttachments: uint32_t = 8388606
                maxPerStageResources:   uint32_t = 8388606
                maxDescriptorSetSamplers: uint32_t = 8388606
                maxDescriptorSetUniformBuffers: uint32_t = 8388606
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
                maxDescriptorSetStorageBuffers: uint32_t = 8388606
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
                maxDescriptorSetSampledImages: uint32_t = 8388606
                maxDescriptorSetStorageImages: uint32_t = 8388606
                maxDescriptorSetInputAttachments: uint32_t = 8388606
                maxVertexInputAttributes: uint32_t = 32
                maxVertexInputBindings: uint32_t = 32
                maxVertexInputAttributeOffset: uint32_t = 4294967295
                maxVertexInputBindingStride: uint32_t = 2048
                maxVertexOutputComponents: uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize: uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4096
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations: uint32_t = 127
                maxGeometryInputComponents: uint32_t = 64
                maxGeometryOutputComponents: uint32_t = 128
                maxGeometryOutputVertices: uint32_t = 256
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents: uint32_t = 128
                maxFragmentOutputAttachments: uint32_t = 8
                maxFragmentDualSrcAttachments: uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 8388606
                maxComputeSharedMemorySize: uint32_t = 65536
                maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff2a4
                    maxComputeWorkGroupCount[0]: uint32_t = 65535
                    maxComputeWorkGroupCount[1]: uint32_t = 65535
                    maxComputeWorkGroupCount[2]: uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff2b4
                    maxComputeWorkGroupSize[0]: uint32_t = 1024
                    maxComputeWorkGroupSize[1]: uint32_t = 1024
                    maxComputeWorkGroupSize[2]: uint32_t = 1024
                subPixelPrecisionBits:  uint32_t = 8
                subTexelPrecisionBits:  uint32_t = 8
                mipmapPrecisionBits:    uint32_t = 8
                maxDrawIndexedIndexValue: uint32_t = 4294967295
                maxDrawIndirectCount:   uint32_t = 4294967295
                maxSamplerLodBias:         float = 16
                maxSamplerAnisotropy:      float = 16
                maxViewports:           uint32_t = 16
                maxViewportDimensions: uint32_t[2] = 0x7ffe81cff2e0
                    maxViewportDimensions[0]: uint32_t = 16384
                    maxViewportDimensions[1]: uint32_t = 16384
                viewportBoundsRange:    float[2] = 0x7ffe81cff2e8
                    viewportBoundsRange[0]:    float = -32768
                    viewportBoundsRange[1]:    float = 32767
                viewportSubPixelBits:   uint32_t = 8
                minMemoryMapAlignment:    size_t = 4096
                minTexelBufferOffsetAlignment: VkDeviceSize = 4
                minUniformBufferOffsetAlignment: VkDeviceSize = 4
                minStorageBufferOffsetAlignment: VkDeviceSize = 4
                minTexelOffset:          int32_t = -32
                maxTexelOffset:         uint32_t = 31
                minTexelGatherOffset:    int32_t = -32
                maxTexelGatherOffset:   uint32_t = 31
                minInterpolationOffset:    float = -2
                maxInterpolationOffset:    float = 2
                subPixelInterpolationOffsetBits: uint32_t = 8
                maxFramebufferWidth:    uint32_t = 16384
                maxFramebufferHeight:   uint32_t = 16384
                maxFramebufferLayers:   uint32_t = 1024
                framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxColorAttachments:    uint32_t = 8
                sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:     uint32_t = 1
                timestampComputeAndGraphics: VkBool32 = 1
                timestampPeriod:           float = 10
                maxClipDistances:       uint32_t = 8
                maxCullDistances:       uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities: uint32_t = 2
                pointSizeRange:         float[2] = 0x7ffe81cff384
                    pointSizeRange[0]:         float = 0
                    pointSizeRange[1]:         float = 8191.88
                lineWidthRange:         float[2] = 0x7ffe81cff38c
                    lineWidthRange[0]:         float = 0
                    lineWidthRange[1]:         float = 8191.88
                pointSizeGranularity:      float = 0.125
                lineWidthGranularity:      float = 0.125
                strictLines:            VkBool32 = 0
                standardSampleLocations: VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize: VkDeviceSize = 64
            sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cff3c0:
                residencyStandard2DBlockShape: VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 0
                residencyStandard3DBlockShape: VkBool32 = 1
                residencyAlignedMipSize: VkBool32 = 0
                residencyNonResidentStrict: VkBool32 = 1
        pNext: VkPhysicalDeviceVulkan11Properties = 0x55e090852cf8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES (50)
            pNext:                     void* = NULL
            deviceUUID: uint8_t[VK_UUID_SIZE] = 0x55e090852d08
                deviceUUID[0]:           uint8_t = 0
                deviceUUID[1]:           uint8_t = 0
                deviceUUID[2]:           uint8_t = 0
                deviceUUID[3]:           uint8_t = 0
                deviceUUID[4]:           uint8_t = 3
                deviceUUID[5]:           uint8_t = 0
                deviceUUID[6]:           uint8_t = 0
                deviceUUID[7]:           uint8_t = 0
                deviceUUID[8]:           uint8_t = 0
                deviceUUID[9]:           uint8_t = 0
                deviceUUID[10]:          uint8_t = 0
                deviceUUID[11]:          uint8_t = 0
                deviceUUID[12]:          uint8_t = 0
                deviceUUID[13]:          uint8_t = 0
                deviceUUID[14]:          uint8_t = 0
                deviceUUID[15]:          uint8_t = 0
            driverUUID: uint8_t[VK_UUID_SIZE] = 0x55e090852d18
                driverUUID[0]:           uint8_t = 65
                driverUUID[1]:           uint8_t = 77
                driverUUID[2]:           uint8_t = 68
                driverUUID[3]:           uint8_t = 45
                driverUUID[4]:           uint8_t = 77
                driverUUID[5]:           uint8_t = 69
                driverUUID[6]:           uint8_t = 83
                driverUUID[7]:           uint8_t = 65
                driverUUID[8]:           uint8_t = 45
                driverUUID[9]:           uint8_t = 68
                driverUUID[10]:          uint8_t = 82
                driverUUID[11]:          uint8_t = 86
                driverUUID[12]:          uint8_t = 0
                driverUUID[13]:          uint8_t = 0
                driverUUID[14]:          uint8_t = 0
                driverUUID[15]:          uint8_t = 0
            deviceLUID: uint8_t[VK_LUID_SIZE] = 0x55e090852d28
                deviceLUID[0]:           uint8_t = 0
                deviceLUID[1]:           uint8_t = 0
                deviceLUID[2]:           uint8_t = 0
                deviceLUID[3]:           uint8_t = 0
                deviceLUID[4]:           uint8_t = 0
                deviceLUID[5]:           uint8_t = 0
                deviceLUID[6]:           uint8_t = 0
                deviceLUID[7]:           uint8_t = 0
            deviceNodeMask:         uint32_t = 0
            deviceLUIDValid:        VkBool32 = 0
            subgroupSize:           uint32_t = 64
            subgroupSupportedStages: VkShaderStageFlags = 255 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT | VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT | VK_SHADER_STAGE_GEOMETRY_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT | VK_SHADER_STAGE_TASK_BIT_EXT | VK_SHADER_STAGE_MESH_BIT_EXT)
            subgroupSupportedOperations: VkSubgroupFeatureFlags = 255 (VK_SUBGROUP_FEATURE_BASIC_BIT | VK_SUBGROUP_FEATURE_VOTE_BIT | VK_SUBGROUP_FEATURE_ARITHMETIC_BIT | VK_SUBGROUP_FEATURE_BALLOT_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT | VK_SUBGROUP_FEATURE_CLUSTERED_BIT | VK_SUBGROUP_FEATURE_QUAD_BIT)
            subgroupQuadOperationsInAllStages: VkBool32 = 1
            pointClippingBehavior: VkPointClippingBehavior = VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES (0)
            maxMultiviewViewCount:  uint32_t = 8
            maxMultiviewInstanceIndex: uint32_t = 2147483647
            protectedNoFault:       VkBool32 = 0
            maxPerSetDescriptors:   uint32_t = 22369621
            maxMemoryAllocationSize: VkDeviceSize = 4294967292

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties2* = 0x7ffe81cff090:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:               const void* = VkPhysicalDeviceVulkan12Properties
        properties: VkPhysicalDeviceProperties = 0x7ffe81cff0a0:
            apiVersion:             uint32_t = 4206822
            driverVersion:          uint32_t = 92286980
            vendorID:               uint32_t = 4098
            deviceID:               uint32_t = 29695
            deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
            pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff1b4
                pipelineCacheUUID[0]:    uint8_t = 123
                pipelineCacheUUID[1]:    uint8_t = 131
                pipelineCacheUUID[2]:    uint8_t = 211
                pipelineCacheUUID[3]:    uint8_t = 220
                pipelineCacheUUID[4]:    uint8_t = 215
                pipelineCacheUUID[5]:    uint8_t = 65
                pipelineCacheUUID[6]:    uint8_t = 140
                pipelineCacheUUID[7]:    uint8_t = 0
                pipelineCacheUUID[8]:    uint8_t = 91
                pipelineCacheUUID[9]:    uint8_t = 223
                pipelineCacheUUID[10]:   uint8_t = 222
                pipelineCacheUUID[11]:   uint8_t = 7
                pipelineCacheUUID[12]:   uint8_t = 4
                pipelineCacheUUID[13]:   uint8_t = 87
                pipelineCacheUUID[14]:   uint8_t = 209
                pipelineCacheUUID[15]:   uint8_t = 190
            limits:   VkPhysicalDeviceLimits = 0x7ffe81cff1c8:
                maxImageDimension1D:    uint32_t = 16384
                maxImageDimension2D:    uint32_t = 16384
                maxImageDimension3D:    uint32_t = 2048
                maxImageDimensionCube:  uint32_t = 16384
                maxImageArrayLayers:    uint32_t = 2048
                maxTexelBufferElements: uint32_t = 4294967295
                maxUniformBufferRange:  uint32_t = 4294967295
                maxStorageBufferRange:  uint32_t = 4294967295
                maxPushConstantsSize:   uint32_t = 256
                maxMemoryAllocationCount: uint32_t = 4294967295
                maxSamplerAllocationCount: uint32_t = 65536
                bufferImageGranularity: VkDeviceSize = 1
                sparseAddressSpaceSize: VkDeviceSize = 4294967292
                maxBoundDescriptorSets: uint32_t = 32
                maxPerStageDescriptorSamplers: uint32_t = 8388606
                maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
                maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
                maxPerStageDescriptorSampledImages: uint32_t = 8388606
                maxPerStageDescriptorStorageImages: uint32_t = 8388606
                maxPerStageDescriptorInputAttachments: uint32_t = 8388606
                maxPerStageResources:   uint32_t = 8388606
                maxDescriptorSetSamplers: uint32_t = 8388606
                maxDescriptorSetUniformBuffers: uint32_t = 8388606
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
                maxDescriptorSetStorageBuffers: uint32_t = 8388606
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
                maxDescriptorSetSampledImages: uint32_t = 8388606
                maxDescriptorSetStorageImages: uint32_t = 8388606
                maxDescriptorSetInputAttachments: uint32_t = 8388606
                maxVertexInputAttributes: uint32_t = 32
                maxVertexInputBindings: uint32_t = 32
                maxVertexInputAttributeOffset: uint32_t = 4294967295
                maxVertexInputBindingStride: uint32_t = 2048
                maxVertexOutputComponents: uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize: uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4096
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations: uint32_t = 127
                maxGeometryInputComponents: uint32_t = 64
                maxGeometryOutputComponents: uint32_t = 128
                maxGeometryOutputVertices: uint32_t = 256
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents: uint32_t = 128
                maxFragmentOutputAttachments: uint32_t = 8
                maxFragmentDualSrcAttachments: uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 8388606
                maxComputeSharedMemorySize: uint32_t = 65536
                maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff2a4
                    maxComputeWorkGroupCount[0]: uint32_t = 65535
                    maxComputeWorkGroupCount[1]: uint32_t = 65535
                    maxComputeWorkGroupCount[2]: uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff2b4
                    maxComputeWorkGroupSize[0]: uint32_t = 1024
                    maxComputeWorkGroupSize[1]: uint32_t = 1024
                    maxComputeWorkGroupSize[2]: uint32_t = 1024
                subPixelPrecisionBits:  uint32_t = 8
                subTexelPrecisionBits:  uint32_t = 8
                mipmapPrecisionBits:    uint32_t = 8
                maxDrawIndexedIndexValue: uint32_t = 4294967295
                maxDrawIndirectCount:   uint32_t = 4294967295
                maxSamplerLodBias:         float = 16
                maxSamplerAnisotropy:      float = 16
                maxViewports:           uint32_t = 16
                maxViewportDimensions: uint32_t[2] = 0x7ffe81cff2e0
                    maxViewportDimensions[0]: uint32_t = 16384
                    maxViewportDimensions[1]: uint32_t = 16384
                viewportBoundsRange:    float[2] = 0x7ffe81cff2e8
                    viewportBoundsRange[0]:    float = -32768
                    viewportBoundsRange[1]:    float = 32767
                viewportSubPixelBits:   uint32_t = 8
                minMemoryMapAlignment:    size_t = 4096
                minTexelBufferOffsetAlignment: VkDeviceSize = 4
                minUniformBufferOffsetAlignment: VkDeviceSize = 4
                minStorageBufferOffsetAlignment: VkDeviceSize = 4
                minTexelOffset:          int32_t = -32
                maxTexelOffset:         uint32_t = 31
                minTexelGatherOffset:    int32_t = -32
                maxTexelGatherOffset:   uint32_t = 31
                minInterpolationOffset:    float = -2
                maxInterpolationOffset:    float = 2
                subPixelInterpolationOffsetBits: uint32_t = 8
                maxFramebufferWidth:    uint32_t = 16384
                maxFramebufferHeight:   uint32_t = 16384
                maxFramebufferLayers:   uint32_t = 1024
                framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxColorAttachments:    uint32_t = 8
                sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:     uint32_t = 1
                timestampComputeAndGraphics: VkBool32 = 1
                timestampPeriod:           float = 10
                maxClipDistances:       uint32_t = 8
                maxCullDistances:       uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities: uint32_t = 2
                pointSizeRange:         float[2] = 0x7ffe81cff384
                    pointSizeRange[0]:         float = 0
                    pointSizeRange[1]:         float = 8191.88
                lineWidthRange:         float[2] = 0x7ffe81cff38c
                    lineWidthRange[0]:         float = 0
                    lineWidthRange[1]:         float = 8191.88
                pointSizeGranularity:      float = 0.125
                lineWidthGranularity:      float = 0.125
                strictLines:            VkBool32 = 0
                standardSampleLocations: VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize: VkDeviceSize = 64
            sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cff3c0:
                residencyStandard2DBlockShape: VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 0
                residencyStandard3DBlockShape: VkBool32 = 1
                residencyAlignedMipSize: VkBool32 = 0
                residencyNonResidentStrict: VkBool32 = 1
        pNext: VkPhysicalDeviceVulkan12Properties = 0x55e090852d68:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES (52)
            pNext:                     void* = NULL
            driverID:             VkDriverId = VK_DRIVER_ID_MESA_RADV (3)
            driverName: char[VK_MAX_DRIVER_NAME_SIZE] = "radv"
            driverInfo: char[VK_MAX_DRIVER_INFO_SIZE] = "Mesa 22.3.4"
            conformanceVersion: VkConformanceVersion = 0x55e090852f7c:
                major:                   uint8_t = 1
                minor:                   uint8_t = 3
                subminor:                uint8_t = 0
                patch:                   uint8_t = 0
            denormBehaviorIndependence: VkShaderFloatControlsIndependence = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY (0)
            roundingModeIndependence: VkShaderFloatControlsIndependence = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY (0)
            shaderSignedZeroInfNanPreserveFloat16: VkBool32 = 1
            shaderSignedZeroInfNanPreserveFloat32: VkBool32 = 1
            shaderSignedZeroInfNanPreserveFloat64: VkBool32 = 1
            shaderDenormPreserveFloat16: VkBool32 = 1
            shaderDenormPreserveFloat32: VkBool32 = 1
            shaderDenormPreserveFloat64: VkBool32 = 1
            shaderDenormFlushToZeroFloat16: VkBool32 = 1
            shaderDenormFlushToZeroFloat32: VkBool32 = 1
            shaderDenormFlushToZeroFloat64: VkBool32 = 1
            shaderRoundingModeRTEFloat16: VkBool32 = 1
            shaderRoundingModeRTEFloat32: VkBool32 = 1
            shaderRoundingModeRTEFloat64: VkBool32 = 1
            shaderRoundingModeRTZFloat16: VkBool32 = 1
            shaderRoundingModeRTZFloat32: VkBool32 = 1
            shaderRoundingModeRTZFloat64: VkBool32 = 1
            maxUpdateAfterBindDescriptorsInAllPools: uint32_t = 67108863
            shaderUniformBufferArrayNonUniformIndexingNative: VkBool32 = 0
            shaderSampledImageArrayNonUniformIndexingNative: VkBool32 = 0
            shaderStorageBufferArrayNonUniformIndexingNative: VkBool32 = 0
            shaderStorageImageArrayNonUniformIndexingNative: VkBool32 = 0
            shaderInputAttachmentArrayNonUniformIndexingNative: VkBool32 = 0
            robustBufferAccessUpdateAfterBind: VkBool32 = 1
            quadDivergentImplicitLod: VkBool32 = 0
            maxPerStageDescriptorUpdateAfterBindSamplers: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindUniformBuffers: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindStorageBuffers: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindSampledImages: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindStorageImages: uint32_t = 8388606
            maxPerStageDescriptorUpdateAfterBindInputAttachments: uint32_t = 8388606
            maxPerStageUpdateAfterBindResources: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindSamplers: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindUniformBuffers: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindUniformBuffersDynamic: uint32_t = 16
            maxDescriptorSetUpdateAfterBindStorageBuffers: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetUpdateAfterBindSampledImages: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindStorageImages: uint32_t = 8388606
            maxDescriptorSetUpdateAfterBindInputAttachments: uint32_t = 8388606
            supportedDepthResolveModes: VkResolveModeFlags = 15 (VK_RESOLVE_MODE_SAMPLE_ZERO_BIT | VK_RESOLVE_MODE_AVERAGE_BIT | VK_RESOLVE_MODE_MIN_BIT | VK_RESOLVE_MODE_MAX_BIT)
            supportedStencilResolveModes: VkResolveModeFlags = 13 (VK_RESOLVE_MODE_SAMPLE_ZERO_BIT | VK_RESOLVE_MODE_MIN_BIT | VK_RESOLVE_MODE_MAX_BIT)
            independentResolveNone: VkBool32 = 1
            independentResolve:     VkBool32 = 1
            filterMinmaxSingleComponentFormats: VkBool32 = 1
            filterMinmaxImageComponentMapping: VkBool32 = 1
            maxTimelineSemaphoreValueDifference: uint64_t = 18446744073709551615
            framebufferIntegerColorSampleCounts: VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties2* = 0x7ffe81cff090:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:               const void* = VkPhysicalDeviceVulkan13Properties
        properties: VkPhysicalDeviceProperties = 0x7ffe81cff0a0:
            apiVersion:             uint32_t = 4206822
            driverVersion:          uint32_t = 92286980
            vendorID:               uint32_t = 4098
            deviceID:               uint32_t = 29695
            deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
            pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff1b4
                pipelineCacheUUID[0]:    uint8_t = 123
                pipelineCacheUUID[1]:    uint8_t = 131
                pipelineCacheUUID[2]:    uint8_t = 211
                pipelineCacheUUID[3]:    uint8_t = 220
                pipelineCacheUUID[4]:    uint8_t = 215
                pipelineCacheUUID[5]:    uint8_t = 65
                pipelineCacheUUID[6]:    uint8_t = 140
                pipelineCacheUUID[7]:    uint8_t = 0
                pipelineCacheUUID[8]:    uint8_t = 91
                pipelineCacheUUID[9]:    uint8_t = 223
                pipelineCacheUUID[10]:   uint8_t = 222
                pipelineCacheUUID[11]:   uint8_t = 7
                pipelineCacheUUID[12]:   uint8_t = 4
                pipelineCacheUUID[13]:   uint8_t = 87
                pipelineCacheUUID[14]:   uint8_t = 209
                pipelineCacheUUID[15]:   uint8_t = 190
            limits:   VkPhysicalDeviceLimits = 0x7ffe81cff1c8:
                maxImageDimension1D:    uint32_t = 16384
                maxImageDimension2D:    uint32_t = 16384
                maxImageDimension3D:    uint32_t = 2048
                maxImageDimensionCube:  uint32_t = 16384
                maxImageArrayLayers:    uint32_t = 2048
                maxTexelBufferElements: uint32_t = 4294967295
                maxUniformBufferRange:  uint32_t = 4294967295
                maxStorageBufferRange:  uint32_t = 4294967295
                maxPushConstantsSize:   uint32_t = 256
                maxMemoryAllocationCount: uint32_t = 4294967295
                maxSamplerAllocationCount: uint32_t = 65536
                bufferImageGranularity: VkDeviceSize = 1
                sparseAddressSpaceSize: VkDeviceSize = 4294967292
                maxBoundDescriptorSets: uint32_t = 32
                maxPerStageDescriptorSamplers: uint32_t = 8388606
                maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
                maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
                maxPerStageDescriptorSampledImages: uint32_t = 8388606
                maxPerStageDescriptorStorageImages: uint32_t = 8388606
                maxPerStageDescriptorInputAttachments: uint32_t = 8388606
                maxPerStageResources:   uint32_t = 8388606
                maxDescriptorSetSamplers: uint32_t = 8388606
                maxDescriptorSetUniformBuffers: uint32_t = 8388606
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
                maxDescriptorSetStorageBuffers: uint32_t = 8388606
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
                maxDescriptorSetSampledImages: uint32_t = 8388606
                maxDescriptorSetStorageImages: uint32_t = 8388606
                maxDescriptorSetInputAttachments: uint32_t = 8388606
                maxVertexInputAttributes: uint32_t = 32
                maxVertexInputBindings: uint32_t = 32
                maxVertexInputAttributeOffset: uint32_t = 4294967295
                maxVertexInputBindingStride: uint32_t = 2048
                maxVertexOutputComponents: uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize: uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4096
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations: uint32_t = 127
                maxGeometryInputComponents: uint32_t = 64
                maxGeometryOutputComponents: uint32_t = 128
                maxGeometryOutputVertices: uint32_t = 256
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents: uint32_t = 128
                maxFragmentOutputAttachments: uint32_t = 8
                maxFragmentDualSrcAttachments: uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 8388606
                maxComputeSharedMemorySize: uint32_t = 65536
                maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff2a4
                    maxComputeWorkGroupCount[0]: uint32_t = 65535
                    maxComputeWorkGroupCount[1]: uint32_t = 65535
                    maxComputeWorkGroupCount[2]: uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff2b4
                    maxComputeWorkGroupSize[0]: uint32_t = 1024
                    maxComputeWorkGroupSize[1]: uint32_t = 1024
                    maxComputeWorkGroupSize[2]: uint32_t = 1024
                subPixelPrecisionBits:  uint32_t = 8
                subTexelPrecisionBits:  uint32_t = 8
                mipmapPrecisionBits:    uint32_t = 8
                maxDrawIndexedIndexValue: uint32_t = 4294967295
                maxDrawIndirectCount:   uint32_t = 4294967295
                maxSamplerLodBias:         float = 16
                maxSamplerAnisotropy:      float = 16
                maxViewports:           uint32_t = 16
                maxViewportDimensions: uint32_t[2] = 0x7ffe81cff2e0
                    maxViewportDimensions[0]: uint32_t = 16384
                    maxViewportDimensions[1]: uint32_t = 16384
                viewportBoundsRange:    float[2] = 0x7ffe81cff2e8
                    viewportBoundsRange[0]:    float = -32768
                    viewportBoundsRange[1]:    float = 32767
                viewportSubPixelBits:   uint32_t = 8
                minMemoryMapAlignment:    size_t = 4096
                minTexelBufferOffsetAlignment: VkDeviceSize = 4
                minUniformBufferOffsetAlignment: VkDeviceSize = 4
                minStorageBufferOffsetAlignment: VkDeviceSize = 4
                minTexelOffset:          int32_t = -32
                maxTexelOffset:         uint32_t = 31
                minTexelGatherOffset:    int32_t = -32
                maxTexelGatherOffset:   uint32_t = 31
                minInterpolationOffset:    float = -2
                maxInterpolationOffset:    float = 2
                subPixelInterpolationOffsetBits: uint32_t = 8
                maxFramebufferWidth:    uint32_t = 16384
                maxFramebufferHeight:   uint32_t = 16384
                maxFramebufferLayers:   uint32_t = 1024
                framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxColorAttachments:    uint32_t = 8
                sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:     uint32_t = 1
                timestampComputeAndGraphics: VkBool32 = 1
                timestampPeriod:           float = 10
                maxClipDistances:       uint32_t = 8
                maxCullDistances:       uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities: uint32_t = 2
                pointSizeRange:         float[2] = 0x7ffe81cff384
                    pointSizeRange[0]:         float = 0
                    pointSizeRange[1]:         float = 8191.88
                lineWidthRange:         float[2] = 0x7ffe81cff38c
                    lineWidthRange[0]:         float = 0
                    lineWidthRange[1]:         float = 8191.88
                pointSizeGranularity:      float = 0.125
                lineWidthGranularity:      float = 0.125
                strictLines:            VkBool32 = 0
                standardSampleLocations: VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize: VkDeviceSize = 64
            sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cff3c0:
                residencyStandard2DBlockShape: VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 0
                residencyStandard3DBlockShape: VkBool32 = 1
                residencyAlignedMipSize: VkBool32 = 0
                residencyNonResidentStrict: VkBool32 = 1
        pNext: VkPhysicalDeviceVulkan13Properties = 0x55e090853048:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES (54)
            pNext:                     void* = NULL
            minSubgroupSize:        uint32_t = 32
            maxSubgroupSize:        uint32_t = 64
            maxComputeWorkgroupSubgroups: uint32_t = 4294967295
            requiredSubgroupSizeStages: VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
            maxInlineUniformBlockSize: uint32_t = 4194304
            maxPerStageDescriptorInlineUniformBlocks: uint32_t = 134217728
            maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks: uint32_t = 134217728
            maxDescriptorSetInlineUniformBlocks: uint32_t = 64
            maxDescriptorSetUpdateAfterBindInlineUniformBlocks: uint32_t = 64
            maxInlineUniformTotalSize: uint32_t = 65535
            integerDotProduct8BitUnsignedAccelerated: VkBool32 = 1
            integerDotProduct8BitSignedAccelerated: VkBool32 = 1
            integerDotProduct8BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct4x8BitPackedUnsignedAccelerated: VkBool32 = 1
            integerDotProduct4x8BitPackedSignedAccelerated: VkBool32 = 1
            integerDotProduct4x8BitPackedMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct16BitUnsignedAccelerated: VkBool32 = 1
            integerDotProduct16BitSignedAccelerated: VkBool32 = 1
            integerDotProduct16BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct32BitUnsignedAccelerated: VkBool32 = 0
            integerDotProduct32BitSignedAccelerated: VkBool32 = 0
            integerDotProduct32BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProduct64BitUnsignedAccelerated: VkBool32 = 0
            integerDotProduct64BitSignedAccelerated: VkBool32 = 0
            integerDotProduct64BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating8BitUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating8BitSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating16BitUnsignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating16BitSignedAccelerated: VkBool32 = 1
            integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating32BitUnsignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating32BitSignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating64BitUnsignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating64BitSignedAccelerated: VkBool32 = 0
            integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated: VkBool32 = 0
            storageTexelBufferOffsetAlignmentBytes: VkDeviceSize = 4
            storageTexelBufferOffsetSingleTexelAlignment: VkBool32 = 1
            uniformTexelBufferOffsetAlignmentBytes: VkDeviceSize = 4
            uniformTexelBufferOffsetSingleTexelAlignment: VkBool32 = 1
            maxBufferSize:      VkDeviceSize = 4294967292

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties2* = 0x7ffe81cff090:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:               const void* = VkPhysicalDeviceInlineUniformBlockProperties
        properties: VkPhysicalDeviceProperties = 0x7ffe81cff0a0:
            apiVersion:             uint32_t = 4206822
            driverVersion:          uint32_t = 92286980
            vendorID:               uint32_t = 4098
            deviceID:               uint32_t = 29695
            deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
            pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff1b4
                pipelineCacheUUID[0]:    uint8_t = 123
                pipelineCacheUUID[1]:    uint8_t = 131
                pipelineCacheUUID[2]:    uint8_t = 211
                pipelineCacheUUID[3]:    uint8_t = 220
                pipelineCacheUUID[4]:    uint8_t = 215
                pipelineCacheUUID[5]:    uint8_t = 65
                pipelineCacheUUID[6]:    uint8_t = 140
                pipelineCacheUUID[7]:    uint8_t = 0
                pipelineCacheUUID[8]:    uint8_t = 91
                pipelineCacheUUID[9]:    uint8_t = 223
                pipelineCacheUUID[10]:   uint8_t = 222
                pipelineCacheUUID[11]:   uint8_t = 7
                pipelineCacheUUID[12]:   uint8_t = 4
                pipelineCacheUUID[13]:   uint8_t = 87
                pipelineCacheUUID[14]:   uint8_t = 209
                pipelineCacheUUID[15]:   uint8_t = 190
            limits:   VkPhysicalDeviceLimits = 0x7ffe81cff1c8:
                maxImageDimension1D:    uint32_t = 16384
                maxImageDimension2D:    uint32_t = 16384
                maxImageDimension3D:    uint32_t = 2048
                maxImageDimensionCube:  uint32_t = 16384
                maxImageArrayLayers:    uint32_t = 2048
                maxTexelBufferElements: uint32_t = 4294967295
                maxUniformBufferRange:  uint32_t = 4294967295
                maxStorageBufferRange:  uint32_t = 4294967295
                maxPushConstantsSize:   uint32_t = 256
                maxMemoryAllocationCount: uint32_t = 4294967295
                maxSamplerAllocationCount: uint32_t = 65536
                bufferImageGranularity: VkDeviceSize = 1
                sparseAddressSpaceSize: VkDeviceSize = 4294967292
                maxBoundDescriptorSets: uint32_t = 32
                maxPerStageDescriptorSamplers: uint32_t = 8388606
                maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
                maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
                maxPerStageDescriptorSampledImages: uint32_t = 8388606
                maxPerStageDescriptorStorageImages: uint32_t = 8388606
                maxPerStageDescriptorInputAttachments: uint32_t = 8388606
                maxPerStageResources:   uint32_t = 8388606
                maxDescriptorSetSamplers: uint32_t = 8388606
                maxDescriptorSetUniformBuffers: uint32_t = 8388606
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
                maxDescriptorSetStorageBuffers: uint32_t = 8388606
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
                maxDescriptorSetSampledImages: uint32_t = 8388606
                maxDescriptorSetStorageImages: uint32_t = 8388606
                maxDescriptorSetInputAttachments: uint32_t = 8388606
                maxVertexInputAttributes: uint32_t = 32
                maxVertexInputBindings: uint32_t = 32
                maxVertexInputAttributeOffset: uint32_t = 4294967295
                maxVertexInputBindingStride: uint32_t = 2048
                maxVertexOutputComponents: uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize: uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4096
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations: uint32_t = 127
                maxGeometryInputComponents: uint32_t = 64
                maxGeometryOutputComponents: uint32_t = 128
                maxGeometryOutputVertices: uint32_t = 256
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents: uint32_t = 128
                maxFragmentOutputAttachments: uint32_t = 8
                maxFragmentDualSrcAttachments: uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 8388606
                maxComputeSharedMemorySize: uint32_t = 65536
                maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff2a4
                    maxComputeWorkGroupCount[0]: uint32_t = 65535
                    maxComputeWorkGroupCount[1]: uint32_t = 65535
                    maxComputeWorkGroupCount[2]: uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff2b4
                    maxComputeWorkGroupSize[0]: uint32_t = 1024
                    maxComputeWorkGroupSize[1]: uint32_t = 1024
                    maxComputeWorkGroupSize[2]: uint32_t = 1024
                subPixelPrecisionBits:  uint32_t = 8
                subTexelPrecisionBits:  uint32_t = 8
                mipmapPrecisionBits:    uint32_t = 8
                maxDrawIndexedIndexValue: uint32_t = 4294967295
                maxDrawIndirectCount:   uint32_t = 4294967295
                maxSamplerLodBias:         float = 16
                maxSamplerAnisotropy:      float = 16
                maxViewports:           uint32_t = 16
                maxViewportDimensions: uint32_t[2] = 0x7ffe81cff2e0
                    maxViewportDimensions[0]: uint32_t = 16384
                    maxViewportDimensions[1]: uint32_t = 16384
                viewportBoundsRange:    float[2] = 0x7ffe81cff2e8
                    viewportBoundsRange[0]:    float = -32768
                    viewportBoundsRange[1]:    float = 32767
                viewportSubPixelBits:   uint32_t = 8
                minMemoryMapAlignment:    size_t = 4096
                minTexelBufferOffsetAlignment: VkDeviceSize = 4
                minUniformBufferOffsetAlignment: VkDeviceSize = 4
                minStorageBufferOffsetAlignment: VkDeviceSize = 4
                minTexelOffset:          int32_t = -32
                maxTexelOffset:         uint32_t = 31
                minTexelGatherOffset:    int32_t = -32
                maxTexelGatherOffset:   uint32_t = 31
                minInterpolationOffset:    float = -2
                maxInterpolationOffset:    float = 2
                subPixelInterpolationOffsetBits: uint32_t = 8
                maxFramebufferWidth:    uint32_t = 16384
                maxFramebufferHeight:   uint32_t = 16384
                maxFramebufferLayers:   uint32_t = 1024
                framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxColorAttachments:    uint32_t = 8
                sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:     uint32_t = 1
                timestampComputeAndGraphics: VkBool32 = 1
                timestampPeriod:           float = 10
                maxClipDistances:       uint32_t = 8
                maxCullDistances:       uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities: uint32_t = 2
                pointSizeRange:         float[2] = 0x7ffe81cff384
                    pointSizeRange[0]:         float = 0
                    pointSizeRange[1]:         float = 8191.88
                lineWidthRange:         float[2] = 0x7ffe81cff38c
                    lineWidthRange[0]:         float = 0
                    lineWidthRange[1]:         float = 8191.88
                pointSizeGranularity:      float = 0.125
                lineWidthGranularity:      float = 0.125
                strictLines:            VkBool32 = 0
                standardSampleLocations: VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize: VkDeviceSize = 64
            sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cff3c0:
                residencyStandard2DBlockShape: VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 0
                residencyStandard3DBlockShape: VkBool32 = 1
                residencyAlignedMipSize: VkBool32 = 0
                residencyNonResidentStrict: VkBool32 = 1
        pNext: VkPhysicalDeviceInlineUniformBlockProperties = 0x55e090853280:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES (1000138001)
            pNext:                     void* = NULL
            maxInlineUniformBlockSize: uint32_t = 4194304
            maxPerStageDescriptorInlineUniformBlocks: uint32_t = 134217728
            maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks: uint32_t = 134217728
            maxDescriptorSetInlineUniformBlocks: uint32_t = 64
            maxDescriptorSetUpdateAfterBindInlineUniformBlocks: uint32_t = 64

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties2* = 0x7ffe81cff090:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:               const void* = VkPhysicalDeviceTexelBufferAlignmentProperties
        properties: VkPhysicalDeviceProperties = 0x7ffe81cff0a0:
            apiVersion:             uint32_t = 4206822
            driverVersion:          uint32_t = 92286980
            vendorID:               uint32_t = 4098
            deviceID:               uint32_t = 29695
            deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
            pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff1b4
                pipelineCacheUUID[0]:    uint8_t = 123
                pipelineCacheUUID[1]:    uint8_t = 131
                pipelineCacheUUID[2]:    uint8_t = 211
                pipelineCacheUUID[3]:    uint8_t = 220
                pipelineCacheUUID[4]:    uint8_t = 215
                pipelineCacheUUID[5]:    uint8_t = 65
                pipelineCacheUUID[6]:    uint8_t = 140
                pipelineCacheUUID[7]:    uint8_t = 0
                pipelineCacheUUID[8]:    uint8_t = 91
                pipelineCacheUUID[9]:    uint8_t = 223
                pipelineCacheUUID[10]:   uint8_t = 222
                pipelineCacheUUID[11]:   uint8_t = 7
                pipelineCacheUUID[12]:   uint8_t = 4
                pipelineCacheUUID[13]:   uint8_t = 87
                pipelineCacheUUID[14]:   uint8_t = 209
                pipelineCacheUUID[15]:   uint8_t = 190
            limits:   VkPhysicalDeviceLimits = 0x7ffe81cff1c8:
                maxImageDimension1D:    uint32_t = 16384
                maxImageDimension2D:    uint32_t = 16384
                maxImageDimension3D:    uint32_t = 2048
                maxImageDimensionCube:  uint32_t = 16384
                maxImageArrayLayers:    uint32_t = 2048
                maxTexelBufferElements: uint32_t = 4294967295
                maxUniformBufferRange:  uint32_t = 4294967295
                maxStorageBufferRange:  uint32_t = 4294967295
                maxPushConstantsSize:   uint32_t = 256
                maxMemoryAllocationCount: uint32_t = 4294967295
                maxSamplerAllocationCount: uint32_t = 65536
                bufferImageGranularity: VkDeviceSize = 1
                sparseAddressSpaceSize: VkDeviceSize = 4294967292
                maxBoundDescriptorSets: uint32_t = 32
                maxPerStageDescriptorSamplers: uint32_t = 8388606
                maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
                maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
                maxPerStageDescriptorSampledImages: uint32_t = 8388606
                maxPerStageDescriptorStorageImages: uint32_t = 8388606
                maxPerStageDescriptorInputAttachments: uint32_t = 8388606
                maxPerStageResources:   uint32_t = 8388606
                maxDescriptorSetSamplers: uint32_t = 8388606
                maxDescriptorSetUniformBuffers: uint32_t = 8388606
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
                maxDescriptorSetStorageBuffers: uint32_t = 8388606
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
                maxDescriptorSetSampledImages: uint32_t = 8388606
                maxDescriptorSetStorageImages: uint32_t = 8388606
                maxDescriptorSetInputAttachments: uint32_t = 8388606
                maxVertexInputAttributes: uint32_t = 32
                maxVertexInputBindings: uint32_t = 32
                maxVertexInputAttributeOffset: uint32_t = 4294967295
                maxVertexInputBindingStride: uint32_t = 2048
                maxVertexOutputComponents: uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize: uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4096
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations: uint32_t = 127
                maxGeometryInputComponents: uint32_t = 64
                maxGeometryOutputComponents: uint32_t = 128
                maxGeometryOutputVertices: uint32_t = 256
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents: uint32_t = 128
                maxFragmentOutputAttachments: uint32_t = 8
                maxFragmentDualSrcAttachments: uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 8388606
                maxComputeSharedMemorySize: uint32_t = 65536
                maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff2a4
                    maxComputeWorkGroupCount[0]: uint32_t = 65535
                    maxComputeWorkGroupCount[1]: uint32_t = 65535
                    maxComputeWorkGroupCount[2]: uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff2b4
                    maxComputeWorkGroupSize[0]: uint32_t = 1024
                    maxComputeWorkGroupSize[1]: uint32_t = 1024
                    maxComputeWorkGroupSize[2]: uint32_t = 1024
                subPixelPrecisionBits:  uint32_t = 8
                subTexelPrecisionBits:  uint32_t = 8
                mipmapPrecisionBits:    uint32_t = 8
                maxDrawIndexedIndexValue: uint32_t = 4294967295
                maxDrawIndirectCount:   uint32_t = 4294967295
                maxSamplerLodBias:         float = 16
                maxSamplerAnisotropy:      float = 16
                maxViewports:           uint32_t = 16
                maxViewportDimensions: uint32_t[2] = 0x7ffe81cff2e0
                    maxViewportDimensions[0]: uint32_t = 16384
                    maxViewportDimensions[1]: uint32_t = 16384
                viewportBoundsRange:    float[2] = 0x7ffe81cff2e8
                    viewportBoundsRange[0]:    float = -32768
                    viewportBoundsRange[1]:    float = 32767
                viewportSubPixelBits:   uint32_t = 8
                minMemoryMapAlignment:    size_t = 4096
                minTexelBufferOffsetAlignment: VkDeviceSize = 4
                minUniformBufferOffsetAlignment: VkDeviceSize = 4
                minStorageBufferOffsetAlignment: VkDeviceSize = 4
                minTexelOffset:          int32_t = -32
                maxTexelOffset:         uint32_t = 31
                minTexelGatherOffset:    int32_t = -32
                maxTexelGatherOffset:   uint32_t = 31
                minInterpolationOffset:    float = -2
                maxInterpolationOffset:    float = 2
                subPixelInterpolationOffsetBits: uint32_t = 8
                maxFramebufferWidth:    uint32_t = 16384
                maxFramebufferHeight:   uint32_t = 16384
                maxFramebufferLayers:   uint32_t = 1024
                framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxColorAttachments:    uint32_t = 8
                sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:     uint32_t = 1
                timestampComputeAndGraphics: VkBool32 = 1
                timestampPeriod:           float = 10
                maxClipDistances:       uint32_t = 8
                maxCullDistances:       uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities: uint32_t = 2
                pointSizeRange:         float[2] = 0x7ffe81cff384
                    pointSizeRange[0]:         float = 0
                    pointSizeRange[1]:         float = 8191.88
                lineWidthRange:         float[2] = 0x7ffe81cff38c
                    lineWidthRange[0]:         float = 0
                    lineWidthRange[1]:         float = 8191.88
                pointSizeGranularity:      float = 0.125
                lineWidthGranularity:      float = 0.125
                strictLines:            VkBool32 = 0
                standardSampleLocations: VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize: VkDeviceSize = 64
            sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cff3c0:
                residencyStandard2DBlockShape: VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 0
                residencyStandard3DBlockShape: VkBool32 = 1
                residencyAlignedMipSize: VkBool32 = 0
                residencyNonResidentStrict: VkBool32 = 1
        pNext: VkPhysicalDeviceTexelBufferAlignmentProperties = 0x55e0908533c8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES (1000281001)
            pNext:                     void* = NULL
            storageTexelBufferOffsetAlignmentBytes: VkDeviceSize = 4
            storageTexelBufferOffsetSingleTexelAlignment: VkBool32 = 1
            uniformTexelBufferOffsetAlignmentBytes: VkDeviceSize = 4
            uniformTexelBufferOffsetSingleTexelAlignment: VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties2* = 0x7ffe81cff090:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:               const void* = VkPhysicalDeviceMultiviewProperties
        properties: VkPhysicalDeviceProperties = 0x7ffe81cff0a0:
            apiVersion:             uint32_t = 4206822
            driverVersion:          uint32_t = 92286980
            vendorID:               uint32_t = 4098
            deviceID:               uint32_t = 29695
            deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
            pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff1b4
                pipelineCacheUUID[0]:    uint8_t = 123
                pipelineCacheUUID[1]:    uint8_t = 131
                pipelineCacheUUID[2]:    uint8_t = 211
                pipelineCacheUUID[3]:    uint8_t = 220
                pipelineCacheUUID[4]:    uint8_t = 215
                pipelineCacheUUID[5]:    uint8_t = 65
                pipelineCacheUUID[6]:    uint8_t = 140
                pipelineCacheUUID[7]:    uint8_t = 0
                pipelineCacheUUID[8]:    uint8_t = 91
                pipelineCacheUUID[9]:    uint8_t = 223
                pipelineCacheUUID[10]:   uint8_t = 222
                pipelineCacheUUID[11]:   uint8_t = 7
                pipelineCacheUUID[12]:   uint8_t = 4
                pipelineCacheUUID[13]:   uint8_t = 87
                pipelineCacheUUID[14]:   uint8_t = 209
                pipelineCacheUUID[15]:   uint8_t = 190
            limits:   VkPhysicalDeviceLimits = 0x7ffe81cff1c8:
                maxImageDimension1D:    uint32_t = 16384
                maxImageDimension2D:    uint32_t = 16384
                maxImageDimension3D:    uint32_t = 2048
                maxImageDimensionCube:  uint32_t = 16384
                maxImageArrayLayers:    uint32_t = 2048
                maxTexelBufferElements: uint32_t = 4294967295
                maxUniformBufferRange:  uint32_t = 4294967295
                maxStorageBufferRange:  uint32_t = 4294967295
                maxPushConstantsSize:   uint32_t = 256
                maxMemoryAllocationCount: uint32_t = 4294967295
                maxSamplerAllocationCount: uint32_t = 65536
                bufferImageGranularity: VkDeviceSize = 1
                sparseAddressSpaceSize: VkDeviceSize = 4294967292
                maxBoundDescriptorSets: uint32_t = 32
                maxPerStageDescriptorSamplers: uint32_t = 8388606
                maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
                maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
                maxPerStageDescriptorSampledImages: uint32_t = 8388606
                maxPerStageDescriptorStorageImages: uint32_t = 8388606
                maxPerStageDescriptorInputAttachments: uint32_t = 8388606
                maxPerStageResources:   uint32_t = 8388606
                maxDescriptorSetSamplers: uint32_t = 8388606
                maxDescriptorSetUniformBuffers: uint32_t = 8388606
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
                maxDescriptorSetStorageBuffers: uint32_t = 8388606
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
                maxDescriptorSetSampledImages: uint32_t = 8388606
                maxDescriptorSetStorageImages: uint32_t = 8388606
                maxDescriptorSetInputAttachments: uint32_t = 8388606
                maxVertexInputAttributes: uint32_t = 32
                maxVertexInputBindings: uint32_t = 32
                maxVertexInputAttributeOffset: uint32_t = 4294967295
                maxVertexInputBindingStride: uint32_t = 2048
                maxVertexOutputComponents: uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize: uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4096
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations: uint32_t = 127
                maxGeometryInputComponents: uint32_t = 64
                maxGeometryOutputComponents: uint32_t = 128
                maxGeometryOutputVertices: uint32_t = 256
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents: uint32_t = 128
                maxFragmentOutputAttachments: uint32_t = 8
                maxFragmentDualSrcAttachments: uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 8388606
                maxComputeSharedMemorySize: uint32_t = 65536
                maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff2a4
                    maxComputeWorkGroupCount[0]: uint32_t = 65535
                    maxComputeWorkGroupCount[1]: uint32_t = 65535
                    maxComputeWorkGroupCount[2]: uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff2b4
                    maxComputeWorkGroupSize[0]: uint32_t = 1024
                    maxComputeWorkGroupSize[1]: uint32_t = 1024
                    maxComputeWorkGroupSize[2]: uint32_t = 1024
                subPixelPrecisionBits:  uint32_t = 8
                subTexelPrecisionBits:  uint32_t = 8
                mipmapPrecisionBits:    uint32_t = 8
                maxDrawIndexedIndexValue: uint32_t = 4294967295
                maxDrawIndirectCount:   uint32_t = 4294967295
                maxSamplerLodBias:         float = 16
                maxSamplerAnisotropy:      float = 16
                maxViewports:           uint32_t = 16
                maxViewportDimensions: uint32_t[2] = 0x7ffe81cff2e0
                    maxViewportDimensions[0]: uint32_t = 16384
                    maxViewportDimensions[1]: uint32_t = 16384
                viewportBoundsRange:    float[2] = 0x7ffe81cff2e8
                    viewportBoundsRange[0]:    float = -32768
                    viewportBoundsRange[1]:    float = 32767
                viewportSubPixelBits:   uint32_t = 8
                minMemoryMapAlignment:    size_t = 4096
                minTexelBufferOffsetAlignment: VkDeviceSize = 4
                minUniformBufferOffsetAlignment: VkDeviceSize = 4
                minStorageBufferOffsetAlignment: VkDeviceSize = 4
                minTexelOffset:          int32_t = -32
                maxTexelOffset:         uint32_t = 31
                minTexelGatherOffset:    int32_t = -32
                maxTexelGatherOffset:   uint32_t = 31
                minInterpolationOffset:    float = -2
                maxInterpolationOffset:    float = 2
                subPixelInterpolationOffsetBits: uint32_t = 8
                maxFramebufferWidth:    uint32_t = 16384
                maxFramebufferHeight:   uint32_t = 16384
                maxFramebufferLayers:   uint32_t = 1024
                framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxColorAttachments:    uint32_t = 8
                sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:     uint32_t = 1
                timestampComputeAndGraphics: VkBool32 = 1
                timestampPeriod:           float = 10
                maxClipDistances:       uint32_t = 8
                maxCullDistances:       uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities: uint32_t = 2
                pointSizeRange:         float[2] = 0x7ffe81cff384
                    pointSizeRange[0]:         float = 0
                    pointSizeRange[1]:         float = 8191.88
                lineWidthRange:         float[2] = 0x7ffe81cff38c
                    lineWidthRange[0]:         float = 0
                    lineWidthRange[1]:         float = 8191.88
                pointSizeGranularity:      float = 0.125
                lineWidthGranularity:      float = 0.125
                strictLines:            VkBool32 = 0
                standardSampleLocations: VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize: VkDeviceSize = 64
            sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cff3c0:
                residencyStandard2DBlockShape: VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 0
                residencyStandard3DBlockShape: VkBool32 = 1
                residencyAlignedMipSize: VkBool32 = 0
                residencyNonResidentStrict: VkBool32 = 1
        pNext: VkPhysicalDeviceMultiviewProperties = 0x55e0908534b8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES (1000053002)
            pNext:                     void* = NULL
            maxMultiviewViewCount:  uint32_t = 8
            maxMultiviewInstanceIndex: uint32_t = 2147483647

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties2* = 0x7ffe81cff090:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:               const void* = VkPhysicalDeviceSubgroupSizeControlProperties
        properties: VkPhysicalDeviceProperties = 0x7ffe81cff0a0:
            apiVersion:             uint32_t = 4206822
            driverVersion:          uint32_t = 92286980
            vendorID:               uint32_t = 4098
            deviceID:               uint32_t = 29695
            deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
            pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff1b4
                pipelineCacheUUID[0]:    uint8_t = 123
                pipelineCacheUUID[1]:    uint8_t = 131
                pipelineCacheUUID[2]:    uint8_t = 211
                pipelineCacheUUID[3]:    uint8_t = 220
                pipelineCacheUUID[4]:    uint8_t = 215
                pipelineCacheUUID[5]:    uint8_t = 65
                pipelineCacheUUID[6]:    uint8_t = 140
                pipelineCacheUUID[7]:    uint8_t = 0
                pipelineCacheUUID[8]:    uint8_t = 91
                pipelineCacheUUID[9]:    uint8_t = 223
                pipelineCacheUUID[10]:   uint8_t = 222
                pipelineCacheUUID[11]:   uint8_t = 7
                pipelineCacheUUID[12]:   uint8_t = 4
                pipelineCacheUUID[13]:   uint8_t = 87
                pipelineCacheUUID[14]:   uint8_t = 209
                pipelineCacheUUID[15]:   uint8_t = 190
            limits:   VkPhysicalDeviceLimits = 0x7ffe81cff1c8:
                maxImageDimension1D:    uint32_t = 16384
                maxImageDimension2D:    uint32_t = 16384
                maxImageDimension3D:    uint32_t = 2048
                maxImageDimensionCube:  uint32_t = 16384
                maxImageArrayLayers:    uint32_t = 2048
                maxTexelBufferElements: uint32_t = 4294967295
                maxUniformBufferRange:  uint32_t = 4294967295
                maxStorageBufferRange:  uint32_t = 4294967295
                maxPushConstantsSize:   uint32_t = 256
                maxMemoryAllocationCount: uint32_t = 4294967295
                maxSamplerAllocationCount: uint32_t = 65536
                bufferImageGranularity: VkDeviceSize = 1
                sparseAddressSpaceSize: VkDeviceSize = 4294967292
                maxBoundDescriptorSets: uint32_t = 32
                maxPerStageDescriptorSamplers: uint32_t = 8388606
                maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
                maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
                maxPerStageDescriptorSampledImages: uint32_t = 8388606
                maxPerStageDescriptorStorageImages: uint32_t = 8388606
                maxPerStageDescriptorInputAttachments: uint32_t = 8388606
                maxPerStageResources:   uint32_t = 8388606
                maxDescriptorSetSamplers: uint32_t = 8388606
                maxDescriptorSetUniformBuffers: uint32_t = 8388606
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
                maxDescriptorSetStorageBuffers: uint32_t = 8388606
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
                maxDescriptorSetSampledImages: uint32_t = 8388606
                maxDescriptorSetStorageImages: uint32_t = 8388606
                maxDescriptorSetInputAttachments: uint32_t = 8388606
                maxVertexInputAttributes: uint32_t = 32
                maxVertexInputBindings: uint32_t = 32
                maxVertexInputAttributeOffset: uint32_t = 4294967295
                maxVertexInputBindingStride: uint32_t = 2048
                maxVertexOutputComponents: uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize: uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4096
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations: uint32_t = 127
                maxGeometryInputComponents: uint32_t = 64
                maxGeometryOutputComponents: uint32_t = 128
                maxGeometryOutputVertices: uint32_t = 256
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents: uint32_t = 128
                maxFragmentOutputAttachments: uint32_t = 8
                maxFragmentDualSrcAttachments: uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 8388606
                maxComputeSharedMemorySize: uint32_t = 65536
                maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff2a4
                    maxComputeWorkGroupCount[0]: uint32_t = 65535
                    maxComputeWorkGroupCount[1]: uint32_t = 65535
                    maxComputeWorkGroupCount[2]: uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff2b4
                    maxComputeWorkGroupSize[0]: uint32_t = 1024
                    maxComputeWorkGroupSize[1]: uint32_t = 1024
                    maxComputeWorkGroupSize[2]: uint32_t = 1024
                subPixelPrecisionBits:  uint32_t = 8
                subTexelPrecisionBits:  uint32_t = 8
                mipmapPrecisionBits:    uint32_t = 8
                maxDrawIndexedIndexValue: uint32_t = 4294967295
                maxDrawIndirectCount:   uint32_t = 4294967295
                maxSamplerLodBias:         float = 16
                maxSamplerAnisotropy:      float = 16
                maxViewports:           uint32_t = 16
                maxViewportDimensions: uint32_t[2] = 0x7ffe81cff2e0
                    maxViewportDimensions[0]: uint32_t = 16384
                    maxViewportDimensions[1]: uint32_t = 16384
                viewportBoundsRange:    float[2] = 0x7ffe81cff2e8
                    viewportBoundsRange[0]:    float = -32768
                    viewportBoundsRange[1]:    float = 32767
                viewportSubPixelBits:   uint32_t = 8
                minMemoryMapAlignment:    size_t = 4096
                minTexelBufferOffsetAlignment: VkDeviceSize = 4
                minUniformBufferOffsetAlignment: VkDeviceSize = 4
                minStorageBufferOffsetAlignment: VkDeviceSize = 4
                minTexelOffset:          int32_t = -32
                maxTexelOffset:         uint32_t = 31
                minTexelGatherOffset:    int32_t = -32
                maxTexelGatherOffset:   uint32_t = 31
                minInterpolationOffset:    float = -2
                maxInterpolationOffset:    float = 2
                subPixelInterpolationOffsetBits: uint32_t = 8
                maxFramebufferWidth:    uint32_t = 16384
                maxFramebufferHeight:   uint32_t = 16384
                maxFramebufferLayers:   uint32_t = 1024
                framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxColorAttachments:    uint32_t = 8
                sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:     uint32_t = 1
                timestampComputeAndGraphics: VkBool32 = 1
                timestampPeriod:           float = 10
                maxClipDistances:       uint32_t = 8
                maxCullDistances:       uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities: uint32_t = 2
                pointSizeRange:         float[2] = 0x7ffe81cff384
                    pointSizeRange[0]:         float = 0
                    pointSizeRange[1]:         float = 8191.88
                lineWidthRange:         float[2] = 0x7ffe81cff38c
                    lineWidthRange[0]:         float = 0
                    lineWidthRange[1]:         float = 8191.88
                pointSizeGranularity:      float = 0.125
                lineWidthGranularity:      float = 0.125
                strictLines:            VkBool32 = 0
                standardSampleLocations: VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize: VkDeviceSize = 64
            sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cff3c0:
                residencyStandard2DBlockShape: VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 0
                residencyStandard3DBlockShape: VkBool32 = 1
                residencyAlignedMipSize: VkBool32 = 0
                residencyNonResidentStrict: VkBool32 = 1
        pNext: VkPhysicalDeviceSubgroupSizeControlProperties = 0x55e0908535f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES (1000225000)
            pNext:                     void* = NULL
            minSubgroupSize:        uint32_t = 32
            maxSubgroupSize:        uint32_t = 64
            maxComputeWorkgroupSubgroups: uint32_t = 4294967295
            requiredSubgroupSizeStages: VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pProperties: VkPhysicalDeviceProperties2* = 0x7ffe81cff090:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:               const void* = VkPhysicalDeviceSubgroupProperties
        properties: VkPhysicalDeviceProperties = 0x7ffe81cff0a0:
            apiVersion:             uint32_t = 4206822
            driverVersion:          uint32_t = 92286980
            vendorID:               uint32_t = 4098
            deviceID:               uint32_t = 29695
            deviceType: VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName: char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "AMD Radeon RX 6600 (RADV NAVI23)"
            pipelineCacheUUID: uint8_t[VK_UUID_SIZE] = 0x7ffe81cff1b4
                pipelineCacheUUID[0]:    uint8_t = 123
                pipelineCacheUUID[1]:    uint8_t = 131
                pipelineCacheUUID[2]:    uint8_t = 211
                pipelineCacheUUID[3]:    uint8_t = 220
                pipelineCacheUUID[4]:    uint8_t = 215
                pipelineCacheUUID[5]:    uint8_t = 65
                pipelineCacheUUID[6]:    uint8_t = 140
                pipelineCacheUUID[7]:    uint8_t = 0
                pipelineCacheUUID[8]:    uint8_t = 91
                pipelineCacheUUID[9]:    uint8_t = 223
                pipelineCacheUUID[10]:   uint8_t = 222
                pipelineCacheUUID[11]:   uint8_t = 7
                pipelineCacheUUID[12]:   uint8_t = 4
                pipelineCacheUUID[13]:   uint8_t = 87
                pipelineCacheUUID[14]:   uint8_t = 209
                pipelineCacheUUID[15]:   uint8_t = 190
            limits:   VkPhysicalDeviceLimits = 0x7ffe81cff1c8:
                maxImageDimension1D:    uint32_t = 16384
                maxImageDimension2D:    uint32_t = 16384
                maxImageDimension3D:    uint32_t = 2048
                maxImageDimensionCube:  uint32_t = 16384
                maxImageArrayLayers:    uint32_t = 2048
                maxTexelBufferElements: uint32_t = 4294967295
                maxUniformBufferRange:  uint32_t = 4294967295
                maxStorageBufferRange:  uint32_t = 4294967295
                maxPushConstantsSize:   uint32_t = 256
                maxMemoryAllocationCount: uint32_t = 4294967295
                maxSamplerAllocationCount: uint32_t = 65536
                bufferImageGranularity: VkDeviceSize = 1
                sparseAddressSpaceSize: VkDeviceSize = 4294967292
                maxBoundDescriptorSets: uint32_t = 32
                maxPerStageDescriptorSamplers: uint32_t = 8388606
                maxPerStageDescriptorUniformBuffers: uint32_t = 8388606
                maxPerStageDescriptorStorageBuffers: uint32_t = 8388606
                maxPerStageDescriptorSampledImages: uint32_t = 8388606
                maxPerStageDescriptorStorageImages: uint32_t = 8388606
                maxPerStageDescriptorInputAttachments: uint32_t = 8388606
                maxPerStageResources:   uint32_t = 8388606
                maxDescriptorSetSamplers: uint32_t = 8388606
                maxDescriptorSetUniformBuffers: uint32_t = 8388606
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 16
                maxDescriptorSetStorageBuffers: uint32_t = 8388606
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
                maxDescriptorSetSampledImages: uint32_t = 8388606
                maxDescriptorSetStorageImages: uint32_t = 8388606
                maxDescriptorSetInputAttachments: uint32_t = 8388606
                maxVertexInputAttributes: uint32_t = 32
                maxVertexInputBindings: uint32_t = 32
                maxVertexInputAttributeOffset: uint32_t = 4294967295
                maxVertexInputBindingStride: uint32_t = 2048
                maxVertexOutputComponents: uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize: uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4096
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations: uint32_t = 127
                maxGeometryInputComponents: uint32_t = 64
                maxGeometryOutputComponents: uint32_t = 128
                maxGeometryOutputVertices: uint32_t = 256
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents: uint32_t = 128
                maxFragmentOutputAttachments: uint32_t = 8
                maxFragmentDualSrcAttachments: uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 8388606
                maxComputeSharedMemorySize: uint32_t = 65536
                maxComputeWorkGroupCount: uint32_t[3] = 0x7ffe81cff2a4
                    maxComputeWorkGroupCount[0]: uint32_t = 65535
                    maxComputeWorkGroupCount[1]: uint32_t = 65535
                    maxComputeWorkGroupCount[2]: uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1024
                maxComputeWorkGroupSize: uint32_t[3] = 0x7ffe81cff2b4
                    maxComputeWorkGroupSize[0]: uint32_t = 1024
                    maxComputeWorkGroupSize[1]: uint32_t = 1024
                    maxComputeWorkGroupSize[2]: uint32_t = 1024
                subPixelPrecisionBits:  uint32_t = 8
                subTexelPrecisionBits:  uint32_t = 8
                mipmapPrecisionBits:    uint32_t = 8
                maxDrawIndexedIndexValue: uint32_t = 4294967295
                maxDrawIndirectCount:   uint32_t = 4294967295
                maxSamplerLodBias:         float = 16
                maxSamplerAnisotropy:      float = 16
                maxViewports:           uint32_t = 16
                maxViewportDimensions: uint32_t[2] = 0x7ffe81cff2e0
                    maxViewportDimensions[0]: uint32_t = 16384
                    maxViewportDimensions[1]: uint32_t = 16384
                viewportBoundsRange:    float[2] = 0x7ffe81cff2e8
                    viewportBoundsRange[0]:    float = -32768
                    viewportBoundsRange[1]:    float = 32767
                viewportSubPixelBits:   uint32_t = 8
                minMemoryMapAlignment:    size_t = 4096
                minTexelBufferOffsetAlignment: VkDeviceSize = 4
                minUniformBufferOffsetAlignment: VkDeviceSize = 4
                minStorageBufferOffsetAlignment: VkDeviceSize = 4
                minTexelOffset:          int32_t = -32
                maxTexelOffset:         uint32_t = 31
                minTexelGatherOffset:    int32_t = -32
                maxTexelGatherOffset:   uint32_t = 31
                minInterpolationOffset:    float = -2
                maxInterpolationOffset:    float = 2
                subPixelInterpolationOffsetBits: uint32_t = 8
                maxFramebufferWidth:    uint32_t = 16384
                maxFramebufferHeight:   uint32_t = 16384
                maxFramebufferLayers:   uint32_t = 1024
                framebufferColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxColorAttachments:    uint32_t = 8
                sampledImageColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                storageImageSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:     uint32_t = 1
                timestampComputeAndGraphics: VkBool32 = 1
                timestampPeriod:           float = 10
                maxClipDistances:       uint32_t = 8
                maxCullDistances:       uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities: uint32_t = 2
                pointSizeRange:         float[2] = 0x7ffe81cff384
                    pointSizeRange[0]:         float = 0
                    pointSizeRange[1]:         float = 8191.88
                lineWidthRange:         float[2] = 0x7ffe81cff38c
                    lineWidthRange[0]:         float = 0
                    lineWidthRange[1]:         float = 8191.88
                pointSizeGranularity:      float = 0.125
                lineWidthGranularity:      float = 0.125
                strictLines:            VkBool32 = 0
                standardSampleLocations: VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize: VkDeviceSize = 64
            sparseProperties: VkPhysicalDeviceSparseProperties = 0x7ffe81cff3c0:
                residencyStandard2DBlockShape: VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 0
                residencyStandard3DBlockShape: VkBool32 = 1
                residencyAlignedMipSize: VkBool32 = 0
                residencyNonResidentStrict: VkBool32 = 1
        pNext: VkPhysicalDeviceSubgroupProperties = 0x55e090853610:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES (1000094000)
            pNext:                     void* = NULL
            subgroupSize:           uint32_t = 64
            supportedStages: VkShaderStageFlags = 255 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT | VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT | VK_SHADER_STAGE_GEOMETRY_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT | VK_SHADER_STAGE_TASK_BIT_EXT | VK_SHADER_STAGE_MESH_BIT_EXT)
            supportedOperations: VkSubgroupFeatureFlags = 255 (VK_SUBGROUP_FEATURE_BASIC_BIT | VK_SUBGROUP_FEATURE_VOTE_BIT | VK_SUBGROUP_FEATURE_ARITHMETIC_BIT | VK_SUBGROUP_FEATURE_BALLOT_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT | VK_SUBGROUP_FEATURE_CLUSTERED_BIT | VK_SUBGROUP_FEATURE_QUAD_BIT)
            quadOperationsInAllStages: VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pQueueFamilyPropertyCount: uint32_t* = 2
    pQueueFamilyProperties: VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pQueueFamilyPropertyCount: uint32_t* = 2
    pQueueFamilyProperties: VkQueueFamilyProperties* = 0x55e0906caf20
        pQueueFamilyProperties[0]: VkQueueFamilyProperties = 0x55e0906caf20:
            queueFlags:         VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:             uint32_t = 1
            timestampValidBits:     uint32_t = 64
            minImageTransferGranularity: VkExtent3D = 0x55e0906caf2c:
                width:                  uint32_t = 1
                height:                 uint32_t = 1
                depth:                  uint32_t = 1
        pQueueFamilyProperties[1]: VkQueueFamilyProperties = 0x55e0906caf38:
            queueFlags:         VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:             uint32_t = 4
            timestampValidBits:     uint32_t = 64
            minImageTransferGranularity: VkExtent3D = 0x55e0906caf44:
                width:                  uint32_t = 1
                height:                 uint32_t = 1
                depth:                  uint32_t = 1

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                 VkDevice = 0x55e0903eeb60
    queueFamilyIndex:       uint32_t = 0
    queueIndex:             uint32_t = 0
    pQueue:                 VkQueue* = 0x55e08faa0c10

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                 VkDevice = 0x55e0903eeb60
    queueFamilyIndex:       uint32_t = 0
    queueIndex:             uint32_t = 0
    pQueue:                 VkQueue* = 0x55e08faa0c10

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilities2KHR(physicalDevice, pSurfaceInfo, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pSurfaceInfo: const VkPhysicalDeviceSurfaceInfo2KHR* = 0x7ffe81d053c0:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR (1000119000)
        pNext:               const void* = NULL
        surface:            VkSurfaceKHR = 0x55e090304a90
    pSurfaceCapabilities: VkSurfaceCapabilities2KHR* = 0x7ffe81d05490:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR (1000119001)
        pNext:                     void* = NULL
        surfaceCapabilities: VkSurfaceCapabilitiesKHR = 0x7ffe81d054a0:
            minImageCount:          uint32_t = 3
            maxImageCount:          uint32_t = 0
            currentExtent:        VkExtent2D = 0x7ffe81d054a8:
                width:                  uint32_t = 800
                height:                 uint32_t = 600
            minImageExtent:       VkExtent2D = 0x7ffe81d054b0:
                width:                  uint32_t = 800
                height:                 uint32_t = 600
            maxImageExtent:       VkExtent2D = 0x7ffe81d054b8:
                width:                  uint32_t = 800
                height:                 uint32_t = 600
            maxImageArrayLayers:    uint32_t = 1
            supportedTransforms: VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
            currentTransform: VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
            supportedCompositeAlpha: VkCompositeAlphaFlagsKHR = 9 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR | VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR)
            supportedUsageFlags: VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormats2KHR(physicalDevice, pSurfaceInfo, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pSurfaceInfo: const VkPhysicalDeviceSurfaceInfo2KHR* = 0x7ffe81d05208:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR (1000119000)
        pNext:               const void* = NULL
        surface:            VkSurfaceKHR = 0x55e090304a90
    pSurfaceFormatCount:   uint32_t* = 2
    pSurfaceFormats: VkSurfaceFormat2KHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormats2KHR(physicalDevice, pSurfaceInfo, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pSurfaceInfo: const VkPhysicalDeviceSurfaceInfo2KHR* = 0x7ffe81d05208:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR (1000119000)
        pNext:               const void* = NULL
        surface:            VkSurfaceKHR = 0x55e090304a90
    pSurfaceFormatCount:   uint32_t* = 2
    pSurfaceFormats: VkSurfaceFormat2KHR* = 0x55e09032c0b0
        pSurfaceFormats[0]: VkSurfaceFormat2KHR = 0x55e09032c0b0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR (1000119002)
            pNext:                     void* = NULL
            surfaceFormat: VkSurfaceFormatKHR = 0x55e09032c0c0:
                format:                 VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
                colorSpace:      VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        pSurfaceFormats[1]: VkSurfaceFormat2KHR = 0x55e09032c0c8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR (1000119002)
            pNext:                     void* = NULL
            surfaceFormat: VkSurfaceFormatKHR = 0x55e09032c0d8:
                format:                 VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
                colorSpace:      VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilities2KHR(physicalDevice, pSurfaceInfo, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pSurfaceInfo: const VkPhysicalDeviceSurfaceInfo2KHR* = 0x7ffe81d03700:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR (1000119000)
        pNext:               const void* = NULL
        surface:            VkSurfaceKHR = 0x55e090304a90
    pSurfaceCapabilities: VkSurfaceCapabilities2KHR* = 0x7ffe81d037d0:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR (1000119001)
        pNext:                     void* = NULL
        surfaceCapabilities: VkSurfaceCapabilitiesKHR = 0x7ffe81d037e0:
            minImageCount:          uint32_t = 3
            maxImageCount:          uint32_t = 0
            currentExtent:        VkExtent2D = 0x7ffe81d037e8:
                width:                  uint32_t = 800
                height:                 uint32_t = 600
            minImageExtent:       VkExtent2D = 0x7ffe81d037f0:
                width:                  uint32_t = 800
                height:                 uint32_t = 600
            maxImageExtent:       VkExtent2D = 0x7ffe81d037f8:
                width:                  uint32_t = 800
                height:                 uint32_t = 600
            maxImageArrayLayers:    uint32_t = 1
            supportedTransforms: VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
            currentTransform: VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
            supportedCompositeAlpha: VkCompositeAlphaFlagsKHR = 9 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR | VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR)
            supportedUsageFlags: VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    surface:            VkSurfaceKHR = 0x55e090304a90
    pPresentModeCount:     uint32_t* = 4
    pPresentModes: VkPresentModeKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    surface:            VkSurfaceKHR = 0x55e090304a90
    pPresentModeCount:     uint32_t* = 4
    pPresentModes: VkPresentModeKHR* = 0x55e09032a080
        pPresentModes[0]: VkPresentModeKHR = VK_PRESENT_MODE_IMMEDIATE_KHR (0)
        pPresentModes[1]: VkPresentModeKHR = VK_PRESENT_MODE_MAILBOX_KHR (1)
        pPresentModes[2]: VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
        pPresentModes[3]: VkPresentModeKHR = VK_PRESENT_MODE_FIFO_RELAXED_KHR (3)

Thread 0, Frame 0:
vkGetPhysicalDeviceImageFormatProperties2KHR(physicalDevice, pImageFormatInfo, pImageFormatProperties) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pImageFormatInfo: const VkPhysicalDeviceImageFormatInfo2* = 0x7ffe81d03270:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 (1000059004)
        pNext:               const void* = VkImageStencilUsageCreateInfo
        format:                 VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
        type:                VkImageType = VK_IMAGE_TYPE_2D (1)
        tiling:            VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:         VkImageUsageFlags = 18 (VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
        flags:        VkImageCreateFlags = 0
        pNext: VkImageStencilUsageCreateInfo = 0x7ffe81d03308:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO (1000246000)
            pNext:               const void* = NULL
            stencilUsage:  VkImageUsageFlags = 18 (VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
    pImageFormatProperties: VkImageFormatProperties2* = 0x7ffe81d033b0:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 (1000059003)
        pNext:                     void* = NULL
        imageFormatProperties: VkImageFormatProperties = 0x7ffe81d033c0:
            maxExtent:            VkExtent3D = 0x7ffe81d033c0:
                width:                  uint32_t = 16384
                height:                 uint32_t = 16384
                depth:                  uint32_t = 1
            maxMipLevels:           uint32_t = 15
            maxArrayLayers:         uint32_t = 8192
            sampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxResourceSize:    VkDeviceSize = 4294967295

Thread 0, Frame 0:
vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, pSwapchain) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkSwapchainCreateInfoKHR* = 0x7ffe81d04e58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR (1000001000)
        pNext:               const void* = NULL
        flags: VkSwapchainCreateFlagsKHR = 0
        surface:            VkSurfaceKHR = 0x55e090304a90
        minImageCount:          uint32_t = 3
        imageFormat:            VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
        imageColorSpace: VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        imageExtent:          VkExtent2D = 0x7ffe81d04e84:
            width:                  uint32_t = 800
            height:                 uint32_t = 600
        imageArrayLayers:       uint32_t = 1
        imageUsage:    VkImageUsageFlags = 18 (VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
        imageSharingMode:  VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:  uint32_t = 0
        pQueueFamilyIndices: const uint32_t* = UNUSED
        preTransform: VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        compositeAlpha: VkCompositeAlphaFlagBitsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        presentMode:    VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
        clipped:                VkBool32 = 1
        oldSwapchain:     VkSwapchainKHR = 0
    pAllocator: const VkAllocationCallbacks* = NULL
    pSwapchain:      VkSwapchainKHR* = 0x55e09092ef40

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e09092ef40
    pSwapchainImageCount:  uint32_t* = 3
    pSwapchainImages:       VkImage* = NULL

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e09092ef40
    pSwapchainImageCount:  uint32_t* = 3
    pSwapchainImages:       VkImage* = 0x55e0906fe080
        pSwapchainImages[0]:     VkImage = 0x55e09092f550
        pSwapchainImages[1]:     VkImage = 0x55e0906e1700
        pSwapchainImages[2]:     VkImage = 0x55e0906e1bd0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81d04a70:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81d04a80:
            linearTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 16 (VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT)
        pNext:       VkFormatProperties3 = 0x7ffe81d04ab0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6442450960 (VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81d04a70:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81d04a80:
            linearTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 16 (VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT)
        pNext:       VkFormatProperties3 = 0x7ffe81d04ab0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6442450960 (VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81d04a70:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81d04a80:
            linearTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 16 (VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT)
        pNext:       VkFormatProperties3 = 0x7ffe81d04ab0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6442450960 (VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2KHR(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81d03898:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81d038a8:
            linearTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 16 (VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT)
        pNext:       VkFormatProperties3 = 0x7ffe81d038c0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6442450960 (VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2KHR(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81d01278:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81d01288:
            linearTilingFeatures: VkFormatFeatureFlags = 56707 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56707 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 88 (VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT)
        pNext:       VkFormatProperties3 = 0x7ffe81d012a0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 6442507651 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 6442507651 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6442451032 (VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkImageCreateInfo* = 0x7ffe81d034c8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:               const void* = NULL
        flags:        VkImageCreateFlags = 0
        imageType:           VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                 VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        extent:               VkExtent3D = 0x7ffe81d034e4:
            width:                  uint32_t = 1000
            height:                 uint32_t = 1000
            depth:                  uint32_t = 1
        mipLevels:              uint32_t = 1
        arrayLayers:            uint32_t = 1
        samples:   VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:            VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:         VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)
        sharingMode:       VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:  uint32_t = 0
        pQueueFamilyIndices: const uint32_t* = UNUSED
        initialLayout:     VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator: const VkAllocationCallbacks* = NULL
    pImage:                 VkImage* = 0x55e090971980

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81d03160:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81d03170:
            linearTilingFeatures: VkFormatFeatureFlags = 56707 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56707 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 88 (VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT)
        pNext:       VkFormatProperties3 = 0x7ffe81d031a0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 6442507651 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 6442507651 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6442451032 (VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)

Thread 0, Frame 0:
vkGetImageMemoryRequirements(device, image, pMemoryRequirements) returns void:
    device:                 VkDevice = 0x55e0903eeb60
    image:                   VkImage = 0x55e090971980
    pMemoryRequirements: VkMemoryRequirements* = 0x55e090972000:
        size:               VkDeviceSize = 4210688
        alignment:          VkDeviceSize = 65536
        memoryTypeBits:         uint32_t = 509

Thread 0, Frame 0:
vkGetImageMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                 VkDevice = 0x55e0903eeb60
    pInfo: const VkImageMemoryRequirementsInfo2* = 0x7ffe81d02c48:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 (1000146001)
        pNext:               const void* = NULL
        image:                   VkImage = 0x55e090971980
    pMemoryRequirements: VkMemoryRequirements2* = 0x7ffe81d02ce8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:               const void* = VkMemoryDedicatedRequirements
        memoryRequirements: VkMemoryRequirements = 0x7ffe81d02cf8:
            size:               VkDeviceSize = 4210688
            alignment:          VkDeviceSize = 65536
            memoryTypeBits:         uint32_t = 509
        pNext: VkMemoryDedicatedRequirements = 0x7ffe81d02d18:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS (1000127000)
            pNext:                     void* = NULL
            prefersDedicatedAllocation: VkBool32 = 0
            requiresDedicatedAllocation: VkBool32 = 0

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pAllocateInfo: const VkMemoryAllocateInfo* = 0x7ffe81d02bd0:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:               const void* = NULL
        allocationSize:     VkDeviceSize = 268435456
        memoryTypeIndex:        uint32_t = 0
    pAllocator: const VkAllocationCallbacks* = NULL
    pMemory:         VkDeviceMemory* = 0x55e0909b99d0

Thread 0, Frame 0:
vkBindImageMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    bindInfoCount:          uint32_t = 1
    pBindInfos: const VkBindImageMemoryInfo* = 0x7ffe81d02e60
        pBindInfos[0]: const VkBindImageMemoryInfo = 0x7ffe81d02e60:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO (1000157001)
            pNext:               const void* = NULL
            image:                   VkImage = 0x55e090971980
            memory:           VkDeviceMemory = 0x55e0909b99d0
            memoryOffset:       VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkImageViewCreateInfo* = 0x7ffe81d05430:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:               const void* = NULL
        flags:    VkImageViewCreateFlags = 0
        image:                   VkImage = 0x55e090971980
        viewType:        VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                 VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
        components:   VkComponentMapping = 0x7ffe81d05458:
            r:            VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:            VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:            VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:            VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange: VkImageSubresourceRange = 0x7ffe81d05468:
            aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:           uint32_t = 0
            levelCount:             uint32_t = 1
            baseArrayLayer:         uint32_t = 0
            layerCount:             uint32_t = 1
    pAllocator: const VkAllocationCallbacks* = NULL
    pView:              VkImageView* = 0x55e090304be0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81d05010:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81d05020:
            linearTilingFeatures: VkFormatFeatureFlags = 56707 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56707 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 88 (VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT)
        pNext:       VkFormatProperties3 = 0x7ffe81d05050:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 6442507651 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 6442507651 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6442451032 (VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkBufferCreateInfo* = 0x7ffe81d042d0:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:               const void* = NULL
        flags:       VkBufferCreateFlags = 0
        size:               VkDeviceSize = 24
        usage:        VkBufferUsageFlags = 128 (VK_BUFFER_USAGE_VERTEX_BUFFER_BIT)
        sharingMode:       VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:  uint32_t = 0
        pQueueFamilyIndices: const uint32_t* = UNUSED
    pAllocator: const VkAllocationCallbacks* = NULL
    pBuffer:               VkBuffer* = 0x55e0902fb900

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                 VkDevice = 0x55e0903eeb60
    buffer:                 VkBuffer = 0x55e0902fb900
    pMemoryRequirements: VkMemoryRequirements* = 0x55e090974128:
        size:               VkDeviceSize = 32
        alignment:          VkDeviceSize = 16
        memoryTypeBits:         uint32_t = 509

Thread 0, Frame 0:
vkGetBufferMemoryRequirements2(device, pInfo, pMemoryRequirements) returns void:
    device:                 VkDevice = 0x55e0903eeb60
    pInfo: const VkBufferMemoryRequirementsInfo2* = 0x7ffe81d04038:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 (1000146000)
        pNext:               const void* = NULL
        buffer:                 VkBuffer = 0x55e0902fb900
    pMemoryRequirements: VkMemoryRequirements2* = 0x7ffe81d04068:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 (1000146003)
        pNext:               const void* = VkMemoryDedicatedRequirements
        memoryRequirements: VkMemoryRequirements = 0x7ffe81d04078:
            size:               VkDeviceSize = 32
            alignment:          VkDeviceSize = 16
            memoryTypeBits:         uint32_t = 509
        pNext: VkMemoryDedicatedRequirements = 0x7ffe81d04098:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS (1000127000)
            pNext:                     void* = NULL
            prefersDedicatedAllocation: VkBool32 = 0
            requiresDedicatedAllocation: VkBool32 = 0

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pAllocateInfo: const VkMemoryAllocateInfo* = 0x7ffe81d03660:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:               const void* = NULL
        allocationSize:     VkDeviceSize = 268435456
        memoryTypeIndex:        uint32_t = 3
    pAllocator: const VkAllocationCallbacks* = NULL
    pMemory:         VkDeviceMemory* = 0x55e09032c490

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    memory:           VkDeviceMemory = 0x55e09032c490
    offset:             VkDeviceSize = 0
    size:               VkDeviceSize = 18446744073709551615
    flags:          VkMemoryMapFlags = 0
    ppData:                   void** = 0x7f8fa0000000

Thread 0, Frame 0:
vkBindBufferMemory2(device, bindInfoCount, pBindInfos) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    bindInfoCount:          uint32_t = 1
    pBindInfos: const VkBindBufferMemoryInfo* = 0x7ffe81d04550
        pBindInfos[0]: const VkBindBufferMemoryInfo = 0x7ffe81d04550:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO (1000157000)
            pNext:               const void* = NULL
            buffer:                 VkBuffer = 0x55e0902fb900
            memory:           VkDeviceMemory = 0x55e09032c490
            memoryOffset:       VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkShaderModuleCreateInfo* = 0x7ffe81d04c18:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:               const void* = NULL
        flags: VkShaderModuleCreateFlags = 0
        codeSize:                 size_t = 896
        pCode:           const uint32_t* = SHADER DATA
    pAllocator: const VkAllocationCallbacks* = NULL
    pShaderModule:   VkShaderModule* = 0x55e08fab20d0

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkShaderModuleCreateInfo* = 0x7ffe81d04c18:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:               const void* = NULL
        flags: VkShaderModuleCreateFlags = 0
        codeSize:                 size_t = 420
        pCode:           const uint32_t* = SHADER DATA
    pAllocator: const VkAllocationCallbacks* = NULL
    pShaderModule:   VkShaderModule* = 0x55e09035d760

Thread 0, Frame 0:
vkCreateRenderPass2(device, pCreateInfo, pAllocator, pRenderPass) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkRenderPassCreateInfo2* = 0x7ffe81d052a8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2 (1000109004)
        pNext:               const void* = NULL
        flags:   VkRenderPassCreateFlags = 0
        attachmentCount:        uint32_t = 1
        pAttachments: const VkAttachmentDescription2* = 0x7ffe81d04b08
            pAttachments[0]: const VkAttachmentDescription2 = 0x7ffe81d04b08:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2 (1000109000)
                pNext:               const void* = NULL
                flags: VkAttachmentDescriptionFlags = 0
                format:                 VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
                samples:   VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                loadOp:       VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_CLEAR (1)
                storeOp:     VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
                stencilLoadOp: VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_CLEAR (1)
                stencilStoreOp: VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
                initialLayout:     VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                finalLayout:       VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
        subpassCount:           uint32_t = 1
        pSubpasses: const VkSubpassDescription2* = 0x7ffe81d04da8
            pSubpasses[0]: const VkSubpassDescription2 = 0x7ffe81d04da8:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2 (1000109002)
                pNext:               const void* = NULL
                flags: VkSubpassDescriptionFlags = 0
                pipelineBindPoint: VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
                viewMask:               uint32_t = 0
                inputAttachmentCount:   uint32_t = 0
                pInputAttachments: const VkAttachmentReference2* = NULL
                colorAttachmentCount:   uint32_t = 1
                pColorAttachments: const VkAttachmentReference2* = 0x7ffe81d04bf8
                    pColorAttachments[0]: const VkAttachmentReference2 = 0x7ffe81d04bf8:
                        sType:           VkStructureType = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2 (1000109001)
                        pNext:               const void* = NULL
                        attachment:             uint32_t = 0
                        layout:            VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                        aspectMask:   VkImageAspectFlags = 0 (VK_IMAGE_ASPECT_NONE)
                pResolveAttachments: const VkAttachmentReference2* = NULL
                pDepthStencilAttachment: const VkAttachmentReference2* = NULL
                preserveAttachmentCount: uint32_t = 0
                pPreserveAttachments: const uint32_t* = NULL
        dependencyCount:        uint32_t = 0
        pDependencies: const VkSubpassDependency2* = NULL
        correlatedViewMaskCount: uint32_t = 0
        pCorrelatedViewMasks: const uint32_t* = 0x4
    pAllocator: const VkAllocationCallbacks* = NULL
    pRenderPass:       VkRenderPass* = 0x55e09035d270

Thread 0, Frame 0:
vkGetRenderAreaGranularity(device, renderPass, pGranularity) returns void:
    device:                 VkDevice = 0x55e0903eeb60
    renderPass:         VkRenderPass = 0x55e09035d270
    pGranularity:        VkExtent2D* = 0x7ffe81d04c40:
        width:                  uint32_t = 1
        height:                 uint32_t = 1

Thread 0, Frame 0:
vkCreatePipelineLayout(device, pCreateInfo, pAllocator, pPipelineLayout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkPipelineLayoutCreateInfo* = 0x7ffe81d04328:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO (30)
        pNext:               const void* = NULL
        flags: VkPipelineLayoutCreateFlags = 0
        setLayoutCount:         uint32_t = 0
        pSetLayouts: const VkDescriptorSetLayout* = 0x7ffe81d044c8
        pushConstantRangeCount: uint32_t = 0
        pPushConstantRanges: const VkPushConstantRange* = 0x7ffe81d044f4
    pAllocator: const VkAllocationCallbacks* = NULL
    pPipelineLayout: VkPipelineLayout* = 0x55e0909f0db0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2KHR(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_R32G32_SFLOAT (103)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81cfb018:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81cfb028:
            linearTilingFeatures: VkFormatFeatureFlags = 56707 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56707 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 536871000 (VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT | VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR)
        pNext:       VkFormatProperties3 = 0x7ffe81cfb040:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 6442507651 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 6442507651 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6979321944 (VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR)

Thread 0, Frame 0:
vkCreateGraphicsPipelines(device, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pipelineCache:   VkPipelineCache = 0
    createInfoCount:        uint32_t = 1
    pCreateInfos: const VkGraphicsPipelineCreateInfo* = 0x7ffe81d02ce0
        pCreateInfos[0]: const VkGraphicsPipelineCreateInfo = 0x7ffe81d02ce0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO (28)
            pNext:               const void* = NULL
            flags:     VkPipelineCreateFlags = 0
            stageCount:             uint32_t = 2
            pStages: const VkPipelineShaderStageCreateInfo* = 0x7ffe81d00eb0
                pStages[0]: const VkPipelineShaderStageCreateInfo = 0x7ffe81d00eb0:
                    sType:           VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:               const void* = NULL
                    flags: VkPipelineShaderStageCreateFlags = 0
                    stage:     VkShaderStageFlagBits = 1 (VK_SHADER_STAGE_VERTEX_BIT)
                    module:           VkShaderModule = 0x55e08fab20d0
                    pName:               const char* = "main"
                    pSpecializationInfo: const VkSpecializationInfo* = 0x7ffe81d01460:
                        mapEntryCount:          uint32_t = 0
                        pMapEntries: const VkSpecializationMapEntry* = 0x55e08e365790
                        dataSize:                 size_t = 0
                        pData:               const void* = 0x7ffe81d054b8
                pStages[1]: const VkPipelineShaderStageCreateInfo = 0x7ffe81d00ee0:
                    sType:           VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:               const void* = NULL
                    flags: VkPipelineShaderStageCreateFlags = 0
                    stage:     VkShaderStageFlagBits = 16 (VK_SHADER_STAGE_FRAGMENT_BIT)
                    module:           VkShaderModule = 0x55e09035d760
                    pName:               const char* = "main"
                    pSpecializationInfo: const VkSpecializationInfo* = 0x7ffe81d02260:
                        mapEntryCount:          uint32_t = 0
                        pMapEntries: const VkSpecializationMapEntry* = 0x55e08e365790
                        dataSize:                 size_t = 0
                        pData:               const void* = 0x7ffe81d05538
            pVertexInputState: const VkPipelineVertexInputStateCreateInfo* = 0x7ffe81d011d8:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO (19)
                pNext:               const void* = NULL
                flags: VkPipelineVertexInputStateCreateFlags = 0
                vertexBindingDescriptionCount: uint32_t = 1
                pVertexBindingDescriptions: const VkVertexInputBindingDescription* = 0x7ffe81d01064
                    pVertexBindingDescriptions[0]: const VkVertexInputBindingDescription = 0x7ffe81d01064:
                        binding:                uint32_t = 0
                        stride:                 uint32_t = 8
                        inputRate:     VkVertexInputRate = VK_VERTEX_INPUT_RATE_VERTEX (0)
                vertexAttributeDescriptionCount: uint32_t = 1
                pVertexAttributeDescriptions: const VkVertexInputAttributeDescription* = 0x7ffe81d010d4
                    pVertexAttributeDescriptions[0]: const VkVertexInputAttributeDescription = 0x7ffe81d010d4:
                        location:               uint32_t = 0
                        binding:                uint32_t = 0
                        format:                 VkFormat = VK_FORMAT_R32G32_SFLOAT (103)
                        offset:                 uint32_t = 0
            pInputAssemblyState: const VkPipelineInputAssemblyStateCreateInfo* = 0x7ffe81d01210:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO (20)
                pNext:               const void* = NULL
                flags: VkPipelineInputAssemblyStateCreateFlags = 0
                topology:    VkPrimitiveTopology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST (3)
                primitiveRestartEnable: VkBool32 = 0
            pTessellationState: const VkPipelineTessellationStateCreateInfo* = NULL
            pViewportState: const VkPipelineViewportStateCreateInfo* = 0x7ffe81d01590:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO (22)
                pNext:               const void* = NULL
                flags: VkPipelineViewportStateCreateFlags = 0
                viewportCount:          uint32_t = 1
                pViewports:    const VkViewport* = UNUSED
                scissorCount:           uint32_t = 1
                pScissors:       const VkRect2D* = 0x7ffe81d01564
                    pScissors[0]:     const VkRect2D = 0x7ffe81d01564:
                        offset:               VkOffset2D = 0x7ffe81d01564:
                            x:                       int32_t = 0
                            y:                       int32_t = 0
                        extent:               VkExtent2D = 0x7ffe81d0156c:
                            width:                  uint32_t = 2147483647
                            height:                 uint32_t = 2147483647
            pRasterizationState: const VkPipelineRasterizationStateCreateInfo* = 0x7ffe81d015f0:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO (23)
                pNext:               const void* = NULL
                flags: VkPipelineRasterizationStateCreateFlags = 0
                depthClampEnable:       VkBool32 = 0
                rasterizerDiscardEnable: VkBool32 = 0
                polygonMode:       VkPolygonMode = VK_POLYGON_MODE_FILL (0)
                cullMode:        VkCullModeFlags = 0 (VK_CULL_MODE_NONE)
                frontFace:           VkFrontFace = VK_FRONT_FACE_COUNTER_CLOCKWISE (0)
                depthBiasEnable:        VkBool32 = 0
                depthBiasConstantFactor:   float = 0
                depthBiasClamp:            float = 0
                depthBiasSlopeFactor:      float = 0
                lineWidth:                 float = 1
            pMultisampleState: const VkPipelineMultisampleStateCreateInfo* = 0x7ffe81d028e0:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO (24)
                pNext:               const void* = NULL
                flags: VkPipelineMultisampleStateCreateFlags = 0
                rasterizationSamples: VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                sampleShadingEnable:    VkBool32 = 0
                minSampleShading:          float = 0
                pSampleMask: const VkSampleMask* = 0x7ffe81d05644
                    pSampleMask[0]: const VkSampleMask = 4294967295
                alphaToCoverageEnable:  VkBool32 = 0
                alphaToOneEnable:       VkBool32 = 0
            pDepthStencilState: const VkPipelineDepthStencilStateCreateInfo* = NULL
            pColorBlendState: const VkPipelineColorBlendStateCreateInfo* = 0x7ffe81d029f0:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO (26)
                pNext:               const void* = NULL
                flags: VkPipelineColorBlendStateCreateFlags = 0
                logicOpEnable:          VkBool32 = 0
                logicOp:               VkLogicOp = VK_LOGIC_OP_CLEAR (0)
                attachmentCount:        uint32_t = 1
                pAttachments: const VkPipelineColorBlendAttachmentState* = 0x7ffe81d0291c
                    pAttachments[0]: const VkPipelineColorBlendAttachmentState = 0x7ffe81d0291c:
                        blendEnable:            VkBool32 = 0
                        srcColorBlendFactor: VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstColorBlendFactor: VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        colorBlendOp:          VkBlendOp = VK_BLEND_OP_ADD (0)
                        srcAlphaBlendFactor: VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstAlphaBlendFactor: VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        alphaBlendOp:          VkBlendOp = VK_BLEND_OP_ADD (0)
                        colorWriteMask: VkColorComponentFlags = 15 (VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT)
                blendConstants:         float[4] = 0x7ffe81d02a18
                    blendConstants[0]:         float = 0
                    blendConstants[1]:         float = 0
                    blendConstants[2]:         float = 0
                    blendConstants[3]:         float = 0
            pDynamicState: const VkPipelineDynamicStateCreateInfo* = 0x7ffe81d02c08:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO (27)
                pNext:               const void* = NULL
                flags: VkPipelineDynamicStateCreateFlags = 0
                dynamicStateCount:      uint32_t = 1
                pDynamicStates: const VkDynamicState* = 0x7ffe81d02bec
                    pDynamicStates[0]: const VkDynamicState = VK_DYNAMIC_STATE_VIEWPORT (0)
            layout:         VkPipelineLayout = 0x55e0909f0db0
            renderPass:         VkRenderPass = 0x55e09035d270
            subpass:                uint32_t = 0
            basePipelineHandle:   VkPipeline = 0
            basePipelineIndex:       int32_t = -1
    pAllocator: const VkAllocationCallbacks* = NULL
    pPipelines:          VkPipeline* = 0x7ffe81d02e28
        pPipelines[0]:        VkPipeline = 0x55e0909f1f40

Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkFramebufferCreateInfo* = 0x7ffe81d05808:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:               const void* = NULL
        flags:  VkFramebufferCreateFlags = 0
        renderPass:         VkRenderPass = 0x55e09035d270
        attachmentCount:        uint32_t = 1
        pAttachments: const VkImageView* = 0x7ffe81d055b0
            pAttachments[0]: const VkImageView = 0x55e090304be0
        width:                  uint32_t = 1000
        height:                 uint32_t = 1000
        layers:                 uint32_t = 1
    pAllocator: const VkAllocationCallbacks* = NULL
    pFramebuffer:     VkFramebuffer* = 0x55e0909f2b30

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkCommandPoolCreateInfo* = 0x7ffe81cfd200:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
        pNext:               const void* = NULL
        flags:  VkCommandPoolCreateFlags = 0
        queueFamilyIndex:       uint32_t = 0
    pAllocator: const VkAllocationCallbacks* = NULL
    pCommandPool:     VkCommandPool* = 0x55e090337490

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pAllocateInfo: const VkCommandBufferAllocateInfo* = 0x7ffe81cfd2c8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:               const void* = NULL
        commandPool:       VkCommandPool = 0x55e090337490
        level:      VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:     uint32_t = 256
    pCommandBuffers: VkCommandBuffer* = 0x55e0907b6e60
        pCommandBuffers[0]: VkCommandBuffer = 0x55e090843a30
        pCommandBuffers[1]: VkCommandBuffer = 0x55e090846f80
        pCommandBuffers[2]: VkCommandBuffer = 0x55e0907cb560
        pCommandBuffers[3]: VkCommandBuffer = 0x55e0907cfb60
        pCommandBuffers[4]: VkCommandBuffer = 0x55e0909bab00
        pCommandBuffers[5]: VkCommandBuffer = 0x55e0906aafb0
        pCommandBuffers[6]: VkCommandBuffer = 0x55e0906ae500
        pCommandBuffers[7]: VkCommandBuffer = 0x55e0907d5480
        pCommandBuffers[8]: VkCommandBuffer = 0x55e0907d89d0
        pCommandBuffers[9]: VkCommandBuffer = 0x55e09097c7d0
        pCommandBuffers[10]: VkCommandBuffer = 0x55e090980dd0
        pCommandBuffers[11]: VkCommandBuffer = 0x55e0903385f0
        pCommandBuffers[12]: VkCommandBuffer = 0x55e0904d1780
        pCommandBuffers[13]: VkCommandBuffer = 0x55e0904d4cd0
        pCommandBuffers[14]: VkCommandBuffer = 0x55e0904d8220
        pCommandBuffers[15]: VkCommandBuffer = 0x55e0904dc820
        pCommandBuffers[16]: VkCommandBuffer = 0x55e090a520c0
        pCommandBuffers[17]: VkCommandBuffer = 0x55e090a566c0
        pCommandBuffers[18]: VkCommandBuffer = 0x55e090a5acc0
        pCommandBuffers[19]: VkCommandBuffer = 0x55e090a5f2c0
        pCommandBuffers[20]: VkCommandBuffer = 0x55e090a638c0
        pCommandBuffers[21]: VkCommandBuffer = 0x55e090a67ec0
        pCommandBuffers[22]: VkCommandBuffer = 0x55e090a6c4c0
        pCommandBuffers[23]: VkCommandBuffer = 0x55e090a70ac0
        pCommandBuffers[24]: VkCommandBuffer = 0x55e090a750c0
        pCommandBuffers[25]: VkCommandBuffer = 0x55e090a796c0
        pCommandBuffers[26]: VkCommandBuffer = 0x55e090a7dcc0
        pCommandBuffers[27]: VkCommandBuffer = 0x55e090a822c0
        pCommandBuffers[28]: VkCommandBuffer = 0x55e090a868c0
        pCommandBuffers[29]: VkCommandBuffer = 0x55e090a8aec0
        pCommandBuffers[30]: VkCommandBuffer = 0x55e090a8f4c0
        pCommandBuffers[31]: VkCommandBuffer = 0x55e090a93ac0
        pCommandBuffers[32]: VkCommandBuffer = 0x55e090a980c0
        pCommandBuffers[33]: VkCommandBuffer = 0x55e090a9c6c0
        pCommandBuffers[34]: VkCommandBuffer = 0x55e090aa0cc0
        pCommandBuffers[35]: VkCommandBuffer = 0x55e090aa52c0
        pCommandBuffers[36]: VkCommandBuffer = 0x55e090aa98c0
        pCommandBuffers[37]: VkCommandBuffer = 0x55e090aadec0
        pCommandBuffers[38]: VkCommandBuffer = 0x55e090ab24c0
        pCommandBuffers[39]: VkCommandBuffer = 0x55e090ab6ac0
        pCommandBuffers[40]: VkCommandBuffer = 0x55e090abb0c0
        pCommandBuffers[41]: VkCommandBuffer = 0x55e090abf6c0
        pCommandBuffers[42]: VkCommandBuffer = 0x55e090ac3cc0
        pCommandBuffers[43]: VkCommandBuffer = 0x55e090ac82c0
        pCommandBuffers[44]: VkCommandBuffer = 0x55e090acc8c0
        pCommandBuffers[45]: VkCommandBuffer = 0x55e090ad0ec0
        pCommandBuffers[46]: VkCommandBuffer = 0x55e090ad54c0
        pCommandBuffers[47]: VkCommandBuffer = 0x55e090ad9ac0
        pCommandBuffers[48]: VkCommandBuffer = 0x55e090ade0c0
        pCommandBuffers[49]: VkCommandBuffer = 0x55e090ae26c0
        pCommandBuffers[50]: VkCommandBuffer = 0x55e090ae6cc0
        pCommandBuffers[51]: VkCommandBuffer = 0x55e090aeb2c0
        pCommandBuffers[52]: VkCommandBuffer = 0x55e090aef8c0
        pCommandBuffers[53]: VkCommandBuffer = 0x55e090af3ec0
        pCommandBuffers[54]: VkCommandBuffer = 0x55e090af84c0
        pCommandBuffers[55]: VkCommandBuffer = 0x55e090afcac0
        pCommandBuffers[56]: VkCommandBuffer = 0x55e090b010c0
        pCommandBuffers[57]: VkCommandBuffer = 0x55e090b056c0
        pCommandBuffers[58]: VkCommandBuffer = 0x55e090b09cc0
        pCommandBuffers[59]: VkCommandBuffer = 0x55e090b0e2c0
        pCommandBuffers[60]: VkCommandBuffer = 0x55e090b12940
        pCommandBuffers[61]: VkCommandBuffer = 0x55e090b17040
        pCommandBuffers[62]: VkCommandBuffer = 0x55e090b1b740
        pCommandBuffers[63]: VkCommandBuffer = 0x55e090b1fe40
        pCommandBuffers[64]: VkCommandBuffer = 0x55e090b24540
        pCommandBuffers[65]: VkCommandBuffer = 0x55e090b28c40
        pCommandBuffers[66]: VkCommandBuffer = 0x55e090b2d340
        pCommandBuffers[67]: VkCommandBuffer = 0x55e090b31a40
        pCommandBuffers[68]: VkCommandBuffer = 0x55e090b36140
        pCommandBuffers[69]: VkCommandBuffer = 0x55e090b3a840
        pCommandBuffers[70]: VkCommandBuffer = 0x55e090b3ef40
        pCommandBuffers[71]: VkCommandBuffer = 0x55e090b43640
        pCommandBuffers[72]: VkCommandBuffer = 0x55e090b47d40
        pCommandBuffers[73]: VkCommandBuffer = 0x55e090b4c440
        pCommandBuffers[74]: VkCommandBuffer = 0x55e090b50b40
        pCommandBuffers[75]: VkCommandBuffer = 0x55e090b55240
        pCommandBuffers[76]: VkCommandBuffer = 0x55e090b59940
        pCommandBuffers[77]: VkCommandBuffer = 0x55e090b5e040
        pCommandBuffers[78]: VkCommandBuffer = 0x55e090b62740
        pCommandBuffers[79]: VkCommandBuffer = 0x55e090b66e40
        pCommandBuffers[80]: VkCommandBuffer = 0x55e090b6b540
        pCommandBuffers[81]: VkCommandBuffer = 0x55e090b6fc40
        pCommandBuffers[82]: VkCommandBuffer = 0x55e090b74340
        pCommandBuffers[83]: VkCommandBuffer = 0x55e090b78a40
        pCommandBuffers[84]: VkCommandBuffer = 0x55e090b7d140
        pCommandBuffers[85]: VkCommandBuffer = 0x55e090b81840
        pCommandBuffers[86]: VkCommandBuffer = 0x55e090b85f40
        pCommandBuffers[87]: VkCommandBuffer = 0x55e090b8a640
        pCommandBuffers[88]: VkCommandBuffer = 0x55e090b8ed40
        pCommandBuffers[89]: VkCommandBuffer = 0x55e090b93440
        pCommandBuffers[90]: VkCommandBuffer = 0x55e090b97b40
        pCommandBuffers[91]: VkCommandBuffer = 0x55e090b9c240
        pCommandBuffers[92]: VkCommandBuffer = 0x55e090ba0940
        pCommandBuffers[93]: VkCommandBuffer = 0x55e090ba5040
        pCommandBuffers[94]: VkCommandBuffer = 0x55e090ba9740
        pCommandBuffers[95]: VkCommandBuffer = 0x55e090bade40
        pCommandBuffers[96]: VkCommandBuffer = 0x55e090bb2540
        pCommandBuffers[97]: VkCommandBuffer = 0x55e090bb6c40
        pCommandBuffers[98]: VkCommandBuffer = 0x55e090bbb340
        pCommandBuffers[99]: VkCommandBuffer = 0x55e090bbfa40
        pCommandBuffers[100]: VkCommandBuffer = 0x55e090bc4140
        pCommandBuffers[101]: VkCommandBuffer = 0x55e090bc8840
        pCommandBuffers[102]: VkCommandBuffer = 0x55e090bccf40
        pCommandBuffers[103]: VkCommandBuffer = 0x55e090bd1640
        pCommandBuffers[104]: VkCommandBuffer = 0x55e090bd5d40
        pCommandBuffers[105]: VkCommandBuffer = 0x55e090bda440
        pCommandBuffers[106]: VkCommandBuffer = 0x55e090bdeb40
        pCommandBuffers[107]: VkCommandBuffer = 0x55e090be3240
        pCommandBuffers[108]: VkCommandBuffer = 0x55e090be7940
        pCommandBuffers[109]: VkCommandBuffer = 0x55e090bec040
        pCommandBuffers[110]: VkCommandBuffer = 0x55e090bf0740
        pCommandBuffers[111]: VkCommandBuffer = 0x55e090bf4e40
        pCommandBuffers[112]: VkCommandBuffer = 0x55e090bf9540
        pCommandBuffers[113]: VkCommandBuffer = 0x55e090bfdc40
        pCommandBuffers[114]: VkCommandBuffer = 0x55e090c02340
        pCommandBuffers[115]: VkCommandBuffer = 0x55e090c06a40
        pCommandBuffers[116]: VkCommandBuffer = 0x55e090c0b140
        pCommandBuffers[117]: VkCommandBuffer = 0x55e090c0f840
        pCommandBuffers[118]: VkCommandBuffer = 0x55e090c13f40
        pCommandBuffers[119]: VkCommandBuffer = 0x55e090c18640
        pCommandBuffers[120]: VkCommandBuffer = 0x55e090c1cd40
        pCommandBuffers[121]: VkCommandBuffer = 0x55e090c21440
        pCommandBuffers[122]: VkCommandBuffer = 0x55e090c25b40
        pCommandBuffers[123]: VkCommandBuffer = 0x55e090c2a240
        pCommandBuffers[124]: VkCommandBuffer = 0x55e090c2e940
        pCommandBuffers[125]: VkCommandBuffer = 0x55e090c33040
        pCommandBuffers[126]: VkCommandBuffer = 0x55e090c37740
        pCommandBuffers[127]: VkCommandBuffer = 0x55e090c3be40
        pCommandBuffers[128]: VkCommandBuffer = 0x55e090c40540
        pCommandBuffers[129]: VkCommandBuffer = 0x55e090c44c40
        pCommandBuffers[130]: VkCommandBuffer = 0x55e090c49340
        pCommandBuffers[131]: VkCommandBuffer = 0x55e090c4da40
        pCommandBuffers[132]: VkCommandBuffer = 0x55e090c52140
        pCommandBuffers[133]: VkCommandBuffer = 0x55e090c56840
        pCommandBuffers[134]: VkCommandBuffer = 0x55e090c5af40
        pCommandBuffers[135]: VkCommandBuffer = 0x55e090c5f640
        pCommandBuffers[136]: VkCommandBuffer = 0x55e090c63d40
        pCommandBuffers[137]: VkCommandBuffer = 0x55e090c68440
        pCommandBuffers[138]: VkCommandBuffer = 0x55e090c6cb40
        pCommandBuffers[139]: VkCommandBuffer = 0x55e090c71240
        pCommandBuffers[140]: VkCommandBuffer = 0x55e090c75940
        pCommandBuffers[141]: VkCommandBuffer = 0x55e090c7a040
        pCommandBuffers[142]: VkCommandBuffer = 0x55e090c7e740
        pCommandBuffers[143]: VkCommandBuffer = 0x55e090c82e40
        pCommandBuffers[144]: VkCommandBuffer = 0x55e090c87540
        pCommandBuffers[145]: VkCommandBuffer = 0x55e090c8bc40
        pCommandBuffers[146]: VkCommandBuffer = 0x55e090c90340
        pCommandBuffers[147]: VkCommandBuffer = 0x55e090c94a40
        pCommandBuffers[148]: VkCommandBuffer = 0x55e090c99140
        pCommandBuffers[149]: VkCommandBuffer = 0x55e090c9d840
        pCommandBuffers[150]: VkCommandBuffer = 0x55e090ca1f40
        pCommandBuffers[151]: VkCommandBuffer = 0x55e090ca6640
        pCommandBuffers[152]: VkCommandBuffer = 0x55e090caad40
        pCommandBuffers[153]: VkCommandBuffer = 0x55e090caf440
        pCommandBuffers[154]: VkCommandBuffer = 0x55e090cb3b40
        pCommandBuffers[155]: VkCommandBuffer = 0x55e090cb8240
        pCommandBuffers[156]: VkCommandBuffer = 0x55e090cbc940
        pCommandBuffers[157]: VkCommandBuffer = 0x55e090cc1040
        pCommandBuffers[158]: VkCommandBuffer = 0x55e090cc5740
        pCommandBuffers[159]: VkCommandBuffer = 0x55e090cc9e40
        pCommandBuffers[160]: VkCommandBuffer = 0x55e090cce540
        pCommandBuffers[161]: VkCommandBuffer = 0x55e090cd2c40
        pCommandBuffers[162]: VkCommandBuffer = 0x55e090cd7340
        pCommandBuffers[163]: VkCommandBuffer = 0x55e090cdba40
        pCommandBuffers[164]: VkCommandBuffer = 0x55e090ce0140
        pCommandBuffers[165]: VkCommandBuffer = 0x55e090ce4840
        pCommandBuffers[166]: VkCommandBuffer = 0x55e090ce8f40
        pCommandBuffers[167]: VkCommandBuffer = 0x55e090ced640
        pCommandBuffers[168]: VkCommandBuffer = 0x55e090cf1d40
        pCommandBuffers[169]: VkCommandBuffer = 0x55e090cf6440
        pCommandBuffers[170]: VkCommandBuffer = 0x55e090cfab40
        pCommandBuffers[171]: VkCommandBuffer = 0x55e090cff240
        pCommandBuffers[172]: VkCommandBuffer = 0x55e090d03940
        pCommandBuffers[173]: VkCommandBuffer = 0x55e090d08040
        pCommandBuffers[174]: VkCommandBuffer = 0x55e090d0c740
        pCommandBuffers[175]: VkCommandBuffer = 0x55e090d10e40
        pCommandBuffers[176]: VkCommandBuffer = 0x55e090d15540
        pCommandBuffers[177]: VkCommandBuffer = 0x55e090d19c40
        pCommandBuffers[178]: VkCommandBuffer = 0x55e090d1e340
        pCommandBuffers[179]: VkCommandBuffer = 0x55e090d22a40
        pCommandBuffers[180]: VkCommandBuffer = 0x55e090d27140
        pCommandBuffers[181]: VkCommandBuffer = 0x55e090d2b840
        pCommandBuffers[182]: VkCommandBuffer = 0x55e090d2ff40
        pCommandBuffers[183]: VkCommandBuffer = 0x55e090d34640
        pCommandBuffers[184]: VkCommandBuffer = 0x55e090d38d40
        pCommandBuffers[185]: VkCommandBuffer = 0x55e090d3d440
        pCommandBuffers[186]: VkCommandBuffer = 0x55e090d41b40
        pCommandBuffers[187]: VkCommandBuffer = 0x55e090d46240
        pCommandBuffers[188]: VkCommandBuffer = 0x55e090d4a940
        pCommandBuffers[189]: VkCommandBuffer = 0x55e090d4f040
        pCommandBuffers[190]: VkCommandBuffer = 0x55e090d53740
        pCommandBuffers[191]: VkCommandBuffer = 0x55e090d57e40
        pCommandBuffers[192]: VkCommandBuffer = 0x55e090d5c540
        pCommandBuffers[193]: VkCommandBuffer = 0x55e090d60c40
        pCommandBuffers[194]: VkCommandBuffer = 0x55e090d65340
        pCommandBuffers[195]: VkCommandBuffer = 0x55e090d69a40
        pCommandBuffers[196]: VkCommandBuffer = 0x55e090d6e140
        pCommandBuffers[197]: VkCommandBuffer = 0x55e090d72840
        pCommandBuffers[198]: VkCommandBuffer = 0x55e090d76f40
        pCommandBuffers[199]: VkCommandBuffer = 0x55e090d7b640
        pCommandBuffers[200]: VkCommandBuffer = 0x55e090d7fd40
        pCommandBuffers[201]: VkCommandBuffer = 0x55e090d84440
        pCommandBuffers[202]: VkCommandBuffer = 0x55e090d88b40
        pCommandBuffers[203]: VkCommandBuffer = 0x55e090d8d240
        pCommandBuffers[204]: VkCommandBuffer = 0x55e090d91940
        pCommandBuffers[205]: VkCommandBuffer = 0x55e090d96040
        pCommandBuffers[206]: VkCommandBuffer = 0x55e090d9a740
        pCommandBuffers[207]: VkCommandBuffer = 0x55e090d9ee40
        pCommandBuffers[208]: VkCommandBuffer = 0x55e090da3540
        pCommandBuffers[209]: VkCommandBuffer = 0x55e090da7c40
        pCommandBuffers[210]: VkCommandBuffer = 0x55e090dac340
        pCommandBuffers[211]: VkCommandBuffer = 0x55e090db0a40
        pCommandBuffers[212]: VkCommandBuffer = 0x55e090db5140
        pCommandBuffers[213]: VkCommandBuffer = 0x55e090db9840
        pCommandBuffers[214]: VkCommandBuffer = 0x55e090dbdf40
        pCommandBuffers[215]: VkCommandBuffer = 0x55e090dc2640
        pCommandBuffers[216]: VkCommandBuffer = 0x55e090dc6d40
        pCommandBuffers[217]: VkCommandBuffer = 0x55e090dcb440
        pCommandBuffers[218]: VkCommandBuffer = 0x55e090dcfb40
        pCommandBuffers[219]: VkCommandBuffer = 0x55e090dd4240
        pCommandBuffers[220]: VkCommandBuffer = 0x55e090dd8940
        pCommandBuffers[221]: VkCommandBuffer = 0x55e090ddd040
        pCommandBuffers[222]: VkCommandBuffer = 0x55e090de1740
        pCommandBuffers[223]: VkCommandBuffer = 0x55e090de5e40
        pCommandBuffers[224]: VkCommandBuffer = 0x55e090dea540
        pCommandBuffers[225]: VkCommandBuffer = 0x55e090deec40
        pCommandBuffers[226]: VkCommandBuffer = 0x55e090df3340
        pCommandBuffers[227]: VkCommandBuffer = 0x55e090df7a40
        pCommandBuffers[228]: VkCommandBuffer = 0x55e090dfc140
        pCommandBuffers[229]: VkCommandBuffer = 0x55e090e00840
        pCommandBuffers[230]: VkCommandBuffer = 0x55e090e04f40
        pCommandBuffers[231]: VkCommandBuffer = 0x55e090e09640
        pCommandBuffers[232]: VkCommandBuffer = 0x55e090e0dd40
        pCommandBuffers[233]: VkCommandBuffer = 0x55e090e12440
        pCommandBuffers[234]: VkCommandBuffer = 0x55e090e16b40
        pCommandBuffers[235]: VkCommandBuffer = 0x55e090e1b240
        pCommandBuffers[236]: VkCommandBuffer = 0x55e090e1f940
        pCommandBuffers[237]: VkCommandBuffer = 0x55e090e24040
        pCommandBuffers[238]: VkCommandBuffer = 0x55e090e28740
        pCommandBuffers[239]: VkCommandBuffer = 0x55e090e2ce40
        pCommandBuffers[240]: VkCommandBuffer = 0x55e090e31540
        pCommandBuffers[241]: VkCommandBuffer = 0x55e090e35c40
        pCommandBuffers[242]: VkCommandBuffer = 0x55e090e3a340
        pCommandBuffers[243]: VkCommandBuffer = 0x55e090e3ea40
        pCommandBuffers[244]: VkCommandBuffer = 0x55e090e43140
        pCommandBuffers[245]: VkCommandBuffer = 0x55e090e47840
        pCommandBuffers[246]: VkCommandBuffer = 0x55e090e4bf40
        pCommandBuffers[247]: VkCommandBuffer = 0x55e090e50640
        pCommandBuffers[248]: VkCommandBuffer = 0x55e090e54d40
        pCommandBuffers[249]: VkCommandBuffer = 0x55e090e59440
        pCommandBuffers[250]: VkCommandBuffer = 0x55e090e5db40
        pCommandBuffers[251]: VkCommandBuffer = 0x55e090e62240
        pCommandBuffers[252]: VkCommandBuffer = 0x55e090e66940
        pCommandBuffers[253]: VkCommandBuffer = 0x55e090e6b040
        pCommandBuffers[254]: VkCommandBuffer = 0x55e090e6f740
        pCommandBuffers[255]: VkCommandBuffer = 0x55e090e73e40

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pAllocateInfo: const VkCommandBufferAllocateInfo* = 0x7ffe81cfd2c8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:               const void* = NULL
        commandPool:       VkCommandPool = 0x55e090337490
        level:      VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_SECONDARY (1)
        commandBufferCount:     uint32_t = 256
    pCommandBuffers: VkCommandBuffer* = 0x55e0907b6e60
        pCommandBuffers[0]: VkCommandBuffer = 0x55e090f6b160
        pCommandBuffers[1]: VkCommandBuffer = 0x55e090f6f840
        pCommandBuffers[2]: VkCommandBuffer = 0x55e090f73f20
        pCommandBuffers[3]: VkCommandBuffer = 0x55e090f78600
        pCommandBuffers[4]: VkCommandBuffer = 0x55e090f7cce0
        pCommandBuffers[5]: VkCommandBuffer = 0x55e090f813e0
        pCommandBuffers[6]: VkCommandBuffer = 0x55e090f85ae0
        pCommandBuffers[7]: VkCommandBuffer = 0x55e090f8a1e0
        pCommandBuffers[8]: VkCommandBuffer = 0x55e090f8e8e0
        pCommandBuffers[9]: VkCommandBuffer = 0x55e090f92fe0
        pCommandBuffers[10]: VkCommandBuffer = 0x55e090f976e0
        pCommandBuffers[11]: VkCommandBuffer = 0x55e090f9bde0
        pCommandBuffers[12]: VkCommandBuffer = 0x55e090fa04e0
        pCommandBuffers[13]: VkCommandBuffer = 0x55e090fa4be0
        pCommandBuffers[14]: VkCommandBuffer = 0x55e090fa92e0
        pCommandBuffers[15]: VkCommandBuffer = 0x55e090fad9e0
        pCommandBuffers[16]: VkCommandBuffer = 0x55e090fb20e0
        pCommandBuffers[17]: VkCommandBuffer = 0x55e090fb67e0
        pCommandBuffers[18]: VkCommandBuffer = 0x55e090fbaee0
        pCommandBuffers[19]: VkCommandBuffer = 0x55e090fbf5e0
        pCommandBuffers[20]: VkCommandBuffer = 0x55e090fc3ce0
        pCommandBuffers[21]: VkCommandBuffer = 0x55e090fc83e0
        pCommandBuffers[22]: VkCommandBuffer = 0x55e090fccae0
        pCommandBuffers[23]: VkCommandBuffer = 0x55e090fd11e0
        pCommandBuffers[24]: VkCommandBuffer = 0x55e090fd58e0
        pCommandBuffers[25]: VkCommandBuffer = 0x55e090fd9fe0
        pCommandBuffers[26]: VkCommandBuffer = 0x55e090fde6e0
        pCommandBuffers[27]: VkCommandBuffer = 0x55e090fe2de0
        pCommandBuffers[28]: VkCommandBuffer = 0x55e090fe74e0
        pCommandBuffers[29]: VkCommandBuffer = 0x55e090febbe0
        pCommandBuffers[30]: VkCommandBuffer = 0x55e090ff02e0
        pCommandBuffers[31]: VkCommandBuffer = 0x55e090ff49e0
        pCommandBuffers[32]: VkCommandBuffer = 0x55e090ff90e0
        pCommandBuffers[33]: VkCommandBuffer = 0x55e090ffd7e0
        pCommandBuffers[34]: VkCommandBuffer = 0x55e091001ee0
        pCommandBuffers[35]: VkCommandBuffer = 0x55e0910065e0
        pCommandBuffers[36]: VkCommandBuffer = 0x55e09100ace0
        pCommandBuffers[37]: VkCommandBuffer = 0x55e09100f3e0
        pCommandBuffers[38]: VkCommandBuffer = 0x55e091013ae0
        pCommandBuffers[39]: VkCommandBuffer = 0x55e0910181e0
        pCommandBuffers[40]: VkCommandBuffer = 0x55e09101c8e0
        pCommandBuffers[41]: VkCommandBuffer = 0x55e091020fe0
        pCommandBuffers[42]: VkCommandBuffer = 0x55e0910256e0
        pCommandBuffers[43]: VkCommandBuffer = 0x55e091029de0
        pCommandBuffers[44]: VkCommandBuffer = 0x55e09102e4e0
        pCommandBuffers[45]: VkCommandBuffer = 0x55e091032be0
        pCommandBuffers[46]: VkCommandBuffer = 0x55e0910372e0
        pCommandBuffers[47]: VkCommandBuffer = 0x55e09103b9e0
        pCommandBuffers[48]: VkCommandBuffer = 0x55e0910400e0
        pCommandBuffers[49]: VkCommandBuffer = 0x55e0910447e0
        pCommandBuffers[50]: VkCommandBuffer = 0x55e091048ee0
        pCommandBuffers[51]: VkCommandBuffer = 0x55e09104d5e0
        pCommandBuffers[52]: VkCommandBuffer = 0x55e091051ce0
        pCommandBuffers[53]: VkCommandBuffer = 0x55e0910563e0
        pCommandBuffers[54]: VkCommandBuffer = 0x55e09105aae0
        pCommandBuffers[55]: VkCommandBuffer = 0x55e09105f1e0
        pCommandBuffers[56]: VkCommandBuffer = 0x55e0910638e0
        pCommandBuffers[57]: VkCommandBuffer = 0x55e091067fe0
        pCommandBuffers[58]: VkCommandBuffer = 0x55e09106c6e0
        pCommandBuffers[59]: VkCommandBuffer = 0x55e091070de0
        pCommandBuffers[60]: VkCommandBuffer = 0x55e0910754e0
        pCommandBuffers[61]: VkCommandBuffer = 0x55e091079be0
        pCommandBuffers[62]: VkCommandBuffer = 0x55e09107e2e0
        pCommandBuffers[63]: VkCommandBuffer = 0x55e0910829e0
        pCommandBuffers[64]: VkCommandBuffer = 0x55e0910870e0
        pCommandBuffers[65]: VkCommandBuffer = 0x55e09108b7e0
        pCommandBuffers[66]: VkCommandBuffer = 0x55e09108fee0
        pCommandBuffers[67]: VkCommandBuffer = 0x55e0910945e0
        pCommandBuffers[68]: VkCommandBuffer = 0x55e091098ce0
        pCommandBuffers[69]: VkCommandBuffer = 0x55e09109d3e0
        pCommandBuffers[70]: VkCommandBuffer = 0x55e0910a1ae0
        pCommandBuffers[71]: VkCommandBuffer = 0x55e0910a61e0
        pCommandBuffers[72]: VkCommandBuffer = 0x55e0910aa8e0
        pCommandBuffers[73]: VkCommandBuffer = 0x55e0910aefe0
        pCommandBuffers[74]: VkCommandBuffer = 0x55e0910b36e0
        pCommandBuffers[75]: VkCommandBuffer = 0x55e0910b7de0
        pCommandBuffers[76]: VkCommandBuffer = 0x55e0910bc4e0
        pCommandBuffers[77]: VkCommandBuffer = 0x55e0910c0be0
        pCommandBuffers[78]: VkCommandBuffer = 0x55e0910c52e0
        pCommandBuffers[79]: VkCommandBuffer = 0x55e0910c99e0
        pCommandBuffers[80]: VkCommandBuffer = 0x55e0910ce0e0
        pCommandBuffers[81]: VkCommandBuffer = 0x55e0910d27e0
        pCommandBuffers[82]: VkCommandBuffer = 0x55e0910d6ee0
        pCommandBuffers[83]: VkCommandBuffer = 0x55e0910db5e0
        pCommandBuffers[84]: VkCommandBuffer = 0x55e0910dfce0
        pCommandBuffers[85]: VkCommandBuffer = 0x55e0910e43e0
        pCommandBuffers[86]: VkCommandBuffer = 0x55e0910e8ae0
        pCommandBuffers[87]: VkCommandBuffer = 0x55e0910ed1e0
        pCommandBuffers[88]: VkCommandBuffer = 0x55e0910f18e0
        pCommandBuffers[89]: VkCommandBuffer = 0x55e0910f5fe0
        pCommandBuffers[90]: VkCommandBuffer = 0x55e0910fa6e0
        pCommandBuffers[91]: VkCommandBuffer = 0x55e0910fede0
        pCommandBuffers[92]: VkCommandBuffer = 0x55e0911034e0
        pCommandBuffers[93]: VkCommandBuffer = 0x55e091107be0
        pCommandBuffers[94]: VkCommandBuffer = 0x55e09110c2e0
        pCommandBuffers[95]: VkCommandBuffer = 0x55e0911109e0
        pCommandBuffers[96]: VkCommandBuffer = 0x55e0911150e0
        pCommandBuffers[97]: VkCommandBuffer = 0x55e0911197e0
        pCommandBuffers[98]: VkCommandBuffer = 0x55e09111dee0
        pCommandBuffers[99]: VkCommandBuffer = 0x55e0911225e0
        pCommandBuffers[100]: VkCommandBuffer = 0x55e091126ce0
        pCommandBuffers[101]: VkCommandBuffer = 0x55e09112b3e0
        pCommandBuffers[102]: VkCommandBuffer = 0x55e09112fae0
        pCommandBuffers[103]: VkCommandBuffer = 0x55e0911341e0
        pCommandBuffers[104]: VkCommandBuffer = 0x55e0911388e0
        pCommandBuffers[105]: VkCommandBuffer = 0x55e09113cfe0
        pCommandBuffers[106]: VkCommandBuffer = 0x55e0911416e0
        pCommandBuffers[107]: VkCommandBuffer = 0x55e091145de0
        pCommandBuffers[108]: VkCommandBuffer = 0x55e09114a4e0
        pCommandBuffers[109]: VkCommandBuffer = 0x55e09114ebe0
        pCommandBuffers[110]: VkCommandBuffer = 0x55e0911532e0
        pCommandBuffers[111]: VkCommandBuffer = 0x55e0911579e0
        pCommandBuffers[112]: VkCommandBuffer = 0x55e09115c0e0
        pCommandBuffers[113]: VkCommandBuffer = 0x55e0911607e0
        pCommandBuffers[114]: VkCommandBuffer = 0x55e091164ee0
        pCommandBuffers[115]: VkCommandBuffer = 0x55e0911695e0
        pCommandBuffers[116]: VkCommandBuffer = 0x55e09116dce0
        pCommandBuffers[117]: VkCommandBuffer = 0x55e0911723e0
        pCommandBuffers[118]: VkCommandBuffer = 0x55e091176ae0
        pCommandBuffers[119]: VkCommandBuffer = 0x55e09117b1e0
        pCommandBuffers[120]: VkCommandBuffer = 0x55e09117f8e0
        pCommandBuffers[121]: VkCommandBuffer = 0x55e091183fe0
        pCommandBuffers[122]: VkCommandBuffer = 0x55e0911886e0
        pCommandBuffers[123]: VkCommandBuffer = 0x55e09118cde0
        pCommandBuffers[124]: VkCommandBuffer = 0x55e0911914e0
        pCommandBuffers[125]: VkCommandBuffer = 0x55e091195be0
        pCommandBuffers[126]: VkCommandBuffer = 0x55e09119a2e0
        pCommandBuffers[127]: VkCommandBuffer = 0x55e09119e9e0
        pCommandBuffers[128]: VkCommandBuffer = 0x55e0911a30e0
        pCommandBuffers[129]: VkCommandBuffer = 0x55e0911a77e0
        pCommandBuffers[130]: VkCommandBuffer = 0x55e0911abee0
        pCommandBuffers[131]: VkCommandBuffer = 0x55e0911b05e0
        pCommandBuffers[132]: VkCommandBuffer = 0x55e0911b4ce0
        pCommandBuffers[133]: VkCommandBuffer = 0x55e0911b93e0
        pCommandBuffers[134]: VkCommandBuffer = 0x55e0911bdae0
        pCommandBuffers[135]: VkCommandBuffer = 0x55e0911c21e0
        pCommandBuffers[136]: VkCommandBuffer = 0x55e0911c68e0
        pCommandBuffers[137]: VkCommandBuffer = 0x55e0911cafe0
        pCommandBuffers[138]: VkCommandBuffer = 0x55e0911cf6e0
        pCommandBuffers[139]: VkCommandBuffer = 0x55e0911d3de0
        pCommandBuffers[140]: VkCommandBuffer = 0x55e0911d84e0
        pCommandBuffers[141]: VkCommandBuffer = 0x55e0911dcbe0
        pCommandBuffers[142]: VkCommandBuffer = 0x55e0911e12e0
        pCommandBuffers[143]: VkCommandBuffer = 0x55e0911e59e0
        pCommandBuffers[144]: VkCommandBuffer = 0x55e0911ea0e0
        pCommandBuffers[145]: VkCommandBuffer = 0x55e0911ee7e0
        pCommandBuffers[146]: VkCommandBuffer = 0x55e0911f2ee0
        pCommandBuffers[147]: VkCommandBuffer = 0x55e0911f75e0
        pCommandBuffers[148]: VkCommandBuffer = 0x55e0911fbce0
        pCommandBuffers[149]: VkCommandBuffer = 0x55e0912003e0
        pCommandBuffers[150]: VkCommandBuffer = 0x55e091204ae0
        pCommandBuffers[151]: VkCommandBuffer = 0x55e0912091e0
        pCommandBuffers[152]: VkCommandBuffer = 0x55e09120d8e0
        pCommandBuffers[153]: VkCommandBuffer = 0x55e091211fe0
        pCommandBuffers[154]: VkCommandBuffer = 0x55e0912166e0
        pCommandBuffers[155]: VkCommandBuffer = 0x55e09121ade0
        pCommandBuffers[156]: VkCommandBuffer = 0x55e09121f4e0
        pCommandBuffers[157]: VkCommandBuffer = 0x55e091223be0
        pCommandBuffers[158]: VkCommandBuffer = 0x55e0912282e0
        pCommandBuffers[159]: VkCommandBuffer = 0x55e09122c9e0
        pCommandBuffers[160]: VkCommandBuffer = 0x55e0912310e0
        pCommandBuffers[161]: VkCommandBuffer = 0x55e0912357e0
        pCommandBuffers[162]: VkCommandBuffer = 0x55e091239ee0
        pCommandBuffers[163]: VkCommandBuffer = 0x55e09123e5e0
        pCommandBuffers[164]: VkCommandBuffer = 0x55e091242ce0
        pCommandBuffers[165]: VkCommandBuffer = 0x55e0912473e0
        pCommandBuffers[166]: VkCommandBuffer = 0x55e09124bae0
        pCommandBuffers[167]: VkCommandBuffer = 0x55e0912501e0
        pCommandBuffers[168]: VkCommandBuffer = 0x55e0912548e0
        pCommandBuffers[169]: VkCommandBuffer = 0x55e091258fe0
        pCommandBuffers[170]: VkCommandBuffer = 0x55e09125d6e0
        pCommandBuffers[171]: VkCommandBuffer = 0x55e091261de0
        pCommandBuffers[172]: VkCommandBuffer = 0x55e0912664e0
        pCommandBuffers[173]: VkCommandBuffer = 0x55e09126abe0
        pCommandBuffers[174]: VkCommandBuffer = 0x55e09126f2e0
        pCommandBuffers[175]: VkCommandBuffer = 0x55e0912739e0
        pCommandBuffers[176]: VkCommandBuffer = 0x55e0912780e0
        pCommandBuffers[177]: VkCommandBuffer = 0x55e09127c7e0
        pCommandBuffers[178]: VkCommandBuffer = 0x55e091280ee0
        pCommandBuffers[179]: VkCommandBuffer = 0x55e0912855e0
        pCommandBuffers[180]: VkCommandBuffer = 0x55e091289ce0
        pCommandBuffers[181]: VkCommandBuffer = 0x55e09128e3e0
        pCommandBuffers[182]: VkCommandBuffer = 0x55e091292ae0
        pCommandBuffers[183]: VkCommandBuffer = 0x55e0912971e0
        pCommandBuffers[184]: VkCommandBuffer = 0x55e09129b8e0
        pCommandBuffers[185]: VkCommandBuffer = 0x55e09129ffe0
        pCommandBuffers[186]: VkCommandBuffer = 0x55e0912a46e0
        pCommandBuffers[187]: VkCommandBuffer = 0x55e0912a8de0
        pCommandBuffers[188]: VkCommandBuffer = 0x55e0912ad4e0
        pCommandBuffers[189]: VkCommandBuffer = 0x55e0912b1be0
        pCommandBuffers[190]: VkCommandBuffer = 0x55e0912b62e0
        pCommandBuffers[191]: VkCommandBuffer = 0x55e0912ba9e0
        pCommandBuffers[192]: VkCommandBuffer = 0x55e0912bf0e0
        pCommandBuffers[193]: VkCommandBuffer = 0x55e0912c37e0
        pCommandBuffers[194]: VkCommandBuffer = 0x55e0912c7ee0
        pCommandBuffers[195]: VkCommandBuffer = 0x55e0912cc5e0
        pCommandBuffers[196]: VkCommandBuffer = 0x55e0912d0ce0
        pCommandBuffers[197]: VkCommandBuffer = 0x55e0912d53e0
        pCommandBuffers[198]: VkCommandBuffer = 0x55e0912d9ae0
        pCommandBuffers[199]: VkCommandBuffer = 0x55e0912de1e0
        pCommandBuffers[200]: VkCommandBuffer = 0x55e0912e28e0
        pCommandBuffers[201]: VkCommandBuffer = 0x55e0912e6fe0
        pCommandBuffers[202]: VkCommandBuffer = 0x55e0912eb6e0
        pCommandBuffers[203]: VkCommandBuffer = 0x55e0912efde0
        pCommandBuffers[204]: VkCommandBuffer = 0x55e0912f44e0
        pCommandBuffers[205]: VkCommandBuffer = 0x55e0912f8be0
        pCommandBuffers[206]: VkCommandBuffer = 0x55e0912fd2e0
        pCommandBuffers[207]: VkCommandBuffer = 0x55e0913019e0
        pCommandBuffers[208]: VkCommandBuffer = 0x55e0913060e0
        pCommandBuffers[209]: VkCommandBuffer = 0x55e09130a7e0
        pCommandBuffers[210]: VkCommandBuffer = 0x55e09130eee0
        pCommandBuffers[211]: VkCommandBuffer = 0x55e0913135e0
        pCommandBuffers[212]: VkCommandBuffer = 0x55e091317ce0
        pCommandBuffers[213]: VkCommandBuffer = 0x55e09131c3e0
        pCommandBuffers[214]: VkCommandBuffer = 0x55e091320ae0
        pCommandBuffers[215]: VkCommandBuffer = 0x55e0913251e0
        pCommandBuffers[216]: VkCommandBuffer = 0x55e0913298e0
        pCommandBuffers[217]: VkCommandBuffer = 0x55e09132dfe0
        pCommandBuffers[218]: VkCommandBuffer = 0x55e0913326e0
        pCommandBuffers[219]: VkCommandBuffer = 0x55e091336de0
        pCommandBuffers[220]: VkCommandBuffer = 0x55e09133b4e0
        pCommandBuffers[221]: VkCommandBuffer = 0x55e09133fbe0
        pCommandBuffers[222]: VkCommandBuffer = 0x55e0913442e0
        pCommandBuffers[223]: VkCommandBuffer = 0x55e0913489e0
        pCommandBuffers[224]: VkCommandBuffer = 0x55e09134d0e0
        pCommandBuffers[225]: VkCommandBuffer = 0x55e0913517e0
        pCommandBuffers[226]: VkCommandBuffer = 0x55e091355ee0
        pCommandBuffers[227]: VkCommandBuffer = 0x55e09135a5e0
        pCommandBuffers[228]: VkCommandBuffer = 0x55e09135ece0
        pCommandBuffers[229]: VkCommandBuffer = 0x55e0913633e0
        pCommandBuffers[230]: VkCommandBuffer = 0x55e091367ae0
        pCommandBuffers[231]: VkCommandBuffer = 0x55e09136c1e0
        pCommandBuffers[232]: VkCommandBuffer = 0x55e0913708e0
        pCommandBuffers[233]: VkCommandBuffer = 0x55e091374fe0
        pCommandBuffers[234]: VkCommandBuffer = 0x55e0913796e0
        pCommandBuffers[235]: VkCommandBuffer = 0x55e09137dde0
        pCommandBuffers[236]: VkCommandBuffer = 0x55e0913824e0
        pCommandBuffers[237]: VkCommandBuffer = 0x55e091386be0
        pCommandBuffers[238]: VkCommandBuffer = 0x55e09138b2e0
        pCommandBuffers[239]: VkCommandBuffer = 0x55e09138f9e0
        pCommandBuffers[240]: VkCommandBuffer = 0x55e0913940e0
        pCommandBuffers[241]: VkCommandBuffer = 0x55e0913987e0
        pCommandBuffers[242]: VkCommandBuffer = 0x55e09139cee0
        pCommandBuffers[243]: VkCommandBuffer = 0x55e0913a15e0
        pCommandBuffers[244]: VkCommandBuffer = 0x55e0913a5ce0
        pCommandBuffers[245]: VkCommandBuffer = 0x55e0913aa3e0
        pCommandBuffers[246]: VkCommandBuffer = 0x55e0913aeae0
        pCommandBuffers[247]: VkCommandBuffer = 0x55e0913b51d0
        pCommandBuffers[248]: VkCommandBuffer = 0x55e0913b97d0
        pCommandBuffers[249]: VkCommandBuffer = 0x55e0913bddd0
        pCommandBuffers[250]: VkCommandBuffer = 0x55e0913c23d0
        pCommandBuffers[251]: VkCommandBuffer = 0x55e0913c69d0
        pCommandBuffers[252]: VkCommandBuffer = 0x55e0913cafd0
        pCommandBuffers[253]: VkCommandBuffer = 0x55e0913cf5d0
        pCommandBuffers[254]: VkCommandBuffer = 0x55e0913d3bd0
        pCommandBuffers[255]: VkCommandBuffer = 0x55e0913d81d0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090843a30
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81d00610:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 0:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090843a30
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81d03738
    bufferMemoryBarrierCount: uint32_t = 1
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81d037a8
        pBufferMemoryBarriers[0]: const VkBufferMemoryBarrier = 0x7ffe81d037a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER (44)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            buffer:                 VkBuffer = 0x55e0902fb900
            offset:             VkDeviceSize = 0
            size:               VkDeviceSize = 24
    imageMemoryBarrierCount: uint32_t = 1
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81d039a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81d039a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81d039d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: begin_render_pass
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e09035d270, type = VK_OBJECT_TYPE_RENDER_PASS; | MessageID = 0x5c0ec5d6 | vkCmdBeginRenderPass2: Hazard WRITE_AFTER_WRITE in subpass 0 for attachment 0 aspect color during load with loadOp VK_ATTACHMENT_LOAD_OP_CLEAR. Access info (usage: SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e09035d270, type: 18, name: NULL
Thread 0, Frame 0:
vkCmdBeginRenderPass2(commandBuffer, pRenderPassBegin, pSubpassBeginInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090843a30
    pRenderPassBegin: const VkRenderPassBeginInfo* = 0x7ffe81d03b18:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:               const void* = NULL
        renderPass:         VkRenderPass = 0x55e09035d270
        framebuffer:       VkFramebuffer = 0x55e0909f2b30
        renderArea:             VkRect2D = 0x7ffe81d03b38:
            offset:               VkOffset2D = 0x7ffe81d03b38:
                x:                       int32_t = 0
                y:                       int32_t = 0
            extent:               VkExtent2D = 0x7ffe81d03b40:
                width:                  uint32_t = 1000
                height:                 uint32_t = 1000
        clearValueCount:        uint32_t = 1
        pClearValues: const VkClearValue* = 0x7ffe81d03ad4
            pClearValues[0]: const VkClearValue = 0x7ffe81d03ad4 (Union):
                color:         VkClearColorValue = 0x7ffe81d03ad4 (Union):
                    float32:                float[4] = 0x7ffe81d03ad4
                        float32[0]:                float = 0
                        float32[1]:                float = 1
                        float32[2]:                float = 1
                        float32[3]:                float = 1
                    int32:                int32_t[4] = 0x7ffe81d03ad4
                        int32[0]:                int32_t = 0
                        int32[1]:                int32_t = 1065353216
                        int32[2]:                int32_t = 1065353216
                        int32[3]:                int32_t = 1065353216
                    uint32:              uint32_t[4] = 0x7ffe81d03ad4
                        uint32[0]:              uint32_t = 0
                        uint32[1]:              uint32_t = 1065353216
                        uint32[2]:              uint32_t = 1065353216
                        uint32[3]:              uint32_t = 1065353216
                depthStencil: VkClearDepthStencilValue = 0x7ffe81d03ad4:
                    depth:                     float = 0
                    stencil:                uint32_t = 1065353216
    pSubpassBeginInfo: const VkSubpassBeginInfo* = 0x7ffe81d03bb8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO (1000109005)
        pNext:               const void* = NULL
        contents:      VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

command: set_viewport
Thread 0, Frame 0:
vkCmdSetViewport(commandBuffer, firstViewport, viewportCount, pViewports) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090843a30
    firstViewport:          uint32_t = 0
    viewportCount:          uint32_t = 1
    pViewports:    const VkViewport* = 0x7ffe81d03b34
        pViewports[0]:  const VkViewport = 0x7ffe81d03b34:
            x:                         float = 0
            y:                         float = 0
            width:                     float = 1000
            height:                    float = 1000
            minDepth:                  float = 0
            maxDepth:                  float = 1

command: bind_pipeline_graphics
Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090843a30
    pipelineBindPoint: VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:             VkPipeline = 0x55e0909f1f40

command: bind_vertex_buffers
Thread 0, Frame 0:
vkCmdBindVertexBuffers(commandBuffer, firstBinding, bindingCount, pBuffers, pOffsets) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090843a30
    firstBinding:           uint32_t = 0
    bindingCount:           uint32_t = 1
    pBuffers:        const VkBuffer* = 0x7ffe81d03ba0
        pBuffers[0]:      const VkBuffer = 0x55e0902fb900
    pOffsets:    const VkDeviceSize* = 0x7ffe81d03bd0
        pOffsets[0]:  const VkDeviceSize = 0

command: draw
Thread 0, Frame 0:
vkCmdDraw(commandBuffer, vertexCount, instanceCount, firstVertex, firstInstance) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090843a30
    vertexCount:            uint32_t = 3
    instanceCount:          uint32_t = 1
    firstVertex:            uint32_t = 0
    firstInstance:          uint32_t = 0

command: end_render_pass
Thread 0, Frame 0:
vkCmdEndRenderPass2(commandBuffer, pSubpassEndInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090843a30
    pSubpassEndInfo: const VkSubpassEndInfo* = 0x7ffe81d03c10:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBPASS_END_INFO (1000109006)
        pNext:               const void* = NULL

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090971980[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_WRITE, write_barriers: 0, command: vkCmdEndRenderPass2, seq_no: 4,renderpass: VkRenderPass 0x55e09035d270[], reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
Thread 0, Frame 0:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090843a30
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81d03738
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81d037a8
    imageMemoryBarrierCount: uint32_t = 1
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81d039a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81d039a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 1936 (VK_ACCESS_INPUT_ATTACHMENT_READ_BIT | VK_ACCESS_COLOR_ATTACHMENT_READ_BIT | VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT | VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT | VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81d039d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090843a30

building command buffer end
Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkFenceCreateInfo* = 0x7ffe81d04fd0:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:               const void* = NULL
        flags:        VkFenceCreateFlags = 0
    pAllocator: const VkAllocationCallbacks* = NULL
    pFence:                 VkFence* = 0x55e0914cdb70

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81d026e8
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81d026e8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81d02828
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81d02854
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81d02878
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090843a30
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81d028a8
    fence:                   VkFence = 0x55e0914cdb70

Thread 0, Frame 0:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914cf000
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

loop start
Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilities2KHR(physicalDevice, pSurfaceInfo, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    pSurfaceInfo: const VkPhysicalDeviceSurfaceInfo2KHR* = 0x7ffe81cfe590:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR (1000119000)
        pNext:               const void* = NULL
        surface:            VkSurfaceKHR = 0x55e090304a90
    pSurfaceCapabilities: VkSurfaceCapabilities2KHR* = 0x7ffe81cfe660:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR (1000119001)
        pNext:                     void* = NULL
        surfaceCapabilities: VkSurfaceCapabilitiesKHR = 0x7ffe81cfe670:
            minImageCount:          uint32_t = 3
            maxImageCount:          uint32_t = 0
            currentExtent:        VkExtent2D = 0x7ffe81cfe678:
                width:                  uint32_t = 800
                height:                 uint32_t = 600
            minImageExtent:       VkExtent2D = 0x7ffe81cfe680:
                width:                  uint32_t = 800
                height:                 uint32_t = 600
            maxImageExtent:       VkExtent2D = 0x7ffe81cfe688:
                width:                  uint32_t = 800
                height:                 uint32_t = 600
            maxImageArrayLayers:    uint32_t = 1
            supportedTransforms: VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
            currentTransform: VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
            supportedCompositeAlpha: VkCompositeAlphaFlagsKHR = 9 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR | VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR)
            supportedUsageFlags: VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, pSwapchain) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkSwapchainCreateInfoKHR* = 0x7ffe81cffce8:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR (1000001000)
        pNext:               const void* = NULL
        flags: VkSwapchainCreateFlagsKHR = 0
        surface:            VkSurfaceKHR = 0x55e090304a90
        minImageCount:          uint32_t = 3
        imageFormat:            VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
        imageColorSpace: VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        imageExtent:          VkExtent2D = 0x7ffe81cffd14:
            width:                  uint32_t = 800
            height:                 uint32_t = 600
        imageArrayLayers:       uint32_t = 1
        imageUsage:    VkImageUsageFlags = 18 (VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
        imageSharingMode:  VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:  uint32_t = 0
        pQueueFamilyIndices: const uint32_t* = UNUSED
        preTransform: VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        compositeAlpha: VkCompositeAlphaFlagBitsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        presentMode:    VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
        clipped:                VkBool32 = 1
        oldSwapchain:     VkSwapchainKHR = 0x55e09092ef40
    pAllocator: const VkAllocationCallbacks* = NULL
    pSwapchain:      VkSwapchainKHR* = 0x55e0903059f0

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    pSwapchainImageCount:  uint32_t* = 3
    pSwapchainImages:       VkImage* = NULL

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    pSwapchainImageCount:  uint32_t* = 3
    pSwapchainImages:       VkImage* = 0x55e090e8b180
        pSwapchainImages[0]:     VkImage = 0x55e090306390
        pSwapchainImages[1]:     VkImage = 0x55e0914d2530
        pSwapchainImages[2]:     VkImage = 0x55e0914d2b10

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81cff900:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81cff910:
            linearTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 16 (VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT)
        pNext:       VkFormatProperties3 = 0x7ffe81cff940:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6442450960 (VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81cff900:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81cff910:
            linearTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 16 (VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT)
        pNext:       VkFormatProperties3 = 0x7ffe81cff940:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6442450960 (VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties2(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice: VkPhysicalDevice = 0x55e090356ba0
    format:                 VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties: VkFormatProperties2* = 0x7ffe81cff900:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2 (1000059002)
        pNext:               const void* = VkFormatProperties3
        formatProperties: VkFormatProperties = 0x7ffe81cff910:
            linearTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags = 56705 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags = 16 (VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT)
        pNext:       VkFormatProperties3 = 0x7ffe81cff940:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3 (1000360000)
            pNext:                     void* = NULL
            linearTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            optimalTilingFeatures: VkFormatFeatureFlags2 = 56705 (VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_2_BLIT_SRC_BIT | VK_FORMAT_FEATURE_2_BLIT_DST_BIT | VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT)
            bufferFeatures: VkFormatFeatureFlags2 = 6442450960 (VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT | VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT)

Thread 0, Frame 0:
vkDestroySwapchainKHR(device, swapchain, pAllocator) returns void:
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e09092ef40
    pAllocator: const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkSemaphoreCreateInfo* = 0x7ffe81cff810:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:               const void* = NULL
        flags:    VkSemaphoreCreateFlags = 0
    pAllocator: const VkAllocationCallbacks* = NULL
    pSemaphore:         VkSemaphore* = 0x55e090215880

Thread 0, Frame 0:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 0:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090846f80
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 0:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090846f80
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 0:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090846f80
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 0:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090846f80
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090846f80

building command buffer end
Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkFenceCreateInfo* = 0x7ffe81cff780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:               const void* = NULL
        flags:        VkFenceCreateFlags = 0
    pAllocator: const VkAllocationCallbacks* = NULL
    pFence:                 VkFence* = 0x55e09092f990

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090846f80
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 0:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0907b8800
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 1:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 1:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 1:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914d56d0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 1:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 1:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 1:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0907cb560
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 1:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907cb560
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 1:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907cb560
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 1:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907cb560
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 1:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0907cb560

building command buffer end
Thread 0, Frame 1:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 1:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0907cb560
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 1:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e09032df50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 2:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 2:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 2:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914d6880
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 2:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 2:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 2:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0907cfb60
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 2:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907cfb60
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 2:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907cfb60
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 2:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907cfb60
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 2:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0907cfb60

building command buffer end
Thread 0, Frame 2:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 2:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0907cfb60
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 2:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e090e83800
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 3:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 3:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 3:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914d7c10
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 3:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 3:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 3:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0909bab00
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 3:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0909bab00
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 3:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0909bab00
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 3:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0909bab00
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 3:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0909bab00

building command buffer end
Thread 0, Frame 3:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 3:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0909bab00
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 3:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090304ec0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 4:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 4:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 4:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914d8ca0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 4:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 4:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 4:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0906aafb0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 4:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0906aafb0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 4:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0906aafb0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 4:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0906aafb0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 4:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0906aafb0

building command buffer end
Thread 0, Frame 4:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 4:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0906aafb0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 4:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090328df0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 5:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 5:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 5:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkSemaphoreCreateInfo* = 0x7ffe81cff810:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:               const void* = NULL
        flags:    VkSemaphoreCreateFlags = 0
    pAllocator: const VkAllocationCallbacks* = NULL
    pSemaphore:         VkSemaphore* = 0x55e0914d7a30

Thread 0, Frame 5:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkFenceCreateInfo* = 0x7ffe81cff870:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:               const void* = NULL
        flags:        VkFenceCreateFlags = 0
    pAllocator: const VkAllocationCallbacks* = NULL
    pFence:                 VkFence* = 0x55e0914da380

Thread 0, Frame 5:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 5:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0906ae500
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 5:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0906ae500
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 5:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0906ae500
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 5:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0906ae500
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 5:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0906ae500

building command buffer end
Thread 0, Frame 5:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    pCreateInfo: const VkFenceCreateInfo* = 0x7ffe81cff780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:               const void* = NULL
        flags:        VkFenceCreateFlags = 0
    pAllocator: const VkAllocationCallbacks* = NULL
    pFence:                 VkFence* = 0x55e0914db230

Thread 0, Frame 5:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0906ae500
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 5:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e09084b8c0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 6:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 6:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 6:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 6:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914dc970
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 6:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 6:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 6:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0907d5480
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 6:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907d5480
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 6:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907d5480
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 6:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907d5480
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 6:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0907d5480

building command buffer end
Thread 0, Frame 6:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 6:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0907d5480
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 6:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000c70
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 7:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 7:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 7:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 7:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 7:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0907d89d0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 7:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907d89d0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 7:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907d89d0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 7:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0907d89d0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 7:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0907d89d0

building command buffer end
Thread 0, Frame 7:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 7:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0907d89d0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 7:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000c10
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 8:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 8:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db450
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 8:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 8:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914d8ca0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 8:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 8:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 8:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e09097c7d0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 8:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e09097c7d0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 8:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e09097c7d0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 8:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e09097c7d0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 8:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e09097c7d0

building command buffer end
Thread 0, Frame 8:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 8:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e09097c7d0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 8:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e090304ec0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 9:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 9:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 9:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db450
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 9:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914debc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 9:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 9:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 9:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090980dd0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 9:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090980dd0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 9:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090980dd0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 9:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090980dd0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 9:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090980dd0

building command buffer end
Thread 0, Frame 9:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 9:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090980dd0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 9:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000bf0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 10:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 10:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 10:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 10:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914e0aa0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 10:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 10:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 10:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0903385f0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 10:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0903385f0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 10:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0903385f0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 10:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0903385f0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 10:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0903385f0

building command buffer end
Thread 0, Frame 10:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 10:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0903385f0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 10:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914d9690
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 11:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 11:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db450
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 11:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 11:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 11:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0904d1780
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 11:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904d1780
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 11:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904d1780
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 11:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904d1780
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 11:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0904d1780

building command buffer end
Thread 0, Frame 11:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 11:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0904d1780
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 11:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e090971960
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 12:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 12:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 12:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db450
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 12:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914df6b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 12:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 12:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 12:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0904d4cd0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 12:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904d4cd0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 12:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904d4cd0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 12:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904d4cd0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 12:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0904d4cd0

building command buffer end
Thread 0, Frame 12:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 12:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0904d4cd0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 12:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0906b2b00
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 13:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 13:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 13:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 13:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914e2f00
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 13:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 13:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 13:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0904d8220
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 13:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904d8220
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 13:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904d8220
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 13:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904d8220
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 13:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0904d8220

building command buffer end
Thread 0, Frame 13:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 13:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0904d8220
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 13:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 14:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 14:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 14:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 14:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914e2b90
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 14:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 14:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 14:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0904dc820
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 14:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904dc820
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 14:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904dc820
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 14:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e0904dc820
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 14:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e0904dc820

building command buffer end
Thread 0, Frame 14:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 14:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e0904dc820
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 14:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0907b8800
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 15:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 15:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 15:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914e3960
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 15:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 15:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 15:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a520c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 15:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a520c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 15:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a520c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 15:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a520c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 15:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a520c0

building command buffer end
Thread 0, Frame 15:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 15:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a520c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 15:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0914e0a50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 16:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 16:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 16:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914e4980
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 16:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 16:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 16:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a566c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 16:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a566c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 16:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a566c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 16:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a566c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 16:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a566c0

building command buffer end
Thread 0, Frame 16:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 16:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a566c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 16:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090328df0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 17:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 17:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 17:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914e65a0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 17:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 17:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 17:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a5acc0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 17:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a5acc0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 17:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a5acc0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 17:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a5acc0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 17:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a5acc0

building command buffer end
Thread 0, Frame 17:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 17:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a5acc0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 17:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e09084b7c0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 18:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 18:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 18:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914e6420
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 18:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 18:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 18:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a5f2c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 18:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a5f2c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 18:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a5f2c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 18:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a5f2c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 18:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a5f2c0

building command buffer end
Thread 0, Frame 18:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 18:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a5f2c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 18:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0907d3210
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 19:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 19:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 19:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914e8280
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 19:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 19:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 19:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a638c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 19:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a638c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 19:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a638c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 19:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a638c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 19:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a638c0

building command buffer end
Thread 0, Frame 19:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 19:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a638c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 19:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0906b2c00
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 20:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 20:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 20:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914e8680
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 20:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 20:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 20:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a67ec0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 20:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a67ec0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 20:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a67ec0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 20:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a67ec0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 20:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a67ec0

building command buffer end
Thread 0, Frame 20:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 20:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a67ec0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 20:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0914e0a50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 21:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 21:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 21:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914ea510
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 21:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 21:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 21:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a6c4c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 21:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a6c4c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 21:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a6c4c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 21:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a6c4c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 21:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a6c4c0

building command buffer end
Thread 0, Frame 21:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 21:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a6c4c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 21:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0914e3a50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 22:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 22:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 22:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914ea390
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 22:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 22:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 22:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a70ac0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 22:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a70ac0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 22:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a70ac0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 22:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a70ac0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 22:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a70ac0

building command buffer end
Thread 0, Frame 22:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 22:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a70ac0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 22:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0906b2f00
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 23:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 23:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 23:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914eb160
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 23:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 23:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 23:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a750c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 23:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a750c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 23:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a750c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 23:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a750c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 23:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a750c0

building command buffer end
Thread 0, Frame 23:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 23:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a750c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 23:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0909844d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 24:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 24:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 24:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914e06f0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 24:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 24:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 24:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a796c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 24:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a796c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 24:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a796c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 24:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a796c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 24:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a796c0

building command buffer end
Thread 0, Frame 24:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 24:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a796c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 24:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0906b2d00
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 25:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 25:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 25:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914ed550
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 25:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 25:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 25:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a7dcc0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 25:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a7dcc0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 25:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a7dcc0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 25:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a7dcc0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 25:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a7dcc0

building command buffer end
Thread 0, Frame 25:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 25:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a7dcc0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 25:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e09092fdf0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 26:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 26:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 26:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 26:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 26:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a822c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 26:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a822c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 26:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a822c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 26:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a822c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 26:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a822c0

building command buffer end
Thread 0, Frame 26:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 26:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a822c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 26:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000bd0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 27:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 27:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 27:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 27:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914f0ed0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 27:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 27:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 27:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a868c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 27:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a868c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 27:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a868c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 27:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a868c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 27:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a868c0

building command buffer end
Thread 0, Frame 27:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 27:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a868c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 27:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000c10
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 28:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 28:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db450
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 28:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914f0ae0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 28:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 28:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 28:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a8aec0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 28:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a8aec0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 28:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a8aec0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 28:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a8aec0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 28:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a8aec0

building command buffer end
Thread 0, Frame 28:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 28:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a8aec0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 28:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914e3a50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 29:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 29:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 29:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914f01e0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 29:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 29:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 29:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a8f4c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 29:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a8f4c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 29:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a8f4c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 29:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a8f4c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 29:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a8f4c0

building command buffer end
Thread 0, Frame 29:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 29:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a8f4c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 29:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0914d8fa0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 30:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 30:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db450
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 30:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914f1b20
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 30:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 30:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 30:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a93ac0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 30:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a93ac0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 30:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a93ac0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 30:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a93ac0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 30:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a93ac0

building command buffer end
Thread 0, Frame 30:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 30:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a93ac0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 30:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0907d3210
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 31:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 31:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 31:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 31:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 31:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a980c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 31:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a980c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 31:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a980c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 31:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a980c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 31:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a980c0

building command buffer end
Thread 0, Frame 31:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 31:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a980c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 31:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000bf0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 32:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 32:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 32:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 32:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914f2930
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 32:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 32:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 32:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a9c6c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 32:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a9c6c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 32:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a9c6c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 32:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090a9c6c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 32:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090a9c6c0

building command buffer end
Thread 0, Frame 32:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 32:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090a9c6c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 32:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0914dea00
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 33:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 33:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db450
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 33:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 33:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914f3740
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 33:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 33:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 33:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aa0cc0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 33:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aa0cc0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 33:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aa0cc0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 33:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aa0cc0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 33:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aa0cc0

building command buffer end
Thread 0, Frame 33:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 33:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090aa0cc0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 33:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0914e2eb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 34:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 34:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 34:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914f5350
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 34:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 34:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 34:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aa52c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 34:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aa52c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 34:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aa52c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 34:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aa52c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 34:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aa52c0

building command buffer end
Thread 0, Frame 34:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 34:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090aa52c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 34:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914d9690
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 35:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 35:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db450
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 35:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914f6190
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 35:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 35:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 35:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aa98c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 35:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aa98c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 35:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aa98c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 35:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aa98c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 35:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aa98c0

building command buffer end
Thread 0, Frame 35:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 35:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090aa98c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 35:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0914efd70
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 36:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 36:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 36:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 36:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 36:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aadec0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 36:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aadec0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 36:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aadec0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 36:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aadec0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 36:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aadec0

building command buffer end
Thread 0, Frame 36:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 36:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090aadec0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 36:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0907d3110
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 37:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 37:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 37:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 37:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914fa200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 37:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 37:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 37:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ab24c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 37:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ab24c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 37:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ab24c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 37:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ab24c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 37:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ab24c0

building command buffer end
Thread 0, Frame 37:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 37:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ab24c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 37:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 38:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 38:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 38:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 38:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 38:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ab6ac0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 38:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ab6ac0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 38:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ab6ac0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 38:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ab6ac0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 38:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ab6ac0

building command buffer end
Thread 0, Frame 38:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 38:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ab6ac0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 38:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000bf0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 39:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 39:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0909709d0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 39:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 39:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914f9b10
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 39:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 39:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 39:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090abb0c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 39:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090abb0c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 39:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090abb0c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 39:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090abb0c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 39:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090abb0c0

building command buffer end
Thread 0, Frame 39:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 39:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090abb0c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 39:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e09032a440
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 40:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 40:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 40:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 40:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914fabc0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 40:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 40:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 40:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090abf6c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 40:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090abf6c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 40:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090abf6c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 40:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090abf6c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 40:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090abf6c0

building command buffer end
Thread 0, Frame 40:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 40:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090abf6c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 40:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914e0a50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 41:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 41:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 41:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 41:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 41:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ac3cc0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 41:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ac3cc0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 41:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ac3cc0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 41:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ac3cc0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 41:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ac3cc0

building command buffer end
Thread 0, Frame 41:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 41:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ac3cc0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 41:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0909843d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 42:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 42:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09030c0b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 42:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 42:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914fc0b0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 42:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 42:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 42:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ac82c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 42:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ac82c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 42:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ac82c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 42:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ac82c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 42:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ac82c0

building command buffer end
Thread 0, Frame 42:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 42:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ac82c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 42:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0907d3510
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 43:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 43:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 43:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 43:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914ff7c0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 43:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 43:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 43:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090acc8c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 43:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090acc8c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 43:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090acc8c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 43:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090acc8c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 43:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090acc8c0

building command buffer end
Thread 0, Frame 43:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 43:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090acc8c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 43:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914d6d40
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 44:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 44:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 44:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914fc0b0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 44:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 44:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 44:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ad0ec0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 44:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ad0ec0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 44:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ad0ec0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 44:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ad0ec0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 44:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ad0ec0

building command buffer end
Thread 0, Frame 44:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 44:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ad0ec0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 44:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e09033ee50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 45:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 45:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 45:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091500450
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 45:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 45:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 45:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ad54c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 45:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ad54c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 45:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ad54c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 45:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ad54c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 45:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ad54c0

building command buffer end
Thread 0, Frame 45:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 45:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ad54c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 45:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0907b8800
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 46:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 46:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 46:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091502230
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 46:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 46:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 46:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ad9ac0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 46:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ad9ac0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 46:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ad9ac0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 46:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ad9ac0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 46:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ad9ac0

building command buffer end
Thread 0, Frame 46:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 46:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ad9ac0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 46:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914e8230
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 47:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 47:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 47:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915020b0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 47:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 47:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 47:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ade0c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 47:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ade0c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 47:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ade0c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 47:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ade0c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 47:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ade0c0

building command buffer end
Thread 0, Frame 47:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 47:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ade0c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 47:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0907b8970
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 48:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 48:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 48:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091503e90
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 48:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 48:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 48:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ae26c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 48:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ae26c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 48:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ae26c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 48:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ae26c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 48:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ae26c0

building command buffer end
Thread 0, Frame 48:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 48:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ae26c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 48:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0906b2e00
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 49:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 49:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 49:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091503d10
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 49:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 49:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 49:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ae6cc0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 49:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ae6cc0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 49:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ae6cc0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 49:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ae6cc0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 49:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ae6cc0

building command buffer end
Thread 0, Frame 49:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 49:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ae6cc0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 49:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0909c1740
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 50:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 50:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 50:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914ebe30
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 50:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 50:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 50:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aeb2c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 50:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aeb2c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 50:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aeb2c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 50:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aeb2c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 50:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aeb2c0

building command buffer end
Thread 0, Frame 50:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 50:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090aeb2c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 50:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e09033ed50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 51:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 51:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 51:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914ec0d0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 51:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 51:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 51:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aef8c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 51:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aef8c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 51:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aef8c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 51:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090aef8c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 51:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090aef8c0

building command buffer end
Thread 0, Frame 51:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 51:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090aef8c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 51:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0914f4590
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 52:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 52:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 52:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091507630
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 52:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 52:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 52:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090af3ec0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 52:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090af3ec0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 52:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090af3ec0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 52:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090af3ec0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 52:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090af3ec0

building command buffer end
Thread 0, Frame 52:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 52:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090af3ec0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 52:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0909c1440
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 53:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 53:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 53:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091509250
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 53:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 53:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 53:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090af84c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 53:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090af84c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 53:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090af84c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 53:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090af84c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 53:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090af84c0

building command buffer end
Thread 0, Frame 53:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 53:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090af84c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 53:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e090328df0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 54:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 54:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 54:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915090d0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 54:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 54:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 54:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090afcac0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 54:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090afcac0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 54:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090afcac0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 54:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090afcac0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 54:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090afcac0

building command buffer end
Thread 0, Frame 54:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 54:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090afcac0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 54:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e09033f750
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 55:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 55:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db3f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 55:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091509fa0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 55:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 55:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 55:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b010c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 55:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b010c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 55:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b010c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 55:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b010c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 55:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b010c0

building command buffer end
Thread 0, Frame 55:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 55:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b010c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 55:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914eb220
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 56:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 56:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000d60
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 56:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09150adb0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 56:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 56:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 56:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b056c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 56:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b056c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 56:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b056c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 56:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b056c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 56:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b056c0

building command buffer end
Thread 0, Frame 56:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 56:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b056c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 56:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000e50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 57:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 57:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 57:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09150bc10
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 57:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 57:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 57:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b09cc0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 57:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b09cc0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 57:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b09cc0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 57:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b09cc0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 57:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b09cc0

building command buffer end
Thread 0, Frame 57:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 57:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b09cc0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 57:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 58:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 58:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000d60
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 58:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09150c760
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 58:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 58:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 58:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b0e2c0
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 58:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b0e2c0
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 58:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b0e2c0
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 58:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b0e2c0
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 58:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b0e2c0

building command buffer end
Thread 0, Frame 58:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 58:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b0e2c0
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 58:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000fb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 59:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 59:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09092fb20
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 59:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09150e480
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 59:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 59:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 59:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b12940
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 59:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b12940
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 59:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b12940
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 59:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b12940
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 59:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b12940

building command buffer end
Thread 0, Frame 59:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 59:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b12940
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 59:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0904e10e0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 60:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 60:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 60:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09150e300
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 60:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 60:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 60:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b17040
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 60:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b17040
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 60:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b17040
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 60:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b17040
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 60:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b17040

building command buffer end
Thread 0, Frame 60:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 60:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b17040
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 60:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 61:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 61:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 61:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 61:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 61:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b1b740
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 61:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b1b740
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 61:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b1b740
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 61:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b1b740
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 61:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b1b740

building command buffer end
Thread 0, Frame 61:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 61:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b1b740
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 61:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0909f13e0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 62:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 62:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db450
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 62:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 62:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09150f1e0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 62:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 62:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 62:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b1fe40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 62:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b1fe40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 62:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b1fe40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 62:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b1fe40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 62:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b1fe40

building command buffer end
Thread 0, Frame 62:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 62:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b1fe40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 62:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000d30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 63:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 63:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000d60
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 63:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 63:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09150fff0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 63:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 63:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 63:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b24540
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 63:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b24540
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 63:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b24540
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 63:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b24540
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 63:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b24540

building command buffer end
Thread 0, Frame 63:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 63:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b24540
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 63:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000fb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 64:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 64:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914db450
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 64:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091511ce0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 64:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 64:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 64:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b28c40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 64:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b28c40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 64:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b28c40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 64:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b28c40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 64:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b28c40

building command buffer end
Thread 0, Frame 64:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 64:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b28c40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 64:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0909844d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 65:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 65:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000d60
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 65:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091512bb0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 65:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 65:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 65:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b2d340
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 65:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b2d340
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 65:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b2d340
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 65:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b2d340
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 65:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b2d340

building command buffer end
Thread 0, Frame 65:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 65:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b2d340
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 65:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000d30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 66:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 66:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 66:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091513750
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 66:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 66:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 66:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b31a40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 66:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b31a40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 66:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b31a40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 66:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b31a40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 66:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b31a40

building command buffer end
Thread 0, Frame 66:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 66:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b31a40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 66:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000e50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 67:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 67:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000d60
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 67:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 67:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 67:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b36140
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 67:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b36140
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 67:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b36140
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 67:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b36140
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 67:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b36140

building command buffer end
Thread 0, Frame 67:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 67:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b36140
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 67:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914e0a50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 68:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 68:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 68:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 68:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091517120
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 68:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 68:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 68:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b3a840
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 68:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b3a840
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 68:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b3a840
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 68:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b3a840
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 68:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b3a840

building command buffer end
Thread 0, Frame 68:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 68:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b3a840
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 68:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000c10
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 69:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 69:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 69:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091516d30
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 69:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 69:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 69:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b3ef40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 69:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b3ef40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 69:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b3ef40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 69:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b3ef40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 69:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b3ef40

building command buffer end
Thread 0, Frame 69:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 69:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b3ef40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 69:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090ea2630
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 70:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 70:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 70:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091516430
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 70:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 70:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 70:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b43640
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 70:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b43640
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 70:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b43640
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 70:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b43640
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 70:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b43640

building command buffer end
Thread 0, Frame 70:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 70:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b43640
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 70:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000e50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 71:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 71:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 71:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091517e70
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 71:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 71:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 71:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b47d40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 71:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b47d40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 71:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b47d40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 71:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b47d40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 71:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b47d40

building command buffer end
Thread 0, Frame 71:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 71:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b47d40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 71:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 72:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 72:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 72:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091518c00
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 72:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 72:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 72:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b4c440
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 72:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b4c440
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 72:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b4c440
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 72:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b4c440
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 72:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b4c440

building command buffer end
Thread 0, Frame 72:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 72:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b4c440
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 72:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f940010d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 73:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 73:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 73:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091519990
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 73:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 73:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 73:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b50b40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 73:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b50b40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 73:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b50b40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 73:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b50b40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 73:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b50b40

building command buffer end
Thread 0, Frame 73:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 73:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b50b40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 73:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000c10
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 74:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 74:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 74:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09151a720
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 74:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 74:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 74:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b55240
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 74:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b55240
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 74:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b55240
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 74:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b55240
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 74:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b55240

building command buffer end
Thread 0, Frame 74:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 74:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b55240
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 74:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e09150d550
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 75:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 75:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 75:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09151c4c0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 75:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 75:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 75:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b59940
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 75:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b59940
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 75:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b59940
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 75:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b59940
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 75:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b59940

building command buffer end
Thread 0, Frame 75:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 75:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b59940
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 75:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f940010d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 76:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 76:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 76:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09151c340
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 76:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 76:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 76:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b5e040
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 76:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b5e040
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 76:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b5e040
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 76:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b5e040
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 76:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b5e040

building command buffer end
Thread 0, Frame 76:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 76:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b5e040
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 76:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000bf0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 77:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 77:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 77:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914f77d0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 77:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 77:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 77:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b62740
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 77:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b62740
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 77:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b62740
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 77:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b62740
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 77:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b62740

building command buffer end
Thread 0, Frame 77:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 77:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b62740
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 77:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000e50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 78:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 78:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 78:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914fb6e0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 78:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 78:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 78:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b66e40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 78:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b66e40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 78:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b66e40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 78:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b66e40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 78:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b66e40

building command buffer end
Thread 0, Frame 78:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 78:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b66e40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 78:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000c10
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 79:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 79:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 79:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915203e0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 79:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 79:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 79:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b6b540
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 79:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b6b540
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 79:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b6b540
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 79:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b6b540
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 79:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b6b540

building command buffer end
Thread 0, Frame 79:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 79:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b6b540
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 79:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914d6d40
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 80:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 80:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 80:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915211f0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 80:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 80:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 80:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b6fc40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 80:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b6fc40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 80:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b6fc40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 80:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b6fc40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 80:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b6fc40

building command buffer end
Thread 0, Frame 80:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 80:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b6fc40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 80:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000e50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 81:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 81:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 81:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091522050
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 81:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 81:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 81:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b74340
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 81:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b74340
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 81:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b74340
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 81:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b74340
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 81:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b74340

building command buffer end
Thread 0, Frame 81:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 81:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b74340
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 81:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 82:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 82:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 82:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091522de0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 82:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 82:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 82:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b78a40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 82:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b78a40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 82:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b78a40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 82:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b78a40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 82:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b78a40

building command buffer end
Thread 0, Frame 82:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 82:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b78a40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 82:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f940010d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 83:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 83:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 83:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091523bf0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 83:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 83:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 83:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b7d140
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 83:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b7d140
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 83:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b7d140
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 83:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b7d140
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 83:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b7d140

building command buffer end
Thread 0, Frame 83:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 83:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b7d140
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 83:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000c10
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 84:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 84:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 84:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091524a50
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 84:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 84:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 84:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b81840
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 84:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b81840
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 84:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b81840
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 84:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b81840
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 84:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b81840

building command buffer end
Thread 0, Frame 84:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 84:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b81840
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 84:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e09033f050
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 85:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 85:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 85:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915257e0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 85:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 85:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 85:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b85f40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 85:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b85f40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 85:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b85f40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 85:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b85f40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 85:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b85f40

building command buffer end
Thread 0, Frame 85:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 85:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b85f40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 85:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f940010d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 86:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 86:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 86:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915265f0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 86:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 86:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 86:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b8a640
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 86:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b8a640
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 86:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b8a640
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 86:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b8a640
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 86:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b8a640

building command buffer end
Thread 0, Frame 86:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 86:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b8a640
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 86:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000d30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 87:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 87:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 87:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091528270
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 87:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 87:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 87:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b8ed40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 87:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b8ed40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 87:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b8ed40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 87:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b8ed40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 87:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b8ed40

building command buffer end
Thread 0, Frame 87:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 87:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b8ed40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 87:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090b47d20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 88:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 88:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 88:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915280f0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 88:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 88:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 88:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b93440
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 88:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b93440
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 88:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b93440
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 88:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b93440
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 88:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b93440

building command buffer end
Thread 0, Frame 88:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 88:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b93440
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 88:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0915003b0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 89:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 89:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 89:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091529ed0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 89:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 89:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 89:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b97b40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 89:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b97b40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 89:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b97b40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 89:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b97b40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 89:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b97b40

building command buffer end
Thread 0, Frame 89:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 89:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b97b40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 89:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 90:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 90:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 90:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091529d50
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 90:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 90:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 90:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b9c240
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 90:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b9c240
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 90:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b9c240
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 90:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090b9c240
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 90:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090b9c240

building command buffer end
Thread 0, Frame 90:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 90:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090b9c240
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 90:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000d30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 91:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 91:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 91:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09152baf0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 91:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 91:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 91:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ba0940
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 91:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ba0940
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 91:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ba0940
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 91:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ba0940
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 91:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ba0940

building command buffer end
Thread 0, Frame 91:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 91:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ba0940
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 91:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 92:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 92:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 92:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09152b970
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 92:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 92:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 92:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ba5040
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 92:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ba5040
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 92:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ba5040
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 92:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ba5040
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 92:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ba5040

building command buffer end
Thread 0, Frame 92:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 92:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ba5040
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 92:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000c90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 93:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 93:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 93:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09152c7d0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 93:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 93:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 93:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ba9740
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 93:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ba9740
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 93:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ba9740
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 93:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ba9740
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 93:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ba9740

building command buffer end
Thread 0, Frame 93:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 93:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ba9740
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 93:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090b5e020
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 94:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 94:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 94:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09152e4f0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 94:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 94:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 94:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bade40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 94:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bade40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 94:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bade40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 94:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bade40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 94:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bade40

building command buffer end
Thread 0, Frame 94:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 94:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bade40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 94:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 95:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 95:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 95:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09152e370
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 95:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 95:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 95:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bb2540
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 95:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bb2540
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 95:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bb2540
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 95:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bb2540
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 95:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bb2540

building command buffer end
Thread 0, Frame 95:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 95:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bb2540
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 95:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000c70
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 96:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 96:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 96:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09152f240
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 96:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 96:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 96:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bb6c40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 96:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bb6c40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 96:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bb6c40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 96:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bb6c40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 96:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bb6c40

building command buffer end
Thread 0, Frame 96:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 96:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bb6c40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 96:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 97:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 97:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 97:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091530050
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 97:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 97:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 97:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bbb340
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 97:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bbb340
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 97:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bbb340
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 97:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bbb340
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 97:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bbb340

building command buffer end
Thread 0, Frame 97:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 97:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bbb340
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 97:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000c90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 98:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 98:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 98:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091530eb0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 98:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 98:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 98:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bbfa40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 98:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bbfa40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 98:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bbfa40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 98:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bbfa40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 98:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bbfa40

building command buffer end
Thread 0, Frame 98:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 98:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bbfa40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 98:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0906b2f00
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 99:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 99:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 99:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091531cc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 99:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 99:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 99:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bc4140
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 99:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bc4140
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 99:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bc4140
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 99:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bc4140
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 99:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bc4140

building command buffer end
Thread 0, Frame 99:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 99:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bc4140
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 99:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 100:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 100:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 100:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091532ad0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 100:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 100:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 100:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bc8840
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 100:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bc8840
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 100:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bc8840
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 100:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bc8840
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 100:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bc8840

building command buffer end
Thread 0, Frame 100:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 100:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bc8840
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 100:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f940010d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 101:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 101:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 101:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091504be0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 101:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 101:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 101:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bccf40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 101:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bccf40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 101:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bccf40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 101:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bccf40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 101:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bccf40

building command buffer end
Thread 0, Frame 101:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 101:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bccf40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 101:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 102:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 102:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 102:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091505a70
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 102:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 102:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 102:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bd1640
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 102:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bd1640
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 102:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bd1640
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 102:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bd1640
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 102:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bd1640

building command buffer end
Thread 0, Frame 102:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 102:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bd1640
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 102:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000c90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 103:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 103:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 103:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091537340
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 103:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 103:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 103:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bd5d40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 103:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bd5d40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 103:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bd5d40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 103:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bd5d40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 103:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bd5d40

building command buffer end
Thread 0, Frame 103:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 103:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bd5d40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 103:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090b3ef20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 104:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 104:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 104:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915380d0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 104:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 104:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 104:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bda440
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 104:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bda440
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 104:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bda440
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 104:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bda440
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 104:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bda440

building command buffer end
Thread 0, Frame 104:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 104:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bda440
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 104:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 105:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 105:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 105:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091538ee0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 105:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 105:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 105:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bdeb40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 105:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bdeb40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 105:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bdeb40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 105:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bdeb40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 105:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bdeb40

building command buffer end
Thread 0, Frame 105:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 105:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bdeb40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 105:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000d30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 106:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 106:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 106:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091539cf0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 106:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 106:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 106:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090be3240
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 106:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090be3240
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 106:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090be3240
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 106:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090be3240
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 106:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090be3240

building command buffer end
Thread 0, Frame 106:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 106:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090be3240
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 106:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 107:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 107:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 107:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09153ab00
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 107:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 107:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 107:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090be7940
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 107:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090be7940
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 107:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090be7940
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 107:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090be7940
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 107:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090be7940

building command buffer end
Thread 0, Frame 107:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 107:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090be7940
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 107:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000c90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 108:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 108:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 108:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09153b910
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 108:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 108:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 108:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bec040
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 108:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bec040
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 108:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bec040
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 108:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bec040
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 108:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bec040

building command buffer end
Thread 0, Frame 108:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 108:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bec040
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 108:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e091527150
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 109:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 109:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 109:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09153c720
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 109:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 109:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 109:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bf0740
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 109:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bf0740
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 109:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bf0740
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 109:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bf0740
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 109:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bf0740

building command buffer end
Thread 0, Frame 109:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 109:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bf0740
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 109:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 110:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 110:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 110:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09153d530
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 110:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 110:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 110:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bf4e40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 110:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bf4e40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 110:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bf4e40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 110:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bf4e40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 110:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bf4e40

building command buffer end
Thread 0, Frame 110:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 110:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bf4e40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 110:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000c70
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 111:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 111:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 111:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09153e2c0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 111:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 111:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 111:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bf9540
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 111:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bf9540
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 111:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bf9540
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 111:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bf9540
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 111:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bf9540

building command buffer end
Thread 0, Frame 111:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 111:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bf9540
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 111:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 112:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 112:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 112:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09153ffe0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 112:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 112:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 112:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bfdc40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 112:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bfdc40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 112:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bfdc40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 112:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090bfdc40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 112:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090bfdc40

building command buffer end
Thread 0, Frame 112:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 112:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090bfdc40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 112:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000c90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 113:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 113:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 113:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09153fe60
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 113:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 113:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 113:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c02340
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 113:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c02340
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 113:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c02340
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 113:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c02340
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 113:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c02340

building command buffer end
Thread 0, Frame 113:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 113:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c02340
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 113:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0914dd400
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 114:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 114:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 114:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091541c40
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 114:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 114:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 114:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c06a40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 114:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c06a40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 114:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c06a40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 114:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c06a40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 114:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c06a40

building command buffer end
Thread 0, Frame 114:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 114:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c06a40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 114:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 115:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 115:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 115:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091541ac0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 115:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 115:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 115:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c0b140
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 115:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c0b140
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 115:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c0b140
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 115:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c0b140
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 115:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c0b140

building command buffer end
Thread 0, Frame 115:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 115:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c0b140
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 115:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000bf0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 116:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 116:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 116:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091543820
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 116:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 116:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 116:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c0f840
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 116:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c0f840
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 116:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c0f840
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 116:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c0f840
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 116:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c0f840

building command buffer end
Thread 0, Frame 116:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 116:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c0f840
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 116:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 117:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 117:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 117:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915436a0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 117:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 117:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 117:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c13f40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 117:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c13f40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 117:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c13f40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 117:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c13f40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 117:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c13f40

building command buffer end
Thread 0, Frame 117:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 117:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c13f40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 117:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 118:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 118:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 118:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091544470
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 118:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 118:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 118:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c18640
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 118:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c18640
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 118:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c18640
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 118:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c18640
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 118:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c18640

building command buffer end
Thread 0, Frame 118:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 118:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c18640
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 118:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914f4590
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 119:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 119:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 119:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091546210
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 119:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 119:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 119:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c1cd40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 119:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c1cd40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 119:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c1cd40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 119:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c1cd40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 119:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c1cd40

building command buffer end
Thread 0, Frame 119:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 119:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c1cd40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 119:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e090b74320
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 120:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 120:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 120:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091546090
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 120:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 120:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 120:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c21440
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 120:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c21440
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 120:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c21440
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 120:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c21440
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 120:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c21440

building command buffer end
Thread 0, Frame 120:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 120:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c21440
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 120:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e091530110
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 121:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 121:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 121:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091546ee0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 121:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 121:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 121:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c25b40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 121:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c25b40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 121:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c25b40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 121:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c25b40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 121:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c25b40

building command buffer end
Thread 0, Frame 121:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 121:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c25b40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 121:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090328df0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 122:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 122:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 122:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091548c00
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 122:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 122:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 122:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c2a240
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 122:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c2a240
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 122:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c2a240
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 122:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c2a240
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 122:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c2a240

building command buffer end
Thread 0, Frame 122:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 122:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c2a240
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 122:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0915212b0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 123:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 123:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 123:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091548a80
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 123:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 123:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 123:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c2e940
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 123:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c2e940
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 123:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c2e940
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 123:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c2e940
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 123:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c2e940

building command buffer end
Thread 0, Frame 123:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 123:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c2e940
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 123:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 124:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 124:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 124:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09154a860
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 124:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 124:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 124:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c33040
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 124:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c33040
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 124:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c33040
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 124:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c33040
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 124:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c33040

building command buffer end
Thread 0, Frame 124:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 124:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c33040
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 124:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000e50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 125:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 125:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 125:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09154a6e0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 125:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 125:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 125:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c37740
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 125:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c37740
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 125:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c37740
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 125:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c37740
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 125:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c37740

building command buffer end
Thread 0, Frame 125:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 125:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c37740
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 125:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000c90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 126:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 126:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 126:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 126:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 126:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c3be40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 126:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c3be40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 126:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c3be40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 126:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c3be40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 126:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c3be40

building command buffer end
Thread 0, Frame 126:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 126:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c3be40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 126:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000fb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 127:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 127:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914dc6d0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 127:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 127:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09154c440
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 127:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 127:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 127:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c40540
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 127:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c40540
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 127:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c40540
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 127:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c40540
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 127:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c40540

building command buffer end
Thread 0, Frame 127:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 127:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c40540
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 127:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000bf0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 128:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 128:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 128:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0914dc6d0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 128:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09154e0a0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 128:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 128:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 128:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c44c40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 128:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c44c40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 128:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c44c40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 128:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c44c40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 128:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c44c40

building command buffer end
Thread 0, Frame 128:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 128:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c44c40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 128:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000f70
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 129:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 129:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000d60
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 129:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 129:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09154c2c0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 129:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 129:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 129:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c49340
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 129:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c49340
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 129:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c49340
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 129:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c49340
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 129:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c49340

building command buffer end
Thread 0, Frame 129:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 129:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c49340
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 129:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000d30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 130:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 130:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 130:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 130:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09154df60
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 130:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 130:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 130:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c4da40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 130:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c4da40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 130:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c4da40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 130:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c4da40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 130:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c4da40

building command buffer end
Thread 0, Frame 130:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 130:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c4da40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 130:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f940010d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 131:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 131:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 131:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 131:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 131:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c52140
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 131:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c52140
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 131:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c52140
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 131:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c52140
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 131:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c52140

building command buffer end
Thread 0, Frame 131:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 131:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c52140
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 131:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000e50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 132:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 132:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09154deb0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 132:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 132:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091552790
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 132:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 132:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 132:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c56840
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 132:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c56840
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 132:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c56840
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 132:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c56840
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 132:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c56840

building command buffer end
Thread 0, Frame 132:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 132:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c56840
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 132:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000c90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 133:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 133:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 133:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09154f910
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 133:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 133:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 133:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c5af40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 133:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c5af40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 133:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c5af40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 133:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c5af40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 133:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c5af40

building command buffer end
Thread 0, Frame 133:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 133:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c5af40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 133:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000f70
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 134:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 134:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 134:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091550bc0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 134:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 134:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 134:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c5f640
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 134:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c5f640
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 134:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c5f640
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 134:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c5f640
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 134:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c5f640

building command buffer end
Thread 0, Frame 134:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 134:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c5f640
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 134:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000c10
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 135:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 135:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 135:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915532a0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 135:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 135:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 135:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c63d40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 135:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c63d40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 135:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c63d40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 135:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c63d40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 135:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c63d40

building command buffer end
Thread 0, Frame 135:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 135:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c63d40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 135:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000c90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 136:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 136:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000d60
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 136:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091554030
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 136:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 136:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 136:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c68440
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 136:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c68440
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 136:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c68440
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 136:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c68440
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 136:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c68440

building command buffer end
Thread 0, Frame 136:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 136:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c68440
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 136:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000d30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 137:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 137:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 137:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091554dc0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 137:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 137:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 137:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c6cb40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 137:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c6cb40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 137:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c6cb40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 137:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c6cb40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 137:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c6cb40

building command buffer end
Thread 0, Frame 137:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 137:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c6cb40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 137:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0904e13e0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 138:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 138:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 138:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091555bd0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 138:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 138:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 138:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c71240
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 138:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c71240
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 138:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c71240
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 138:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c71240
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 138:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c71240

building command buffer end
Thread 0, Frame 138:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 138:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c71240
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 138:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f940010d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 139:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 139:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 139:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915569e0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 139:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 139:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 139:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c75940
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 139:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c75940
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 139:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c75940
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 139:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c75940
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 139:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c75940

building command buffer end
Thread 0, Frame 139:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 139:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c75940
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 139:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000d30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 140:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 140:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 140:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915577f0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 140:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 140:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 140:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c7a040
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 140:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c7a040
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 140:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c7a040
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 140:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c7a040
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 140:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c7a040

building command buffer end
Thread 0, Frame 140:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 140:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c7a040
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 140:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 141:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 141:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 141:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091558600
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 141:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 141:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 141:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c7e740
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 141:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c7e740
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 141:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c7e740
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 141:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c7e740
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 141:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c7e740

building command buffer end
Thread 0, Frame 141:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 141:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c7e740
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 141:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 142:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 142:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000d60
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 142:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091559410
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 142:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 142:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 142:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c82e40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 142:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c82e40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 142:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c82e40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 142:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c82e40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 142:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c82e40

building command buffer end
Thread 0, Frame 142:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 142:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c82e40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 142:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090b24520
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 143:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 143:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 143:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09155a220
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 143:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 143:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 143:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c87540
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 143:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c87540
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 143:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c87540
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 143:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c87540
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 143:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c87540

building command buffer end
Thread 0, Frame 143:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 143:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c87540
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 143:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f940010d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 144:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 144:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 144:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09155b030
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 144:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 144:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 144:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c8bc40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 144:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c8bc40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 144:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c8bc40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 144:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c8bc40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 144:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c8bc40

building command buffer end
Thread 0, Frame 144:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 144:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c8bc40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 144:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000cb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 145:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 145:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 145:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09155be40
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 145:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 145:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 145:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c90340
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 145:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c90340
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 145:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c90340
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 145:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c90340
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 145:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c90340

building command buffer end
Thread 0, Frame 145:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 145:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c90340
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 145:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000c90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 146:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 146:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000d60
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 146:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09155cc50
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 146:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 146:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 146:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c94a40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 146:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c94a40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 146:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c94a40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 146:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c94a40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 146:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c94a40

building command buffer end
Thread 0, Frame 146:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 146:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c94a40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 146:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000e50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 147:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 147:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 147:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09155da60
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 147:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 147:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 147:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c99140
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 147:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c99140
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 147:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c99140
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 147:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c99140
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 147:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c99140

building command buffer end
Thread 0, Frame 147:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 147:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c99140
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 147:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e09033f550
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 148:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 148:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 148:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09155e870
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 148:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 148:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 148:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c9d840
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 148:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c9d840
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 148:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c9d840
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 148:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090c9d840
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 148:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090c9d840

building command buffer end
Thread 0, Frame 148:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 148:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090c9d840
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 148:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f940010d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 149:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 149:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000dc0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 149:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091560590
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 149:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 149:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 149:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ca1f40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 149:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ca1f40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 149:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ca1f40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 149:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ca1f40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 149:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ca1f40

building command buffer end
Thread 0, Frame 149:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 149:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ca1f40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 149:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000e50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 150:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 150:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 150:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091560410
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 150:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 150:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 150:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ca6640
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 150:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ca6640
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 150:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ca6640
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 150:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ca6640
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 150:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ca6640

building command buffer end
Thread 0, Frame 150:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 150:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ca6640
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 150:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 151:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 151:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000d60
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 151:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915621f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 151:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 151:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 151:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090caad40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 151:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090caad40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 151:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090caad40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 151:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090caad40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 151:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090caad40

building command buffer end
Thread 0, Frame 151:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 151:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090caad40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 151:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e091522ea0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 152:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 152:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 152:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091562070
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 152:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 152:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 152:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090caf440
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 152:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090caf440
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 152:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090caf440
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 152:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090caf440
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 152:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090caf440

building command buffer end
Thread 0, Frame 152:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 152:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090caf440
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 152:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000d30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 153:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 153:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 153:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091563dd0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 153:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 153:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 153:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cb3b40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 153:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cb3b40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 153:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cb3b40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 153:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cb3b40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 153:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cb3b40

building command buffer end
Thread 0, Frame 153:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 153:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cb3b40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 153:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090bd1620
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 154:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 154:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 154:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091563c50
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 154:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 154:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 154:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cb8240
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 154:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cb8240
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 154:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cb8240
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 154:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cb8240
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 154:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cb8240

building command buffer end
Thread 0, Frame 154:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 154:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cb8240
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 154:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090b85f20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 155:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 155:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 155:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09151d190
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 155:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 155:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 155:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cbc940
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 155:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cbc940
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 155:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cbc940
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 155:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cbc940
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 155:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cbc940

building command buffer end
Thread 0, Frame 155:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 155:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cbc940
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 155:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e090c3be20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 156:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 156:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 156:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09151e0d0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 156:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 156:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 156:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cc1040
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 156:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cc1040
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 156:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cc1040
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 156:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cc1040
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 156:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cc1040

building command buffer end
Thread 0, Frame 156:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 156:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cc1040
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 156:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e091505b30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 157:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 157:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 157:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09151f6f0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 157:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 157:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 157:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cc5740
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 157:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cc5740
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 157:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cc5740
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 157:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cc5740
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 157:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cc5740

building command buffer end
Thread 0, Frame 157:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 157:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cc5740
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 157:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914eb220
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 158:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 158:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 158:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09156b050
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 158:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 158:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 158:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cc9e40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 158:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cc9e40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 158:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cc9e40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 158:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cc9e40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 158:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cc9e40

building command buffer end
Thread 0, Frame 158:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 158:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cc9e40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 158:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e09032a440
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 159:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 159:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 159:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09156aed0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 159:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 159:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 159:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cce540
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 159:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cce540
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 159:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cce540
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 159:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cce540
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 159:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cce540

building command buffer end
Thread 0, Frame 159:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 159:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cce540
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 159:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0906b2b00
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 160:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 160:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 160:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09156bca0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 160:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 160:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 160:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cd2c40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 160:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cd2c40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 160:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cd2c40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 160:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cd2c40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 160:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cd2c40

building command buffer end
Thread 0, Frame 160:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 160:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cd2c40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 160:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914cebc0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 161:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 161:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 161:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09156d9c0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 161:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 161:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 161:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cd7340
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 161:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cd7340
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 161:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cd7340
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 161:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cd7340
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 161:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cd7340

building command buffer end
Thread 0, Frame 161:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 161:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cd7340
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 161:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e090b97b20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 162:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 162:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 162:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09156d840
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 162:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 162:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 162:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cdba40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 162:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cdba40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 162:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cdba40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 162:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cdba40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 162:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cdba40

building command buffer end
Thread 0, Frame 162:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 162:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cdba40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 162:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090b17020
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 163:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 163:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 163:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09156f5a0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 163:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 163:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 163:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ce0140
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 163:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ce0140
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 163:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ce0140
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 163:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ce0140
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 163:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ce0140

building command buffer end
Thread 0, Frame 163:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 163:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ce0140
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 163:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e09150d5b0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 164:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 164:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 164:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09156f420
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 164:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 164:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 164:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ce4840
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 164:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ce4840
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 164:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ce4840
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 164:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ce4840
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 164:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ce4840

building command buffer end
Thread 0, Frame 164:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 164:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ce4840
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 164:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0907d3310
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 165:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 165:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 165:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091570270
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 165:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 165:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 165:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ce8f40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 165:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ce8f40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 165:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ce8f40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 165:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ce8f40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 165:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ce8f40

building command buffer end
Thread 0, Frame 165:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 165:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ce8f40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 165:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090b50b20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 166:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 166:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 166:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091571f90
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 166:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 166:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 166:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ced640
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 166:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ced640
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 166:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ced640
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 166:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090ced640
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 166:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090ced640

building command buffer end
Thread 0, Frame 166:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 166:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090ced640
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 166:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e0914fe7f0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 167:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 167:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 167:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091571e10
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 167:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 167:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 167:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cf1d40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 167:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cf1d40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 167:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cf1d40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 167:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cf1d40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 167:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cf1d40

building command buffer end
Thread 0, Frame 167:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 167:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cf1d40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 167:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0915540f0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 168:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 168:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 168:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091572ce0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 168:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 168:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 168:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cf6440
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 168:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cf6440
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 168:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cf6440
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 168:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cf6440
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 168:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cf6440

building command buffer end
Thread 0, Frame 168:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 168:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cf6440
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 168:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090ba0920
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 169:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 169:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 169:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091573a70
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 169:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 169:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 169:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cfab40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 169:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cfab40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 169:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cfab40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 169:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cfab40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 169:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cfab40

building command buffer end
Thread 0, Frame 169:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 169:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cfab40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 169:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090ba5020
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 170:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 170:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 170:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091574880
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 170:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 170:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 170:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cff240
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 170:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cff240
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 170:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cff240
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 170:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090cff240
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 170:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090cff240

building command buffer end
Thread 0, Frame 170:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 170:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090cff240
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 170:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0914ec940
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 171:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 171:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 171:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091575690
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 171:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 171:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 171:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d03940
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 171:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d03940
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 171:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d03940
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 171:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d03940
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 171:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d03940

building command buffer end
Thread 0, Frame 171:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 171:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d03940
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 171:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e0907e8c80
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 172:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 172:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 172:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915764a0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 172:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 172:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 172:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d08040
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 172:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d08040
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 172:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d08040
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 172:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d08040
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 172:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d08040

building command buffer end
Thread 0, Frame 172:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 172:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d08040
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 172:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090ba9720
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 173:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 173:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 173:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091577170
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 173:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 173:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 173:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d0c740
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 173:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d0c740
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 173:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d0c740
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 173:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d0c740
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 173:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d0c740

building command buffer end
Thread 0, Frame 173:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 173:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d0c740
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 173:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x7f8f94000d30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 174:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 174:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 174:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091578150
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 174:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 174:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 174:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d10e40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 174:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d10e40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 174:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d10e40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 174:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d10e40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 174:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d10e40

building command buffer end
Thread 0, Frame 174:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 174:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d10e40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 174:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090c82e20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 175:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 175:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 175:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091578fe0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 175:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 175:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 175:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d15540
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 175:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d15540
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 175:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d15540
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 175:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d15540
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 175:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d15540

building command buffer end
Thread 0, Frame 175:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 175:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d15540
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 175:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e09152c890
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 176:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 176:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 176:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091579d70
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 176:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 176:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 176:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d19c40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 176:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d19c40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 176:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d19c40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 176:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d19c40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 176:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d19c40

building command buffer end
Thread 0, Frame 176:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 176:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d19c40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 176:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0909843d0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 177:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 177:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 177:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09157ab80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 177:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 177:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 177:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d1e340
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 177:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d1e340
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 177:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d1e340
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 177:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d1e340
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 177:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d1e340

building command buffer end
Thread 0, Frame 177:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 177:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d1e340
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 177:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e09152e430
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 178:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 178:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 178:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 178:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 178:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d22a40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 178:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d22a40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 178:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d22a40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 178:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d22a40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 178:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d22a40

building command buffer end
Thread 0, Frame 178:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 178:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d22a40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 178:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000fb0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 179:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 179:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 179:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 179:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09157b990
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 179:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 179:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 179:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d27140
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 179:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d27140
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 179:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d27140
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 179:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d27140
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 179:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d27140

building command buffer end
Thread 0, Frame 179:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 179:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d27140
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 179:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e090b28c20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 180:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 180:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 180:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 180:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09157c7e0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 180:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 180:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 180:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d2b840
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 180:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d2b840
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 180:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d2b840
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 180:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d2b840
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 180:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d2b840

building command buffer end
Thread 0, Frame 180:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 180:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d2b840
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 180:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090c94a20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 181:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 181:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 181:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09157e3f0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 181:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 181:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 181:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d2ff40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 181:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d2ff40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 181:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d2ff40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 181:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d2ff40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 181:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d2ff40

building command buffer end
Thread 0, Frame 181:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 181:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d2ff40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 181:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090b74320
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 182:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 182:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 182:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09157f160
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 182:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 182:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 182:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d34640
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 182:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d34640
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 182:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d34640
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 182:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d34640
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 182:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d34640

building command buffer end
Thread 0, Frame 182:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 182:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d34640
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 182:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e09155db20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 183:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 183:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 183:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09157fdf0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 183:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 183:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 183:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d38d40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 183:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d38d40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 183:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d38d40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 183:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d38d40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 183:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d38d40

building command buffer end
Thread 0, Frame 183:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 183:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d38d40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 183:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e091517090
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 184:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 184:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 184:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091580ac0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 184:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 184:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 184:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d3d440
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 184:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d3d440
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 184:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d3d440
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 184:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d3d440
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 184:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d3d440

building command buffer end
Thread 0, Frame 184:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 184:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d3d440
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 184:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000f90
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 185:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 185:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 185:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091581a20
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 185:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 185:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 185:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d41b40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 185:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d41b40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 185:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d41b40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 185:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d41b40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 185:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d41b40

building command buffer end
Thread 0, Frame 185:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 185:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d41b40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 185:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0914d8fa0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 186:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 186:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 186:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915827b0
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 186:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 186:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914db230
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 186:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d46240
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 186:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d46240
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 186:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d46240
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 186:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d46240
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 186:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d46240

building command buffer end
Thread 0, Frame 186:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 186:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d46240
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 186:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e091522ea0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 187:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914da380

loop end
loop start
Thread 0, Frame 187:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94000e80
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 187:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915844d0
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 187:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914da380

Thread 0, Frame 187:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e0914d7a30
    fence:                   VkFence = 0x55e0914da380
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 187:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d4a940
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 187:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d4a940
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 187:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d4a940
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 187:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d4a940
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 187:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d4a940

building command buffer end
Thread 0, Frame 187:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914db230

Thread 0, Frame 187:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e0914d7a30
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d4a940
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 187:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090f11440
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 188:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914db230

loop end
loop start
Thread 0, Frame 188:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_TIMEOUT (2):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001200
        pFences[0]:        const VkFence = 0x55e0914db230
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 188:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 188:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 188:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d4f040
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 188:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d4f040
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 188:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d4f040
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 188:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d4f040
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 188:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d4f040

building command buffer end
Thread 0, Frame 188:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 188:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d4f040
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 188:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e09150f2a0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 189:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 189:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 189:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d00460
        pFences[0]:        const VkFence = 0x55e0914da380
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 189:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091586f80
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 189:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 189:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 189:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d53740
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 189:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d53740
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 189:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d53740
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 189:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d53740
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 189:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d53740

building command buffer end
Thread 0, Frame 189:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 189:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d53740
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 189:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x7f8f94000c10
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 190:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 190:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001100
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 190:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091586e70
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 190:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 190:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 190:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d57e40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 190:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d57e40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 190:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d57e40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 190:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d57e40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 190:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d57e40

building command buffer end
Thread 0, Frame 190:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 190:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d57e40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 190:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e091504ca0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 191:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 191:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 191:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091587080
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 191:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 191:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 191:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d5c540
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 191:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d5c540
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 191:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d5c540
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 191:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d5c540
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 191:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d5c540

building command buffer end
Thread 0, Frame 191:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 191:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d5c540
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 191:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0914e0520
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 192:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 192:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001100
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 192:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091587320
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 192:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 192:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 192:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d60c40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 192:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d60c40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 192:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d60c40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 192:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d60c40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 192:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d60c40

building command buffer end
Thread 0, Frame 192:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 192:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d60c40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 192:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090be7920
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 193:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 193:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 193:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e0915889b0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 193:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 193:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 193:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d65340
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 193:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d65340
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 193:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d65340
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 193:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d65340
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 193:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d65340

building command buffer end
Thread 0, Frame 193:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 193:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d65340
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 193:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e09032dd30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 194:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 194:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001100
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 194:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09158a5f0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 194:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 194:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 194:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d69a40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 194:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d69a40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 194:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d69a40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 194:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d69a40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 194:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d69a40

building command buffer end
Thread 0, Frame 194:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 194:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d69a40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 194:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e090cc9e20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 195:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 195:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 195:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09158a470
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 195:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 195:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 195:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d6e140
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 195:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d6e140
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 195:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d6e140
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 195:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d6e140
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 195:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d6e140

building command buffer end
Thread 0, Frame 195:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 195:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d6e140
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 195:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e09032df50
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 196:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 196:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001100
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 196:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09158c250
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 196:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 196:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 196:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d72840
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 196:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d72840
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 196:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d72840
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 196:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d72840
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 196:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d72840

building command buffer end
Thread 0, Frame 196:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 196:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d72840
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 196:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x55e090c49320
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 197:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 197:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 197:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09158c0d0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 197:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 197:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 197:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d76f40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 197:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d76f40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 197:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d76f40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 197:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d76f40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 197:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d76f40

building command buffer end
Thread 0, Frame 197:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 197:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d76f40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 197:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e0914cebc0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 198:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 198:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001100
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 198:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09158cea0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 198:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 198:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 198:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d7b640
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 198:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d7b640
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 198:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d7b640
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 198:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d7b640
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 198:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d7b640

building command buffer end
Thread 0, Frame 198:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 198:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d7b640
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 198:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e091517f30
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 199:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 199:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 199:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09158dcb0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 199:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 199:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 1

Thread 0, Frame 199:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d7fd40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 199:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d7fd40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2530[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 199:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d7fd40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2530
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2530, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e0914d2530[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2530, type: 10, name: NULL
Thread 0, Frame 199:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d7fd40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2530
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 199:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d7fd40

building command buffer end
Thread 0, Frame 199:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 199:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d7fd40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 199:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 1
        pResults:              VkResult* = 0x7f8f94000f70
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 200:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
loop start
Thread 0, Frame 200:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001100
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 200:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e09158ec80
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 200:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 200:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e0914cdb70
    pImageIndex:           uint32_t* = 2

Thread 0, Frame 200:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d84440
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 200:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d84440
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e0914d2b10[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 200:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d84440
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e0914d2b10
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e0914d2b10, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x55e0914d2b10[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e0914d2b10, type: 10, name: NULL
Thread 0, Frame 200:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d84440
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e0914d2b10
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 200:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d84440

building command buffer end
Thread 0, Frame 200:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 200:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d84440
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 200:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 2
        pResults:              VkResult* = 0x55e09084b8c0
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 201:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e09092f990

loop end
loop start
Thread 0, Frame 201:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001080
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 0

Thread 0, Frame 201:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x55e091591fa0
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 201:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffdd8
        pFences[0]:        const VkFence = 0x55e09092f990

Thread 0, Frame 201:
vkAcquireNextImageKHR(device, swapchain, timeout, semaphore, fence, pImageIndex) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    timeout:                uint64_t = 18446744073709551615
    semaphore:           VkSemaphore = 0x55e090215880
    fence:                   VkFence = 0x55e09092f990
    pImageIndex:           uint32_t* = 0

Thread 0, Frame 201:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d88b40
    pBeginInfo: const VkCommandBufferBeginInfo* = 0x7ffe81cfb510:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:               const void* = NULL
        flags: VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo: const VkCommandBufferInheritanceInfo* = UNUSED

building command buffer start
Thread 0, Frame 201:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d88b40
    srcStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dstStageMask: VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 98304 (VK_ACCESS_MEMORY_READ_BIT | VK_ACCESS_MEMORY_WRITE_BIT)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

command: blit_image
SYNC-HAZARD-READ-AFTER-WRITE(ERROR / SPEC): msgNum: -455515022 - Validation Error: [ SYNC-HAZARD-READ-AFTER-WRITE ] Object 0: handle = 0x55e090971980, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0xe4d96472 | vkCmdBlitImage2: Hazard READ_AFTER_WRITE for srcImage VkImage 0x55e090971980[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090971980, type: 10, name: NULL
SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdBlitImage2: Hazard WRITE_AFTER_WRITE for dstImage VkImage 0x55e090306390[], region 0. Access info (usage: SYNC_BLIT_TRANSFER_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdPipelineBarrier, seq_no: 1, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 201:
vkCmdBlitImage2(commandBuffer, pBlitImageInfo) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d88b40
    pBlitImageInfo: const VkBlitImageInfo2* = 0x7ffe81cfe780:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 (1000337004)
        pNext:               const void* = NULL
        srcImage:                VkImage = 0x55e090971980
        srcImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
        dstImage:                VkImage = 0x55e090306390
        dstImageLayout:    VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
        regionCount:            uint32_t = 1
        pRegions:    const VkImageBlit2* = 0x7ffe81cfe430
            pRegions[0]:  const VkImageBlit2 = 0x7ffe81cfe430:
                sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_BLIT_2 (1000337008)
                pNext:               const void* = NULL
                srcSubresource: VkImageSubresourceLayers = 0x7ffe81cfe440:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                srcOffsets:        VkOffset3D[2] = 0x7ffe81cfe450
                    srcOffsets[0]:        VkOffset3D = 0x7ffe81cfe450:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    srcOffsets[1]:        VkOffset3D = 0x7ffe81cfe45c:
                        x:                       int32_t = 1000
                        y:                       int32_t = 1000
                        z:                       int32_t = 1
                dstSubresource: VkImageSubresourceLayers = 0x7ffe81cfe468:
                    aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                    mipLevel:               uint32_t = 0
                    baseArrayLayer:         uint32_t = 0
                    layerCount:             uint32_t = 1
                dstOffsets:        VkOffset3D[2] = 0x7ffe81cfe478
                    dstOffsets[0]:        VkOffset3D = 0x7ffe81cfe478:
                        x:                       int32_t = 0
                        y:                       int32_t = 0
                        z:                       int32_t = 0
                    dstOffsets[1]:        VkOffset3D = 0x7ffe81cfe484:
                        x:                       int32_t = 800
                        y:                       int32_t = 600
                        z:                       int32_t = 1
        filter:                 VkFilter = VK_FILTER_NEAREST (0)

SYNC-HAZARD-WRITE-AFTER-WRITE(ERROR / SPEC): msgNum: 1544472022 - Validation Error: [ SYNC-HAZARD-WRITE-AFTER-WRITE ] Object 0: handle = 0x55e090306390, type = VK_OBJECT_TYPE_IMAGE; | MessageID = 0x5c0ec5d6 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 1 VkImage 0x55e090306390[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_BLIT_TRANSFER_WRITE, write_barriers: 0, command: vkCmdBlitImage2, seq_no: 2, reset_no: 1).
    Objects: 1
        [0] 0x55e090306390, type: 10, name: NULL
Thread 0, Frame 201:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:   VkCommandBuffer = 0x55e090d88b40
    srcStageMask: VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask: VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dependencyFlags: VkDependencyFlags = 1 (VK_DEPENDENCY_BY_REGION_BIT)
    memoryBarrierCount:     uint32_t = 0
    pMemoryBarriers: const VkMemoryBarrier* = 0x7ffe81cfe638
    bufferMemoryBarrierCount: uint32_t = 0
    pBufferMemoryBarriers: const VkBufferMemoryBarrier* = 0x7ffe81cfe6a8
    imageMemoryBarrierCount: uint32_t = 2
    pImageMemoryBarriers: const VkImageMemoryBarrier* = 0x7ffe81cfe8a8
        pImageMemoryBarriers[0]: const VkImageMemoryBarrier = 0x7ffe81cfe8a8:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 2048 (VK_ACCESS_TRANSFER_READ_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL (6)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_GENERAL (1)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090971980
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe8d8:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1
        pImageMemoryBarriers[1]: const VkImageMemoryBarrier = 0x7ffe81cfe8f0:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:               const void* = NULL
            srcAccessMask:     VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:     VkAccessFlags = 0 (VK_ACCESS_NONE)
            oldLayout:         VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:         VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            srcQueueFamilyIndex:    uint32_t = 4294967295
            dstQueueFamilyIndex:    uint32_t = 4294967295
            image:                   VkImage = 0x55e090306390
            subresourceRange: VkImageSubresourceRange = 0x7ffe81cfe920:
                aspectMask:   VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:           uint32_t = 0
                levelCount:             uint32_t = 1
                baseArrayLayer:         uint32_t = 0
                layerCount:             uint32_t = 1

Thread 0, Frame 201:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:   VkCommandBuffer = 0x55e090d88b40

building command buffer end
Thread 0, Frame 201:
vkResetFences(device, fenceCount, pFences) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81cffce8
        pFences[0]:        const VkFence = 0x55e0914cdb70

Thread 0, Frame 201:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfb618
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfb618:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 1
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfb758
                pWaitSemaphores[0]: const VkSemaphore = 0x55e090215880
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfb784
                pWaitDstStageMask[0]: const VkPipelineStageFlags = 65536 (VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
            commandBufferCount:     uint32_t = 1
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfb7a8
                pCommandBuffers[0]: const VkCommandBuffer = 0x55e090d88b40
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfb7d8
    fence:                   VkFence = 0

Thread 0, Frame 201:
vkQueuePresentKHR(queue, pPresentInfo) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    pPresentInfo: const VkPresentInfoKHR* = 0x7ffe81cfdf58:
        sType:           VkStructureType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR (1000001001)
        pNext:               const void* = NULL
        waitSemaphoreCount:     uint32_t = 0
        pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfdc38
        swapchainCount:         uint32_t = 1
        pSwapchains: const VkSwapchainKHR* = 0x7ffe81cfdc68
            pSwapchains[0]: const VkSwapchainKHR = 0x55e0903059f0
        pImageIndices:   const uint32_t* = 0x7ffe81cfdc94
            pImageIndices[0]: const uint32_t = 0
        pResults:              VkResult* = 0x55e090ce8f20
            pResults[0]:            VkResult = VK_SUCCESS (0)

Thread 0, Frame 202:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10
    submitCount:            uint32_t = 1
    pSubmits:    const VkSubmitInfo* = 0x7ffe81cfd338
        pSubmits[0]:  const VkSubmitInfo = 0x7ffe81cfd338:
            sType:           VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:               const void* = NULL
            waitSemaphoreCount:     uint32_t = 0
            pWaitSemaphores: const VkSemaphore* = 0x7ffe81cfd478
            pWaitDstStageMask: const VkPipelineStageFlags* = 0x7ffe81cfd4a4
            commandBufferCount:     uint32_t = 0
            pCommandBuffers: const VkCommandBuffer* = 0x7ffe81cfd4c8
            signalSemaphoreCount:   uint32_t = 0
            pSignalSemaphores: const VkSemaphore* = 0x7ffe81cfd4f8
    fence:                   VkFence = 0x55e0914cdb70

loop end
Thread 0, Frame 202:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7f8f94001100
        pFences[0]:        const VkFence = 0x55e0914cdb70
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 202:
vkWaitForFences(device, fenceCount, pFences, waitAll, timeout) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    fenceCount:             uint32_t = 1
    pFences:          const VkFence* = 0x7ffe81d041c0
        pFences[0]:        const VkFence = 0x55e09092f990
    waitAll:                VkBool32 = 1
    timeout:                uint64_t = 18446744073709551615

Thread 0, Frame 202:
vkDestroySwapchainKHR(device, swapchain, pAllocator) returns void:
    device:                 VkDevice = 0x55e0903eeb60
    swapchain:        VkSwapchainKHR = 0x55e0903059f0
    pAllocator: const VkAllocationCallbacks* = NULL

Thread 0, Frame 202:
vkDestroySurfaceKHR(instance, surface, pAllocator) returns void:
    instance:             VkInstance = 0x55e08fcc8e70
    surface:            VkSurfaceKHR = 0x55e090304a90
    pAllocator: const VkAllocationCallbacks* = NULL

Thread 0, Frame 202:
vkResetCommandPool(device, commandPool, flags) returns VkResult VK_SUCCESS (0):
    device:                 VkDevice = 0x55e0903eeb60
    commandPool:       VkCommandPool = 0x55e090337490
    flags:   VkCommandPoolResetFlags = 0

Thread 0, Frame 202:
vkDestroyCommandPool(device, commandPool, pAllocator) returns void:
    device:                 VkDevice = 0x55e0903eeb60
    commandPool:       VkCommandPool = 0x55e090337490
    pAllocator: const VkAllocationCallbacks* = NULL

Thread 0, Frame 202:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                   VkQueue = 0x55e08faa0c10

